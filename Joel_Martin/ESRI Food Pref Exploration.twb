<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='State' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <aliases>
          <alias key='1' value='State' />
          <alias key='2' value='County' />
        </aliases>
        <members>
          <member alias='State' value='1' />
          <member alias='County' value='2' />
        </members>
      </column>
    </datasource>
    <datasource caption='esri_food_prefs' inline='true' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='esri_food_prefs' name='textscan.14iq3n01445tmx113ac6h0os973b'>
            <connection class='textscan' directory='C:/Users/joelm/Documents/GitHub/AgMRC-Commodities/Joel_Martin/Data' filename='esri_food_prefs.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_county_2010.csv' table='[US_Population_by_county_2010#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='GEOID' ordinal='1' />
            <column datatype='string' name='NAME' ordinal='2' />
            <column datatype='string' name='variable' ordinal='3' />
            <column datatype='integer' name='value' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='esri_food_prefs.csv' table='[esri_food_prefs#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='FIPS' ordinal='0' />
              <column datatype='string' name='stateFIPS' ordinal='1' />
              <column datatype='string' name='countyFIPS' ordinal='2' />
              <column datatype='integer' name='tractFIPS' ordinal='3' />
              <column datatype='real' name='longitude' ordinal='4' />
              <column datatype='real' name='latitude' ordinal='5' />
              <column datatype='real' name='avgFoodExpenditure_2000' ordinal='6' />
              <column datatype='real' name='avgFoodHomeExpenditure_2000' ordinal='7' />
              <column datatype='real' name='avgMeatHomeExpenditure_2000' ordinal='8' />
              <column datatype='real' name='avgFruitsVegetablesHomeExpenditure_2000' ordinal='9' />
              <column datatype='real' name='avgFoodAwayExpenditure_2000' ordinal='10' />
              <column datatype='real' name='avgFoodExpenditure_2010' ordinal='11' />
              <column datatype='real' name='avgFoodHomeExpenditure_2010' ordinal='12' />
              <column datatype='real' name='avgMeatHomeExpenditure_2010' ordinal='13' />
              <column datatype='real' name='avgFruitsVegetablesHomeExpenditure_2010' ordinal='14' />
              <column datatype='real' name='avgFoodAwayExpenditure_2010' ordinal='15' />
              <column datatype='real' name='avgBakeryCerealHomeExpenditure_2000' ordinal='16' />
              <column datatype='real' name='avgFlourHomeExpenditure_2000' ordinal='17' />
              <column datatype='real' name='avgRiceHomeExpenditure_2000' ordinal='18' />
              <column datatype='real' name='avgPastaCornMealHomeExpenditure_2000' ordinal='19' />
              <column datatype='real' name='avgBreadHomeExpenditure_2000' ordinal='20' />
              <column datatype='real' name='avgBeefHomeExpenditure_2000' ordinal='21' />
              <column datatype='real' name='avgPorkHomeExpenditure_2000' ordinal='22' />
              <column datatype='real' name='avgPoultryHomeExpenditure_2000' ordinal='23' />
              <column datatype='real' name='avgSeafoodHomeExpenditure_2000' ordinal='24' />
              <column datatype='real' name='avgEggsHomeExpenditure_2000' ordinal='25' />
              <column datatype='real' name='avgDairyHomeExpenditure_2000' ordinal='26' />
              <column datatype='real' name='avgLunchAwayHomeExpenditure_2000' ordinal='27' />
              <column datatype='real' name='avgDinnerAwayHomeExpenditure_2000' ordinal='28' />
              <column datatype='real' name='avgBreakfastAwayHomeExpenditure_2000' ordinal='29' />
              <column datatype='real' name='avgAlcoholicBeverageExpenditure_2000' ordinal='30' />
              <column datatype='real' name='avgBakeryCerealHomeExpenditure_2010' ordinal='31' />
              <column datatype='real' name='avgFlourHomeExpenditure_2010' ordinal='32' />
              <column datatype='real' name='avgRiceHomeExpenditure_2010' ordinal='33' />
              <column datatype='real' name='avgPastaCornMealHomeExpenditure_2010' ordinal='34' />
              <column datatype='real' name='avgBreadHomeExpenditure_2010' ordinal='35' />
              <column datatype='real' name='avgBeefHomeExpenditure_2010' ordinal='36' />
              <column datatype='real' name='avgPorkHomeExpenditure_2010' ordinal='37' />
              <column datatype='real' name='avgPoultryHomeExpenditure_2010' ordinal='38' />
              <column datatype='real' name='avgSeafoodHomeExpenditure_2010' ordinal='39' />
              <column datatype='real' name='avgEggsHomeExpenditure_2010' ordinal='40' />
              <column datatype='real' name='avgDairyHomeExpenditure_2010' ordinal='41' />
              <column datatype='real' name='avgLunchAwayHomeExpenditure_2010' ordinal='42' />
              <column datatype='real' name='avgDinnerAwayHomeExpenditure_2010' ordinal='43' />
              <column datatype='real' name='avgBreakfastAwayHomeExpenditure_2010' ordinal='44' />
              <column datatype='real' name='avgAlcoholicBeverageExpenditure_2010' ordinal='45' />
            </columns>
          </relation>
          <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_county_2010.csv' table='[US_Population_by_county_2010#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='GEOID' ordinal='1' />
              <column datatype='string' name='NAME' ordinal='2' />
              <column datatype='string' name='variable' ordinal='3' />
              <column datatype='integer' name='value' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_state_2000.csv' table='[US_Population_by_state_2000#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='GEOID' ordinal='1' />
              <column datatype='string' name='NAME' ordinal='2' />
              <column datatype='string' name='variable' ordinal='3' />
              <column datatype='integer' name='value' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[F1 (US_Population_by_county_2010.csv)]' value='[US_Population_by_county_2010.csv].[F1]' />
          <map key='[F1]' value='[US_Population_by_state_2000.csv].[F1]' />
          <map key='[FIPS]' value='[esri_food_prefs.csv].[FIPS]' />
          <map key='[GEOID (US_Population_by_county_2010.csv)]' value='[US_Population_by_county_2010.csv].[GEOID]' />
          <map key='[GEOID]' value='[US_Population_by_state_2000.csv].[GEOID]' />
          <map key='[NAME (US_Population_by_county_2010.csv)]' value='[US_Population_by_county_2010.csv].[NAME]' />
          <map key='[NAME]' value='[US_Population_by_state_2000.csv].[NAME]' />
          <map key='[avgAlcoholicBeverageExpenditure_2000]' value='[esri_food_prefs.csv].[avgAlcoholicBeverageExpenditure_2000]' />
          <map key='[avgAlcoholicBeverageExpenditure_2010]' value='[esri_food_prefs.csv].[avgAlcoholicBeverageExpenditure_2010]' />
          <map key='[avgBakeryCerealHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgBakeryCerealHomeExpenditure_2000]' />
          <map key='[avgBakeryCerealHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgBakeryCerealHomeExpenditure_2010]' />
          <map key='[avgBeefHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgBeefHomeExpenditure_2000]' />
          <map key='[avgBeefHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgBeefHomeExpenditure_2010]' />
          <map key='[avgBreadHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgBreadHomeExpenditure_2000]' />
          <map key='[avgBreadHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgBreadHomeExpenditure_2010]' />
          <map key='[avgBreakfastAwayHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgBreakfastAwayHomeExpenditure_2000]' />
          <map key='[avgBreakfastAwayHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgBreakfastAwayHomeExpenditure_2010]' />
          <map key='[avgDairyHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgDairyHomeExpenditure_2000]' />
          <map key='[avgDairyHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgDairyHomeExpenditure_2010]' />
          <map key='[avgDinnerAwayHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgDinnerAwayHomeExpenditure_2000]' />
          <map key='[avgDinnerAwayHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgDinnerAwayHomeExpenditure_2010]' />
          <map key='[avgEggsHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgEggsHomeExpenditure_2000]' />
          <map key='[avgEggsHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgEggsHomeExpenditure_2010]' />
          <map key='[avgFlourHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgFlourHomeExpenditure_2000]' />
          <map key='[avgFlourHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgFlourHomeExpenditure_2010]' />
          <map key='[avgFoodAwayExpenditure_2000]' value='[esri_food_prefs.csv].[avgFoodAwayExpenditure_2000]' />
          <map key='[avgFoodAwayExpenditure_2010]' value='[esri_food_prefs.csv].[avgFoodAwayExpenditure_2010]' />
          <map key='[avgFoodExpenditure_2000]' value='[esri_food_prefs.csv].[avgFoodExpenditure_2000]' />
          <map key='[avgFoodExpenditure_2010]' value='[esri_food_prefs.csv].[avgFoodExpenditure_2010]' />
          <map key='[avgFoodHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgFoodHomeExpenditure_2000]' />
          <map key='[avgFoodHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgFoodHomeExpenditure_2010]' />
          <map key='[avgFruitsVegetablesHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgFruitsVegetablesHomeExpenditure_2000]' />
          <map key='[avgFruitsVegetablesHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgFruitsVegetablesHomeExpenditure_2010]' />
          <map key='[avgLunchAwayHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgLunchAwayHomeExpenditure_2000]' />
          <map key='[avgLunchAwayHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgLunchAwayHomeExpenditure_2010]' />
          <map key='[avgMeatHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgMeatHomeExpenditure_2000]' />
          <map key='[avgMeatHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgMeatHomeExpenditure_2010]' />
          <map key='[avgPastaCornMealHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgPastaCornMealHomeExpenditure_2000]' />
          <map key='[avgPastaCornMealHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgPastaCornMealHomeExpenditure_2010]' />
          <map key='[avgPorkHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgPorkHomeExpenditure_2000]' />
          <map key='[avgPorkHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgPorkHomeExpenditure_2010]' />
          <map key='[avgPoultryHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgPoultryHomeExpenditure_2000]' />
          <map key='[avgPoultryHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgPoultryHomeExpenditure_2010]' />
          <map key='[avgRiceHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgRiceHomeExpenditure_2000]' />
          <map key='[avgRiceHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgRiceHomeExpenditure_2010]' />
          <map key='[avgSeafoodHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgSeafoodHomeExpenditure_2000]' />
          <map key='[avgSeafoodHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgSeafoodHomeExpenditure_2010]' />
          <map key='[countyFIPS]' value='[esri_food_prefs.csv].[countyFIPS]' />
          <map key='[latitude]' value='[esri_food_prefs.csv].[latitude]' />
          <map key='[longitude]' value='[esri_food_prefs.csv].[longitude]' />
          <map key='[stateFIPS]' value='[esri_food_prefs.csv].[stateFIPS]' />
          <map key='[tractFIPS]' value='[esri_food_prefs.csv].[tractFIPS]' />
          <map key='[value (US_Population_by_county_2010.csv)]' value='[US_Population_by_county_2010.csv].[value]' />
          <map key='[value]' value='[US_Population_by_state_2000.csv].[value]' />
          <map key='[variable (US_Population_by_county_2010.csv)]' value='[US_Population_by_county_2010.csv].[variable]' />
          <map key='[variable]' value='[US_Population_by_state_2000.csv].[variable]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stateFIPS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stateFIPS]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>stateFIPS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countyFIPS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countyFIPS]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>countyFIPS</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tractFIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tractFIPS]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>tractFIPS</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFoodExpenditure_2000</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFoodHomeExpenditure_2000</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgMeatHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgMeatHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgMeatHomeExpenditure_2000</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFruitsVegetablesHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFruitsVegetablesHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFruitsVegetablesHomeExpenditure_2000</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodAwayExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodAwayExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFoodAwayExpenditure_2000</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFoodExpenditure_2010</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFoodHomeExpenditure_2010</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgMeatHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgMeatHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgMeatHomeExpenditure_2010</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFruitsVegetablesHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFruitsVegetablesHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFruitsVegetablesHomeExpenditure_2010</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodAwayExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodAwayExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFoodAwayExpenditure_2010</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBakeryCerealHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBakeryCerealHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgBakeryCerealHomeExpenditure_2000</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFlourHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFlourHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFlourHomeExpenditure_2000</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgRiceHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgRiceHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgRiceHomeExpenditure_2000</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPastaCornMealHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPastaCornMealHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgPastaCornMealHomeExpenditure_2000</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBreadHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBreadHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgBreadHomeExpenditure_2000</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBeefHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBeefHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgBeefHomeExpenditure_2000</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPorkHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPorkHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgPorkHomeExpenditure_2000</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPoultryHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPoultryHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgPoultryHomeExpenditure_2000</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgSeafoodHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgSeafoodHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgSeafoodHomeExpenditure_2000</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgEggsHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgEggsHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgEggsHomeExpenditure_2000</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgDairyHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgDairyHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgDairyHomeExpenditure_2000</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgLunchAwayHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgLunchAwayHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgLunchAwayHomeExpenditure_2000</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgDinnerAwayHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgDinnerAwayHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgDinnerAwayHomeExpenditure_2000</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBreakfastAwayHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBreakfastAwayHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgBreakfastAwayHomeExpenditure_2000</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgAlcoholicBeverageExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgAlcoholicBeverageExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgAlcoholicBeverageExpenditure_2000</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBakeryCerealHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBakeryCerealHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgBakeryCerealHomeExpenditure_2010</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFlourHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFlourHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFlourHomeExpenditure_2010</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgRiceHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgRiceHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgRiceHomeExpenditure_2010</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPastaCornMealHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPastaCornMealHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgPastaCornMealHomeExpenditure_2010</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBreadHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBreadHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgBreadHomeExpenditure_2010</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBeefHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBeefHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgBeefHomeExpenditure_2010</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPorkHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPorkHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgPorkHomeExpenditure_2010</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPoultryHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPoultryHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgPoultryHomeExpenditure_2010</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgSeafoodHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgSeafoodHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgSeafoodHomeExpenditure_2010</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgEggsHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgEggsHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgEggsHomeExpenditure_2010</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgDairyHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgDairyHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgDairyHomeExpenditure_2010</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgLunchAwayHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgLunchAwayHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgLunchAwayHomeExpenditure_2010</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgDinnerAwayHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgDinnerAwayHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgDinnerAwayHomeExpenditure_2010</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBreakfastAwayHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBreakfastAwayHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgBreakfastAwayHomeExpenditure_2010</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgAlcoholicBeverageExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgAlcoholicBeverageExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgAlcoholicBeverageExpenditure_2010</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US_Population_by_county_2010.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (US_Population_by_county_2010.csv)]</local-name>
            <parent-name>[US_Population_by_county_2010.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEOID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GEOID (US_Population_by_county_2010.csv)]</local-name>
            <parent-name>[US_Population_by_county_2010.csv]</parent-name>
            <remote-alias>GEOID</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME (US_Population_by_county_2010.csv)]</local-name>
            <parent-name>[US_Population_by_county_2010.csv]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable (US_Population_by_county_2010.csv)]</local-name>
            <parent-name>[US_Population_by_county_2010.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value (US_Population_by_county_2010.csv)]</local-name>
            <parent-name>[US_Population_by_county_2010.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US_Population_by_state_2000.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[US_Population_by_state_2000.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEOID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GEOID]</local-name>
            <parent-name>[US_Population_by_state_2000.csv]</parent-name>
            <remote-alias>GEOID</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME]</local-name>
            <parent-name>[US_Population_by_state_2000.csv]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[US_Population_by_state_2000.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[US_Population_by_state_2000.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]&quot;' value='2000' />
          <alias key='&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]&quot;' value='2010' />
        </aliases>
      </column>
      <column caption='Map State or County Level' datatype='integer' name='[Calculation_1192890997300523009]' role='dimension' semantic-role='[State].[Name]' type='ordinal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column caption='CountyLevel' datatype='string' name='[Calculation_1192890997300772866]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when 1 then Null&#13;&#10;when 2 then [countyFIPS]&#13;&#10;END' />
      </column>
      <column caption='F1 (US Population by county 2010.csv)' datatype='integer' name='[F1 (US_Population_by_county_2010.csv)]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
      <column caption='GEOID (US Population by county 2010.csv)' datatype='string' default-role='measure' default-type='quantitative' name='[GEOID (US_Population_by_county_2010.csv)]' role='dimension' type='nominal' />
      <column caption='Geoid' datatype='string' default-role='measure' default-type='quantitative' name='[GEOID]' role='dimension' type='nominal' />
      <column caption='NAME (US Population by county 2010.csv)' datatype='string' name='[NAME (US_Population_by_county_2010.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='US_Population_by_county_2010.csv' datatype='table' name='[__tableau_internal_object_id__].[US_Population_by_county_2010.csv_F3C9BE59A41643788B90415A2F634B85]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='US_Population_by_state_2000.csv' datatype='table' name='[__tableau_internal_object_id__].[US_Population_by_state_2000.csv_378A4D7302BB47F881DCA7B619D762CB]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='esri_food_prefs.csv' datatype='table' name='[__tableau_internal_object_id__].[esri_food_prefs.csv_8EF5EFD3848344679594C59F129CB127]' role='measure' type='quantitative' />
      <column caption='avgAlcoholicBeverageExpenditure 2000' datatype='real' name='[avgAlcoholicBeverageExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgAlcoholicBeverageExpenditure 2010' datatype='real' name='[avgAlcoholicBeverageExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgBakeryCerealHomeExpenditure 2000' datatype='real' name='[avgBakeryCerealHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgBakeryCerealHomeExpenditure 2010' datatype='real' name='[avgBakeryCerealHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgBeefHomeExpenditure 2000' datatype='real' name='[avgBeefHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgBeefHomeExpenditure 2010' datatype='real' name='[avgBeefHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgBreadHomeExpenditure 2000' datatype='real' name='[avgBreadHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgBreadHomeExpenditure 2010' datatype='real' name='[avgBreadHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgBreakfastAwayHomeExpenditure 2000' datatype='real' name='[avgBreakfastAwayHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgBreakfastAwayHomeExpenditure 2010' datatype='real' name='[avgBreakfastAwayHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgDairyHomeExpenditure 2000' datatype='real' name='[avgDairyHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgDairyHomeExpenditure 2010' datatype='real' name='[avgDairyHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgDinnerAwayHomeExpenditure 2000' datatype='real' name='[avgDinnerAwayHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgDinnerAwayHomeExpenditure 2010' datatype='real' name='[avgDinnerAwayHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgEggsHomeExpenditure 2000' datatype='real' name='[avgEggsHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgEggsHomeExpenditure 2010' datatype='real' name='[avgEggsHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgFlourHomeExpenditure 2000' datatype='real' name='[avgFlourHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgFlourHomeExpenditure 2010' datatype='real' name='[avgFlourHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgFoodAwayExpenditure 2000' datatype='real' name='[avgFoodAwayExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgFoodAwayExpenditure 2010' datatype='real' name='[avgFoodAwayExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgFoodExpenditure 2000' datatype='real' name='[avgFoodExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgFoodExpenditure 2010' datatype='real' name='[avgFoodExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgFoodHomeExpenditure 2000' datatype='real' name='[avgFoodHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgFoodHomeExpenditure 2010' datatype='real' name='[avgFoodHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgFruitsVegetablesHomeExpenditure 2000' datatype='real' name='[avgFruitsVegetablesHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgFruitsVegetablesHomeExpenditure 2010' datatype='real' name='[avgFruitsVegetablesHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgLunchAwayHomeExpenditure 2000' datatype='real' name='[avgLunchAwayHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgLunchAwayHomeExpenditure 2010' datatype='real' name='[avgLunchAwayHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgMeatHomeExpenditure 2000' datatype='real' name='[avgMeatHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgMeatHomeExpenditure 2010' datatype='real' name='[avgMeatHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgPastaCornMealHomeExpenditure 2000' datatype='real' name='[avgPastaCornMealHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgPastaCornMealHomeExpenditure 2010' datatype='real' name='[avgPastaCornMealHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgPorkHomeExpenditure 2000' datatype='real' name='[avgPorkHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgPorkHomeExpenditure 2010' datatype='real' name='[avgPorkHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgPoultryHomeExpenditure 2000' datatype='real' name='[avgPoultryHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgPoultryHomeExpenditure 2010' datatype='real' name='[avgPoultryHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgRiceHomeExpenditure 2000' datatype='real' name='[avgRiceHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgRiceHomeExpenditure 2010' datatype='real' name='[avgRiceHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgSeafoodHomeExpenditure 2000' datatype='real' name='[avgSeafoodHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgSeafoodHomeExpenditure 2010' datatype='real' name='[avgSeafoodHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='County FIPS' datatype='string' name='[countyFIPS]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='State FIPS' datatype='string' name='[stateFIPS]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;01&quot;' value='&quot;Alabama&quot;' />
          <semantic-value key='&quot;04&quot;' value='&quot;Arizona&quot;' />
          <semantic-value key='&quot;05&quot;' value='&quot;Arkansas&quot;' />
          <semantic-value key='&quot;06&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;08&quot;' value='&quot;Colorado&quot;' />
          <semantic-value key='&quot;09&quot;' value='&quot;Connecticut&quot;' />
          <semantic-value key='&quot;10&quot;' value='&quot;Delaware&quot;' />
          <semantic-value key='&quot;11&quot;' value='&quot;District of Columbia&quot;' />
          <semantic-value key='&quot;12&quot;' value='&quot;Florida&quot;' />
          <semantic-value key='&quot;13&quot;' value='&quot;Georgia&quot;' />
          <semantic-value key='&quot;16&quot;' value='&quot;Idaho&quot;' />
          <semantic-value key='&quot;17&quot;' value='&quot;Illinois&quot;' />
          <semantic-value key='&quot;18&quot;' value='&quot;Indiana&quot;' />
          <semantic-value key='&quot;19&quot;' value='&quot;Iowa&quot;' />
          <semantic-value key='&quot;20&quot;' value='&quot;Kansas&quot;' />
          <semantic-value key='&quot;21&quot;' value='&quot;Kentucky&quot;' />
          <semantic-value key='&quot;22&quot;' value='&quot;Louisiana&quot;' />
          <semantic-value key='&quot;23&quot;' value='&quot;Maine&quot;' />
          <semantic-value key='&quot;24&quot;' value='&quot;Maryland&quot;' />
          <semantic-value key='&quot;25&quot;' value='&quot;Massachusetts&quot;' />
          <semantic-value key='&quot;26&quot;' value='&quot;Michigan&quot;' />
          <semantic-value key='&quot;27&quot;' value='&quot;Minnesota&quot;' />
          <semantic-value key='&quot;28&quot;' value='&quot;Mississippi&quot;' />
          <semantic-value key='&quot;29&quot;' value='&quot;Missouri&quot;' />
          <semantic-value key='&quot;30&quot;' value='&quot;Montana&quot;' />
          <semantic-value key='&quot;31&quot;' value='&quot;Nebraska&quot;' />
          <semantic-value key='&quot;32&quot;' value='&quot;Nevada&quot;' />
          <semantic-value key='&quot;33&quot;' value='&quot;New Hampshire&quot;' />
          <semantic-value key='&quot;34&quot;' value='&quot;New Jersey&quot;' />
          <semantic-value key='&quot;35&quot;' value='&quot;New Mexico&quot;' />
          <semantic-value key='&quot;36&quot;' value='&quot;New York&quot;' />
          <semantic-value key='&quot;37&quot;' value='&quot;North Carolina&quot;' />
          <semantic-value key='&quot;38&quot;' value='&quot;North Dakota&quot;' />
          <semantic-value key='&quot;39&quot;' value='&quot;Ohio&quot;' />
          <semantic-value key='&quot;40&quot;' value='&quot;Oklahoma&quot;' />
          <semantic-value key='&quot;41&quot;' value='&quot;Oregon&quot;' />
          <semantic-value key='&quot;42&quot;' value='&quot;Pennsylvania&quot;' />
          <semantic-value key='&quot;44&quot;' value='&quot;Rhode Island&quot;' />
          <semantic-value key='&quot;45&quot;' value='&quot;South Carolina&quot;' />
          <semantic-value key='&quot;46&quot;' value='&quot;South Dakota&quot;' />
          <semantic-value key='&quot;47&quot;' value='&quot;Tennessee&quot;' />
          <semantic-value key='&quot;48&quot;' value='&quot;Texas&quot;' />
          <semantic-value key='&quot;49&quot;' value='&quot;Utah&quot;' />
          <semantic-value key='&quot;50&quot;' value='&quot;Vermont&quot;' />
          <semantic-value key='&quot;51&quot;' value='&quot;Virginia&quot;' />
          <semantic-value key='&quot;53&quot;' value='&quot;Washington&quot;' />
          <semantic-value key='&quot;54&quot;' value='&quot;West Virginia&quot;' />
          <semantic-value key='&quot;55&quot;' value='&quot;Wisconsin&quot;' />
          <semantic-value key='&quot;56&quot;' value='&quot;Wyoming&quot;' />
        </semantic-values>
      </column>
      <column caption='Tract FIPS' datatype='integer' name='[tractFIPS]' role='measure' type='quantitative' />
      <column caption='value (US Population by county 2010.csv)' datatype='integer' name='[value (US_Population_by_county_2010.csv)]' role='measure' type='quantitative' />
      <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative' />
      <column caption='variable (US Population by county 2010.csv)' datatype='string' name='[variable (US_Population_by_county_2010.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
      <column-instance column='[stateFIPS]' derivation='Attribute' name='[attr:stateFIPS:nk]' pivot='key' type='nominal' />
      <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FIPS]' derivation='Sum' name='[sum:FIPS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgAlcoholicBeverageExpenditure_2000]' derivation='Sum' name='[sum:avgAlcoholicBeverageExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgAlcoholicBeverageExpenditure_2010]' derivation='Sum' name='[sum:avgAlcoholicBeverageExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBakeryCerealHomeExpenditure_2000]' derivation='Sum' name='[sum:avgBakeryCerealHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBakeryCerealHomeExpenditure_2010]' derivation='Sum' name='[sum:avgBakeryCerealHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBeefHomeExpenditure_2000]' derivation='Sum' name='[sum:avgBeefHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBeefHomeExpenditure_2010]' derivation='Sum' name='[sum:avgBeefHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBreadHomeExpenditure_2000]' derivation='Sum' name='[sum:avgBreadHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBreadHomeExpenditure_2010]' derivation='Sum' name='[sum:avgBreadHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBreakfastAwayHomeExpenditure_2000]' derivation='Sum' name='[sum:avgBreakfastAwayHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBreakfastAwayHomeExpenditure_2010]' derivation='Sum' name='[sum:avgBreakfastAwayHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgDairyHomeExpenditure_2000]' derivation='Sum' name='[sum:avgDairyHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgDairyHomeExpenditure_2010]' derivation='Sum' name='[sum:avgDairyHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgDinnerAwayHomeExpenditure_2000]' derivation='Sum' name='[sum:avgDinnerAwayHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgDinnerAwayHomeExpenditure_2010]' derivation='Sum' name='[sum:avgDinnerAwayHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgEggsHomeExpenditure_2000]' derivation='Sum' name='[sum:avgEggsHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgPoultryHomeExpenditure_2000]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgPoultryHomeExpenditure_2010]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[countyFIPS]' derivation='Sum' name='[sum:countyFIPS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tractFIPS]' derivation='Sum' name='[sum:tractFIPS:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='State FIPS, County FIPS'>
          <field>[stateFIPS]</field>
          <field>[countyFIPS]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.969415' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0305851' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgAlcoholicBeverageExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[attr:stateFIPS:nk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:latitude:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBeefHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBakeryCerealHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:longitude:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgDairyHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgDinnerAwayHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:countyFIPS:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBreakfastAwayHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:tractFIPS:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBreadHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBreadHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgDairyHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgDinnerAwayHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgEggsHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBakeryCerealHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgAlcoholicBeverageExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBreakfastAwayHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBeefHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:FIPS:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='State' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
          <aliases>
            <alias key='1' value='State' />
            <alias key='2' value='County' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='US_Population_by_county_2010.csv' id='US_Population_by_county_2010.csv_F3C9BE59A41643788B90415A2F634B85'>
            <properties context=''>
              <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_county_2010.csv' table='[US_Population_by_county_2010#csv]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='GEOID' ordinal='1' />
                  <column datatype='string' name='NAME' ordinal='2' />
                  <column datatype='string' name='variable' ordinal='3' />
                  <column datatype='integer' name='value' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='US_Population_by_state_2000.csv' id='US_Population_by_state_2000.csv_378A4D7302BB47F881DCA7B619D762CB'>
            <properties context=''>
              <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_state_2000.csv' table='[US_Population_by_state_2000#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='GEOID' ordinal='1' />
                  <column datatype='string' name='NAME' ordinal='2' />
                  <column datatype='string' name='variable' ordinal='3' />
                  <column datatype='integer' name='value' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='esri_food_prefs.csv' id='esri_food_prefs.csv_8EF5EFD3848344679594C59F129CB127'>
            <properties context=''>
              <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='esri_food_prefs.csv' table='[esri_food_prefs#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='FIPS' ordinal='0' />
                  <column datatype='string' name='stateFIPS' ordinal='1' />
                  <column datatype='string' name='countyFIPS' ordinal='2' />
                  <column datatype='integer' name='tractFIPS' ordinal='3' />
                  <column datatype='real' name='longitude' ordinal='4' />
                  <column datatype='real' name='latitude' ordinal='5' />
                  <column datatype='real' name='avgFoodExpenditure_2000' ordinal='6' />
                  <column datatype='real' name='avgFoodHomeExpenditure_2000' ordinal='7' />
                  <column datatype='real' name='avgMeatHomeExpenditure_2000' ordinal='8' />
                  <column datatype='real' name='avgFruitsVegetablesHomeExpenditure_2000' ordinal='9' />
                  <column datatype='real' name='avgFoodAwayExpenditure_2000' ordinal='10' />
                  <column datatype='real' name='avgFoodExpenditure_2010' ordinal='11' />
                  <column datatype='real' name='avgFoodHomeExpenditure_2010' ordinal='12' />
                  <column datatype='real' name='avgMeatHomeExpenditure_2010' ordinal='13' />
                  <column datatype='real' name='avgFruitsVegetablesHomeExpenditure_2010' ordinal='14' />
                  <column datatype='real' name='avgFoodAwayExpenditure_2010' ordinal='15' />
                  <column datatype='real' name='avgBakeryCerealHomeExpenditure_2000' ordinal='16' />
                  <column datatype='real' name='avgFlourHomeExpenditure_2000' ordinal='17' />
                  <column datatype='real' name='avgRiceHomeExpenditure_2000' ordinal='18' />
                  <column datatype='real' name='avgPastaCornMealHomeExpenditure_2000' ordinal='19' />
                  <column datatype='real' name='avgBreadHomeExpenditure_2000' ordinal='20' />
                  <column datatype='real' name='avgBeefHomeExpenditure_2000' ordinal='21' />
                  <column datatype='real' name='avgPorkHomeExpenditure_2000' ordinal='22' />
                  <column datatype='real' name='avgPoultryHomeExpenditure_2000' ordinal='23' />
                  <column datatype='real' name='avgSeafoodHomeExpenditure_2000' ordinal='24' />
                  <column datatype='real' name='avgEggsHomeExpenditure_2000' ordinal='25' />
                  <column datatype='real' name='avgDairyHomeExpenditure_2000' ordinal='26' />
                  <column datatype='real' name='avgLunchAwayHomeExpenditure_2000' ordinal='27' />
                  <column datatype='real' name='avgDinnerAwayHomeExpenditure_2000' ordinal='28' />
                  <column datatype='real' name='avgBreakfastAwayHomeExpenditure_2000' ordinal='29' />
                  <column datatype='real' name='avgAlcoholicBeverageExpenditure_2000' ordinal='30' />
                  <column datatype='real' name='avgBakeryCerealHomeExpenditure_2010' ordinal='31' />
                  <column datatype='real' name='avgFlourHomeExpenditure_2010' ordinal='32' />
                  <column datatype='real' name='avgRiceHomeExpenditure_2010' ordinal='33' />
                  <column datatype='real' name='avgPastaCornMealHomeExpenditure_2010' ordinal='34' />
                  <column datatype='real' name='avgBreadHomeExpenditure_2010' ordinal='35' />
                  <column datatype='real' name='avgBeefHomeExpenditure_2010' ordinal='36' />
                  <column datatype='real' name='avgPorkHomeExpenditure_2010' ordinal='37' />
                  <column datatype='real' name='avgPoultryHomeExpenditure_2010' ordinal='38' />
                  <column datatype='real' name='avgSeafoodHomeExpenditure_2010' ordinal='39' />
                  <column datatype='real' name='avgEggsHomeExpenditure_2010' ordinal='40' />
                  <column datatype='real' name='avgDairyHomeExpenditure_2010' ordinal='41' />
                  <column datatype='real' name='avgLunchAwayHomeExpenditure_2010' ordinal='42' />
                  <column datatype='real' name='avgDinnerAwayHomeExpenditure_2010' ordinal='43' />
                  <column datatype='real' name='avgBreakfastAwayHomeExpenditure_2010' ordinal='44' />
                  <column datatype='real' name='avgAlcoholicBeverageExpenditure_2010' ordinal='45' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[stateFIPS]' />
              <expression op='[GEOID (US_Population_by_county_2010.csv)]' />
            </expression>
            <first-end-point object-id='esri_food_prefs.csv_8EF5EFD3848344679594C59F129CB127' />
            <second-end-point object-id='US_Population_by_county_2010.csv_F3C9BE59A41643788B90415A2F634B85' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[stateFIPS]' />
              <expression op='[GEOID]' />
            </expression>
            <first-end-point object-id='esri_food_prefs.csv_8EF5EFD3848344679594C59F129CB127' />
            <second-end-point object-id='US_Population_by_state_2000.csv_378A4D7302BB47F881DCA7B619D762CB' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='(Bar) Average Poultry Home Expenditure'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Poultry Home Expenditure</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
          </datasources>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='avgPoultryHomeExpenditure 2000' datatype='real' name='[avgPoultryHomeExpenditure_2000]' role='measure' type='quantitative' />
            <column caption='avgPoultryHomeExpenditure 2010' datatype='real' name='[avgPoultryHomeExpenditure_2010]' role='measure' type='quantitative' />
            <column-instance column='[avgPoultryHomeExpenditure_2000]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avgPoultryHomeExpenditure_2010]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' scope='rows' value='Total' />
            <format attr='title' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' scope='rows' value='' />
            <format attr='display' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk] + [federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk])</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>This is a 13% decrease from 2000.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]</field>
                      <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>11538504.060000073</value>
                    <value>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='177' y='-33' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{1EE640A6-2B2B-4CF5-9650-62264495F1F1}' />
    </worksheet>
    <worksheet name='(County Map) Average Poultry Home Expenditure 2000'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>2000</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='State' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <aliases>
                <alias key='1' value='State' />
                <alias key='2' value='County' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='Map State or County Level' datatype='integer' name='[Calculation_1192890997300523009]' role='dimension' semantic-role='[State].[Name]' type='ordinal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='avgPoultryHomeExpenditure 2000' datatype='real' name='[avgPoultryHomeExpenditure_2000]' role='measure' type='quantitative' />
            <column caption='County FIPS' datatype='string' name='[countyFIPS]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_1192890997300523009]' derivation='None' name='[none:Calculation_1192890997300523009:ok]' pivot='key' type='ordinal' />
            <column-instance column='[countyFIPS]' derivation='None' name='[none:countyFIPS:nk]' pivot='key' type='nominal' />
            <column-instance column='[avgPoultryHomeExpenditure_2000]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]'>
            <groupfilter function='member' level='[none:Calculation_1192890997300523009:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' included-values='in-range'>
            <min>0.01</min>
            <max>476308.12000000011</max>
          </filter>
          <slices>
            <column>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]</column>
            <column>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]' field-type='quantitative' max='-87185407.646651104' min='-95378113.292026386' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]' field-type='quantitative' max='6956806.4109481666' min='2236829.5624417756' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' value='Total'>
              <formatted-text>
                <run fontalignment='1'>Total</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:countyFIPS:nk]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='18' />
                <format attr='color' value='#000000' />
                <format attr='text-decoration' value='none' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{67F01512-F09F-4E80-A129-44DE31AB81A8}' />
    </worksheet>
    <worksheet name='(County Map) Average Poultry Home Expenditure 2010'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>2010</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='State' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <aliases>
                <alias key='1' value='State' />
                <alias key='2' value='County' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='Map State or County Level' datatype='integer' name='[Calculation_1192890997300523009]' role='dimension' semantic-role='[State].[Name]' type='ordinal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='avgPoultryHomeExpenditure 2010' datatype='real' name='[avgPoultryHomeExpenditure_2010]' role='measure' type='quantitative' />
            <column caption='County FIPS' datatype='string' name='[countyFIPS]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_1192890997300523009]' derivation='None' name='[none:Calculation_1192890997300523009:ok]' pivot='key' type='ordinal' />
            <column-instance column='[countyFIPS]' derivation='None' name='[none:countyFIPS:nk]' pivot='key' type='nominal' />
            <column-instance column='[avgPoultryHomeExpenditure_2010]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]'>
            <groupfilter function='member' level='[none:Calculation_1192890997300523009:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]' field-type='quantitative' max='-6836887.3015074646' min='-15277172.003803585' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]' field-type='quantitative' max='6764775.8405518243' min='2635280.9901025221' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' value='Total'>
              <formatted-text>
                <run fontalignment='1'>Total</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:countyFIPS:nk]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='18' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{40C01E9A-5672-43A0-BFAF-4557C57DE9A2}' />
    </worksheet>
    <worksheet name='(State Map) Average Poultry Home Expenditure 2000'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>2000</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='State' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <aliases>
                <alias key='1' value='State' />
                <alias key='2' value='County' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='Map State or County Level' datatype='integer' name='[Calculation_1192890997300523009]' role='dimension' semantic-role='[State].[Name]' type='ordinal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='avgPoultryHomeExpenditure 2000' datatype='real' name='[avgPoultryHomeExpenditure_2000]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1192890997300523009]' derivation='None' name='[none:Calculation_1192890997300523009:ok]' pivot='key' type='ordinal' />
            <column-instance column='[stateFIPS]' derivation='None' name='[none:stateFIPS:nk]' pivot='key' type='nominal' />
            <column caption='State FIPS' datatype='string' name='[stateFIPS]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;01&quot;' value='&quot;Alabama&quot;' />
                <semantic-value key='&quot;04&quot;' value='&quot;Arizona&quot;' />
                <semantic-value key='&quot;05&quot;' value='&quot;Arkansas&quot;' />
                <semantic-value key='&quot;06&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;08&quot;' value='&quot;Colorado&quot;' />
                <semantic-value key='&quot;09&quot;' value='&quot;Connecticut&quot;' />
                <semantic-value key='&quot;10&quot;' value='&quot;Delaware&quot;' />
                <semantic-value key='&quot;11&quot;' value='&quot;District of Columbia&quot;' />
                <semantic-value key='&quot;12&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;13&quot;' value='&quot;Georgia&quot;' />
                <semantic-value key='&quot;16&quot;' value='&quot;Idaho&quot;' />
                <semantic-value key='&quot;17&quot;' value='&quot;Illinois&quot;' />
                <semantic-value key='&quot;18&quot;' value='&quot;Indiana&quot;' />
                <semantic-value key='&quot;19&quot;' value='&quot;Iowa&quot;' />
                <semantic-value key='&quot;20&quot;' value='&quot;Kansas&quot;' />
                <semantic-value key='&quot;21&quot;' value='&quot;Kentucky&quot;' />
                <semantic-value key='&quot;22&quot;' value='&quot;Louisiana&quot;' />
                <semantic-value key='&quot;23&quot;' value='&quot;Maine&quot;' />
                <semantic-value key='&quot;24&quot;' value='&quot;Maryland&quot;' />
                <semantic-value key='&quot;25&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;26&quot;' value='&quot;Michigan&quot;' />
                <semantic-value key='&quot;27&quot;' value='&quot;Minnesota&quot;' />
                <semantic-value key='&quot;28&quot;' value='&quot;Mississippi&quot;' />
                <semantic-value key='&quot;29&quot;' value='&quot;Missouri&quot;' />
                <semantic-value key='&quot;30&quot;' value='&quot;Montana&quot;' />
                <semantic-value key='&quot;31&quot;' value='&quot;Nebraska&quot;' />
                <semantic-value key='&quot;32&quot;' value='&quot;Nevada&quot;' />
                <semantic-value key='&quot;33&quot;' value='&quot;New Hampshire&quot;' />
                <semantic-value key='&quot;34&quot;' value='&quot;New Jersey&quot;' />
                <semantic-value key='&quot;35&quot;' value='&quot;New Mexico&quot;' />
                <semantic-value key='&quot;36&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;37&quot;' value='&quot;North Carolina&quot;' />
                <semantic-value key='&quot;38&quot;' value='&quot;North Dakota&quot;' />
                <semantic-value key='&quot;39&quot;' value='&quot;Ohio&quot;' />
                <semantic-value key='&quot;40&quot;' value='&quot;Oklahoma&quot;' />
                <semantic-value key='&quot;41&quot;' value='&quot;Oregon&quot;' />
                <semantic-value key='&quot;42&quot;' value='&quot;Pennsylvania&quot;' />
                <semantic-value key='&quot;44&quot;' value='&quot;Rhode Island&quot;' />
                <semantic-value key='&quot;45&quot;' value='&quot;South Carolina&quot;' />
                <semantic-value key='&quot;46&quot;' value='&quot;South Dakota&quot;' />
                <semantic-value key='&quot;47&quot;' value='&quot;Tennessee&quot;' />
                <semantic-value key='&quot;48&quot;' value='&quot;Texas&quot;' />
                <semantic-value key='&quot;49&quot;' value='&quot;Utah&quot;' />
                <semantic-value key='&quot;50&quot;' value='&quot;Vermont&quot;' />
                <semantic-value key='&quot;51&quot;' value='&quot;Virginia&quot;' />
                <semantic-value key='&quot;53&quot;' value='&quot;Washington&quot;' />
                <semantic-value key='&quot;54&quot;' value='&quot;West Virginia&quot;' />
                <semantic-value key='&quot;55&quot;' value='&quot;Wisconsin&quot;' />
                <semantic-value key='&quot;56&quot;' value='&quot;Wyoming&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[avgPoultryHomeExpenditure_2000]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]'>
            <groupfilter function='member' level='[none:Calculation_1192890997300523009:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' included-values='in-range'>
            <min>0.01</min>
            <max>476308.12000000011</max>
          </filter>
          <slices>
            <column>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]</column>
            <column>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]' field-type='quantitative' max='-86880959.954646021' min='-95365555.649734005' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]' field-type='quantitative' max='6811867.9876978192' min='2660693.5348409666' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' value='Total'>
              <formatted-text>
                <run fontalignment='1'>Total</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:nk]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='18' />
                <format attr='color' value='#000000' />
                <format attr='text-decoration' value='none' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3BFD2B26-2903-4197-97AC-D2F9564BB4D3}' />
    </worksheet>
    <worksheet name='(State Map) Average Poultry Home Expenditure 2000 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>2000</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='County FIPS' datatype='string' name='[countyFIPS]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[countyFIPS]' derivation='None' name='[none:countyFIPS:nk]' pivot='key' type='nominal' />
            <column-instance column='[stateFIPS]' derivation='None' name='[none:stateFIPS:nk]' pivot='key' type='nominal' />
            <column caption='State FIPS' datatype='string' name='[stateFIPS]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;01&quot;' value='&quot;Alabama&quot;' />
                <semantic-value key='&quot;04&quot;' value='&quot;Arizona&quot;' />
                <semantic-value key='&quot;05&quot;' value='&quot;Arkansas&quot;' />
                <semantic-value key='&quot;06&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;08&quot;' value='&quot;Colorado&quot;' />
                <semantic-value key='&quot;09&quot;' value='&quot;Connecticut&quot;' />
                <semantic-value key='&quot;10&quot;' value='&quot;Delaware&quot;' />
                <semantic-value key='&quot;11&quot;' value='&quot;District of Columbia&quot;' />
                <semantic-value key='&quot;12&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;13&quot;' value='&quot;Georgia&quot;' />
                <semantic-value key='&quot;16&quot;' value='&quot;Idaho&quot;' />
                <semantic-value key='&quot;17&quot;' value='&quot;Illinois&quot;' />
                <semantic-value key='&quot;18&quot;' value='&quot;Indiana&quot;' />
                <semantic-value key='&quot;19&quot;' value='&quot;Iowa&quot;' />
                <semantic-value key='&quot;20&quot;' value='&quot;Kansas&quot;' />
                <semantic-value key='&quot;21&quot;' value='&quot;Kentucky&quot;' />
                <semantic-value key='&quot;22&quot;' value='&quot;Louisiana&quot;' />
                <semantic-value key='&quot;23&quot;' value='&quot;Maine&quot;' />
                <semantic-value key='&quot;24&quot;' value='&quot;Maryland&quot;' />
                <semantic-value key='&quot;25&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;26&quot;' value='&quot;Michigan&quot;' />
                <semantic-value key='&quot;27&quot;' value='&quot;Minnesota&quot;' />
                <semantic-value key='&quot;28&quot;' value='&quot;Mississippi&quot;' />
                <semantic-value key='&quot;29&quot;' value='&quot;Missouri&quot;' />
                <semantic-value key='&quot;30&quot;' value='&quot;Montana&quot;' />
                <semantic-value key='&quot;31&quot;' value='&quot;Nebraska&quot;' />
                <semantic-value key='&quot;32&quot;' value='&quot;Nevada&quot;' />
                <semantic-value key='&quot;33&quot;' value='&quot;New Hampshire&quot;' />
                <semantic-value key='&quot;34&quot;' value='&quot;New Jersey&quot;' />
                <semantic-value key='&quot;35&quot;' value='&quot;New Mexico&quot;' />
                <semantic-value key='&quot;36&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;37&quot;' value='&quot;North Carolina&quot;' />
                <semantic-value key='&quot;38&quot;' value='&quot;North Dakota&quot;' />
                <semantic-value key='&quot;39&quot;' value='&quot;Ohio&quot;' />
                <semantic-value key='&quot;40&quot;' value='&quot;Oklahoma&quot;' />
                <semantic-value key='&quot;41&quot;' value='&quot;Oregon&quot;' />
                <semantic-value key='&quot;42&quot;' value='&quot;Pennsylvania&quot;' />
                <semantic-value key='&quot;44&quot;' value='&quot;Rhode Island&quot;' />
                <semantic-value key='&quot;45&quot;' value='&quot;South Carolina&quot;' />
                <semantic-value key='&quot;46&quot;' value='&quot;South Dakota&quot;' />
                <semantic-value key='&quot;47&quot;' value='&quot;Tennessee&quot;' />
                <semantic-value key='&quot;48&quot;' value='&quot;Texas&quot;' />
                <semantic-value key='&quot;49&quot;' value='&quot;Utah&quot;' />
                <semantic-value key='&quot;50&quot;' value='&quot;Vermont&quot;' />
                <semantic-value key='&quot;51&quot;' value='&quot;Virginia&quot;' />
                <semantic-value key='&quot;53&quot;' value='&quot;Washington&quot;' />
                <semantic-value key='&quot;54&quot;' value='&quot;West Virginia&quot;' />
                <semantic-value key='&quot;55&quot;' value='&quot;Wisconsin&quot;' />
                <semantic-value key='&quot;56&quot;' value='&quot;Wyoming&quot;' />
              </semantic-values>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='18' />
                <format attr='color' value='#000000' />
                <format attr='text-decoration' value='none' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:nk]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='18' />
                <format attr='color' value='#000000' />
                <format attr='text-decoration' value='none' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:countyFIPS:nk]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='18' />
                <format attr='color' value='#000000' />
                <format attr='text-decoration' value='none' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)] + [federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)])</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DC0E1AD8-02F5-4E3E-80B3-03631F9A6E63}' />
    </worksheet>
    <worksheet name='(State Map) Average Poultry Home Expenditure 2010'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>2010</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='State' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <aliases>
                <alias key='1' value='State' />
                <alias key='2' value='County' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='Map State or County Level' datatype='integer' name='[Calculation_1192890997300523009]' role='dimension' semantic-role='[State].[Name]' type='ordinal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='avgPoultryHomeExpenditure 2010' datatype='real' name='[avgPoultryHomeExpenditure_2010]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1192890997300523009]' derivation='None' name='[none:Calculation_1192890997300523009:ok]' pivot='key' type='ordinal' />
            <column-instance column='[stateFIPS]' derivation='None' name='[none:stateFIPS:nk]' pivot='key' type='nominal' />
            <column caption='State FIPS' datatype='string' name='[stateFIPS]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;01&quot;' value='&quot;Alabama&quot;' />
                <semantic-value key='&quot;04&quot;' value='&quot;Arizona&quot;' />
                <semantic-value key='&quot;05&quot;' value='&quot;Arkansas&quot;' />
                <semantic-value key='&quot;06&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;08&quot;' value='&quot;Colorado&quot;' />
                <semantic-value key='&quot;09&quot;' value='&quot;Connecticut&quot;' />
                <semantic-value key='&quot;10&quot;' value='&quot;Delaware&quot;' />
                <semantic-value key='&quot;11&quot;' value='&quot;District of Columbia&quot;' />
                <semantic-value key='&quot;12&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;13&quot;' value='&quot;Georgia&quot;' />
                <semantic-value key='&quot;16&quot;' value='&quot;Idaho&quot;' />
                <semantic-value key='&quot;17&quot;' value='&quot;Illinois&quot;' />
                <semantic-value key='&quot;18&quot;' value='&quot;Indiana&quot;' />
                <semantic-value key='&quot;19&quot;' value='&quot;Iowa&quot;' />
                <semantic-value key='&quot;20&quot;' value='&quot;Kansas&quot;' />
                <semantic-value key='&quot;21&quot;' value='&quot;Kentucky&quot;' />
                <semantic-value key='&quot;22&quot;' value='&quot;Louisiana&quot;' />
                <semantic-value key='&quot;23&quot;' value='&quot;Maine&quot;' />
                <semantic-value key='&quot;24&quot;' value='&quot;Maryland&quot;' />
                <semantic-value key='&quot;25&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;26&quot;' value='&quot;Michigan&quot;' />
                <semantic-value key='&quot;27&quot;' value='&quot;Minnesota&quot;' />
                <semantic-value key='&quot;28&quot;' value='&quot;Mississippi&quot;' />
                <semantic-value key='&quot;29&quot;' value='&quot;Missouri&quot;' />
                <semantic-value key='&quot;30&quot;' value='&quot;Montana&quot;' />
                <semantic-value key='&quot;31&quot;' value='&quot;Nebraska&quot;' />
                <semantic-value key='&quot;32&quot;' value='&quot;Nevada&quot;' />
                <semantic-value key='&quot;33&quot;' value='&quot;New Hampshire&quot;' />
                <semantic-value key='&quot;34&quot;' value='&quot;New Jersey&quot;' />
                <semantic-value key='&quot;35&quot;' value='&quot;New Mexico&quot;' />
                <semantic-value key='&quot;36&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;37&quot;' value='&quot;North Carolina&quot;' />
                <semantic-value key='&quot;38&quot;' value='&quot;North Dakota&quot;' />
                <semantic-value key='&quot;39&quot;' value='&quot;Ohio&quot;' />
                <semantic-value key='&quot;40&quot;' value='&quot;Oklahoma&quot;' />
                <semantic-value key='&quot;41&quot;' value='&quot;Oregon&quot;' />
                <semantic-value key='&quot;42&quot;' value='&quot;Pennsylvania&quot;' />
                <semantic-value key='&quot;44&quot;' value='&quot;Rhode Island&quot;' />
                <semantic-value key='&quot;45&quot;' value='&quot;South Carolina&quot;' />
                <semantic-value key='&quot;46&quot;' value='&quot;South Dakota&quot;' />
                <semantic-value key='&quot;47&quot;' value='&quot;Tennessee&quot;' />
                <semantic-value key='&quot;48&quot;' value='&quot;Texas&quot;' />
                <semantic-value key='&quot;49&quot;' value='&quot;Utah&quot;' />
                <semantic-value key='&quot;50&quot;' value='&quot;Vermont&quot;' />
                <semantic-value key='&quot;51&quot;' value='&quot;Virginia&quot;' />
                <semantic-value key='&quot;53&quot;' value='&quot;Washington&quot;' />
                <semantic-value key='&quot;54&quot;' value='&quot;West Virginia&quot;' />
                <semantic-value key='&quot;55&quot;' value='&quot;Wisconsin&quot;' />
                <semantic-value key='&quot;56&quot;' value='&quot;Wyoming&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[avgPoultryHomeExpenditure_2010]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]'>
            <groupfilter function='member' level='[none:Calculation_1192890997300523009:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]' field-type='quantitative' max='-6836887.3015074646' min='-15277172.003803585' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]' field-type='quantitative' max='6764775.8405518243' min='2635280.9901025221' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' value='Total'>
              <formatted-text>
                <run fontalignment='1'>Total</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:nk]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='18' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{87F8D125-17FA-464E-8059-2D850364B898}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{02525A6E-5567-453C-9E04-C88CC9DDD360}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>National Average Poultry Home Expenditure</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='State' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
          <aliases>
            <alias key='1' value='State' />
            <alias key='2' value='County' />
          </aliases>
          <members>
            <member alias='State' value='1' />
            <member alias='County' value='2' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='37' param='vert' type-v2='layout-flow' w='99050' x='475' y='893'>
            <zone h='4576' id='38' type-v2='title' w='99050' x='475' y='893'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93638' id='35' type-v2='layout-basic' w='99050' x='475' y='5469'>
              <zone h='46820' id='26' param='vert' type-v2='layout-flow' w='90975' x='475' y='52287'>
                <zone h='46820' id='24' type-v2='layout-basic' w='90975' x='475' y='52287'>
                  <zone h='46820' id='19' param='horz' type-v2='layout-flow' w='90975' x='475' y='52287'>
                    <zone h='46820' id='13' type-v2='layout-basic' w='90975' x='475' y='52287'>
                      <zone h='46820' id='7' param='horz' type-v2='layout-flow' w='45487' x='475' y='52287'>
                        <zone h='46820' id='3' param='vert' type-v2='layout-flow' w='45487' x='475' y='52287'>
                          <zone h='112' id='10' name='(County Map) Average Poultry Home Expenditure 2000' show-title='false' w='45487' x='475' y='52287'>
                            <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='46708' id='5' name='(State Map) Average Poultry Home Expenditure 2000' show-title='false' w='45487' x='475' y='52399'>
                            <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                      <zone h='46820' id='11' param='vert' type-v2='layout-flow' w='45488' x='45962' y='52287'>
                        <zone h='112' id='17' name='(County Map) Average Poultry Home Expenditure 2010' show-title='false' w='45488' x='45962' y='52287'>
                          <layout-cache has-max-size-h='true' maxheight='1' minheight='1' type-h='scalable' type-w='fixed' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='46708' id='12' name='(State Map) Average Poultry Home Expenditure 2010' show-title='false' w='45488' x='45962' y='52399'>
                          <layout-cache minheight='201' minwidth='202' type-h='scalable' type-w='scalable' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='46820' id='28' type-v2='text' w='8075' x='91450' y='52287'>
                <formatted-text>
                  <run>These graphs explore the data at the state and county level for both 2000 and 2010.
The state with the largest average poultry expenditure in 2000 was Massachusetts whereas in 2010 it is California.
The state with the lowest average poultry expenditure was Wyoming in both 2000 and 2010.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3406' id='29' type-v2='text' w='45516' x='475' y='48881'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>2000</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3406' id='30' type-v2='text' w='53534' x='45991' y='48881'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>2010</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35751' id='31' name='(Bar) Average Poultry Home Expenditure' show-title='false' w='85476' x='475' y='5469'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3406' id='33' type-v2='text' w='99050' x='475' y='45475'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000' fontsize='12'>State and County Exploration</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4255' id='34' type-v2='empty' w='99050' x='475' y='41220'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35751' id='39' type-v2='text' w='13574' x='85951' y='5469'>
                <formatted-text>
                  <run>This graph shows the average poultry home expenditure for the United States by 2000 and 2010.
From this graph we can see that the U.S. saw a decrease in the average poultry home expenditure.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='3460' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='23932' x='34933' y='46540'>
          <formatted-text>
            <run fontalignment='1'>Level</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true'>National Average Poultry Home Expenditure</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1950' minheight='1950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='45' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98214' id='44' param='vert' type-v2='layout-flow' w='99050' x='475' y='893'>
                <zone h='4576' id='38' type-v2='title' w='99050' x='475' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='278' h='35751' id='31' is-fixed='true' name='(Bar) Average Poultry Home Expenditure' show-title='false' w='85476' x='475' y='5469'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='35751' id='39' type-v2='text' w='13574' x='85951' y='5469'>
                  <formatted-text>
                    <run>This graph shows the average poultry home expenditure for the United States by 2000 and 2010.
From this graph we can see that the U.S. saw a decrease in the average poultry home expenditure.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3406' id='33' type-v2='text' w='99050' x='475' y='45475'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='12'>State and County Exploration</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='3460' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='23932' x='34933' y='46540'>
                  <formatted-text>
                    <run fontalignment='1'>Level</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3406' id='29' type-v2='text' w='45516' x='475' y='48881'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>2000</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3406' id='30' type-v2='text' w='53534' x='45991' y='48881'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>2010</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='112' id='10' is-fixed='true' name='(County Map) Average Poultry Home Expenditure 2000' show-title='false' w='45487' x='475' y='52287'>
                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='112' id='17' is-fixed='true' name='(County Map) Average Poultry Home Expenditure 2010' show-title='false' w='45488' x='45962' y='52287'>
                  <layout-cache has-max-size-h='true' maxheight='1' minheight='1' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='46820' id='28' type-v2='text' w='8075' x='91450' y='52287'>
                  <formatted-text>
                    <run>These graphs explore the data at the state and county level for both 2000 and 2010.
The state with the largest average poultry expenditure in 2000 was Massachusetts whereas in 2010 it is California.
The state with the lowest average poultry expenditure was Wyoming in both 2000 and 2010.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46708' id='5' is-fixed='true' name='(State Map) Average Poultry Home Expenditure 2000' show-title='false' w='45487' x='475' y='52399'>
                  <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46708' id='12' is-fixed='true' name='(State Map) Average Poultry Home Expenditure 2010' show-title='false' w='45488' x='45962' y='52399'>
                  <layout-cache minheight='201' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{89EB4396-0315-4C52-9EEB-74A9A15BDEBA}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='(Bar) Average Poultry Home Expenditure'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95160733-32F0-4FBE-925B-C00F8E7AC148}' />
    </window>
    <window class='worksheet' name='(State Map) Average Poultry Home Expenditure 2000 (2)'>
      <cards>
        <edge name='left'>
          <strip size='222'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:countyFIPS:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A8275EDC-7E9A-4EA6-894E-EEE2D950E962}' />
    </window>
    <window class='worksheet' name='(State Map) Average Poultry Home Expenditure 2000'>
      <cards>
        <edge name='left'>
          <strip size='222'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{656926F4-B0D4-43E9-8A5E-1F8B10A03E3C}' />
    </window>
    <window class='worksheet' name='(State Map) Average Poultry Home Expenditure 2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{92DBE758-A21C-42B3-9047-F824048515CB}' />
    </window>
    <window class='worksheet' name='(County Map) Average Poultry Home Expenditure 2000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{12B61712-AA97-45E4-9356-64EFB0904849}' />
    </window>
    <window class='worksheet' name='(County Map) Average Poultry Home Expenditure 2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3A806237-755E-473C-A207-0B2BC23AD302}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='(Bar) Average Poultry Home Expenditure'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(County Map) Average Poultry Home Expenditure 2000'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(County Map) Average Poultry Home Expenditure 2010'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(State Map) Average Poultry Home Expenditure 2000'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(State Map) Average Poultry Home Expenditure 2010'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{56C5D85B-FF29-4BC0-9A3F-2C3F1E7E837A}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B8028DF8-177B-40E4-B9F5-082D9A83D1D6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='(Bar) Average Poultry Home Expenditure' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(County Map) Average Poultry Home Expenditure 2000' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(County Map) Average Poultry Home Expenditure 2010' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(State Map) Average Poultry Home Expenditure 2000 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(State Map) Average Poultry Home Expenditure 2010' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eZQd2Xkf9ru1vn3pbjSAbgA9QAMYzA4OOeai4VBcJHJEyhZtWUqsREe2
      ZUVOdBJL1h+OEjM+OfbxsUzbxzlR7MTOsWzHPmEsiRHJkByKw+EyFEnNkBzMADMDYLCvvb99
      qe3mj4fv9q16Ve/VW7rR6H6/cxp4r17Vvbeqvu/eb7+sVqtxTdMwKhzHQaVSgaIoME0TlmVB
      13Ukk0kwxnzncs5RrVbhOA4YY77f6bvneeI45xyMMWiaBs/zAACKosCyLHDOoWma+B7sJwjG
      mGiv13nBawitVgu6rkNVVd/44rQVfA50H4wxuK7b9SwURelqO6wNud/gmOg9hJ0vXxN81gDE
      s44ae9S90jMOu86yLCQSidD7SSaTcF0XrVZLHFNVFblczjcmy7LQaDRC+44CYwyqqvrGblkW
      NE3TYJrmQI2FQdd11Go1cM7RbrcFYRqGAUVRfOfatg3GGEzThOu64mEZhhH60D3Pg6IocBwn
      9KHbti2Ikq43DEMwCN2w3CZ9DxKZDHqR9KIYY3AcB6qqCqKSz+nVT5C4CZVKBYwxNJtNMMaQ
      zWYBdBit1WqhWCxCVVWYpikmhSgmkEFj4pyL5y+PSf6Tf5PHKhNyv3uiZ5RKpeA4DprNpuhX
      boPuQX7PiqLAMAxomoZ2u+0bSxgNGYaBVqvVd+IKQqY113Xhui5Gn/rvgTGGfD6Per0O27YB
      wDdLylBVFaqqgnMOwzDQbrcBoGsWl2dr+l/XdXieJ/qQb44eFudc3GzwJVK7QPyZXz4vmUzC
      cRwf44TNmEHIxCbDtm1x3LZtVCoV0KTkOA5KpRISiQQMw+g51qixA53nqiiKGJ/M0GHjot/o
      HsOYOniMVuh2uw3XdbuujXoOuq4jkUhA13Uxnmq16vs9SEOqqiKdTqNWqw30TKhv13XheR50
      XR8vA5DoQ8QZNVspioJCoSDEIEVRoGmaIOAwJpCJJIyQOOdwHEf03UtcoHbl/3udF5yRXNdF
      tVqFaZpiZg6eG0XwQUxNTQlik8fEOUc+n+9qK87sHwZ5LDIzhImgcp9BUTHIOPKYPc/zHYt6
      T7K4R6s0TZa0kpO4EiZCA0AqlUK9Xh9oFQgSPwAofa4ZCHQDiqJA13W0Wq2umVo+N5vNwjRN
      5HI5JJNJWJYllrYwsaIXOOfiBfSSyekc+fc4TCAvwYlEAplMBrZt4/bt20J8CbYTh1jlMXue
      J/5obP1EqH7jJlBbmqbFume6PigCEWHKjBAcm/wugqCVX27Ttm00Gg3RTjqdRiKR6BKdZSiK
      glQq1fce5DEFiR/A+FYA0eC9mdyyLCHShClhAITMSPKiaZo+2S4448jXxWGOqN/Clu+o2So4
      O8rMmUqlxExkWZYQv+S24zBvUDGPmu2Hmf3DlFBd14UBopf+E1RmaZYP+01G1OpHDOS6rtA7
      0+m0ENFc10W73Ua73Yau67AsC57nCR0guBoYhoFGoxHrGRNDyis2MOYVAOgwQCqVEtzbSy4G
      Og9FlgFlBBXQoFxL/8eZHYNiRhwEHyy9KFnmJ0ao1+tdil3c/khfGVSpGwTyjGzbthAzokTB
      OMwX9tzDViz52RuGAcdxoOu6EH1c1xWTYCqVQiaTEYYUy7J8DBPWVz84jgPHcYQeJdPT2BmA
      dIFUKhWpZAUhzwCyxUKebXsRefBhB//k9sLaiVqhAL/FhNqRCZt+KxaLqNfr4hyCqqo9l3IC
      iT5xxZNebVA7YSIhtU0WNfl+5MmE3skgkwb1Qzod3Tu1IVtgyFjSaDSE4kwyfdAszzkPHQeJ
      2/3gOI6PgbaUAaiDdDqNZDIJ27aFlacfyCpEf3RMlo97QX6BMoEGTZ1BJojSU2iGpHajCCo4
      08m/xSWiKMYdBEE5nP4Pzsqy74F8KMFxyCblqLEE302U7hXFjEDH3Os4DtrtNmzbDjX1tlqt
      UBpSFAXpdDr28wnDljAAsCnfE+fFEYXofJo9gGh5cpCZMkgMYW0GxatEIiH0GXn8YUo2KZak
      8ziO4+tXZoRe9z/szB9sIzibR50LQMjZ8qyrKErkpNCrLQIxBCmdMnMElVDDMIQy63ke2u22
      zwlKqFQqPoajfg3D6PvcekkgW8YAwKamXq/X0Ww2Y4lCZPM2TTPUjyDPWL1Eo7CZWr4ujAHk
      pZqUMZJBezEOEb9hGMJMS5ahYNthCBLuuBAUZ8LkelrZSDmWTaRx2w9btXqJvrKoRLM/0Flx
      SUcIjsHzPDQaDbiu62NOznlPEbYftpQBgM5NZjIZNBqNWLMKKcXk/STlmKxENKsEX2zchx9k
      hKBoRW0Frw8u4/LsTsocmUeJMWmswbZ7YRRFuNcKF4Yg4ZIIMgyCzAZs6nZB0VTWEQAIvw95
      2KNE5mq1Ctu2feJxXB0rClvOAABgmiYKhcJAD5dmfxIxFEURJlKZiOLMmlFEESVa9TovrC3O
      OzZmmokSiYQw6ZJ1SJ71guMdhHDjEvegjDDulUdWrBVF8SnEAHyTECHKOSeDaKBerwtRM5lM
      9h1PFLaFAYCOxj5IzBGtBMCm91W2CAXPJYbpJxIFZUj5pQxDXNSe67poNBpiZiOdhuzZ8liJ
      IMKU1uDnsH6jELz3YXWKuEaHXuMIsyjJ46NnJsfncN7x5vcKzrRtG5Zlod1uo1QqCfPmsGLQ
      tjEAMPgLIR2CZliC/GLCRIxeM0icVWBQmTzMoqRpmlDSXNdFuVwOFQdkPSGsvahx9RvPKAr1
      KGIYXR+m98gm7qB4CGwGPZIuIOt79CwBoFQqCd2M9AV5co3zjglj9wSPE6QkBYO5ZIQRkEy0
      vUSBMPt48P9eDy/qQbuu2xWZqus6yuUycrlcl/4gXx+HuMMQZj4chpDDnskw6BVrJN9/sO9G
      o4FMJuO7znEcEVkQnPAURUGz2RTfZXEzjr61rSvAMCCiCBOfwmYZ+hwMLos7k4eJV70QFfNi
      27bwPzDGhIdcjmMfB7GSqBI2zmFWgl5WoygEJya536gVNmwlZKwTHFcqlVCv11Gv18HYZnxZ
      WL6H53kiDJ9oJO59M7ZFjrBxgbFOwFwikeiywwdfUHDZDbPBD6roxZGDwxRieSWQ2wo65AB0
      jZfa6NfnMEF9W4mwZxB2b1GiJR2XI2xJ3ifiD3sXchJWlOm8F3Y0AwB+WzVBnvnCvJCEoLIp
      K6BBMUlGXGWY+qC2g+2FMalhGL5497BVbFiEPYdh5flBlcoo/0jYbCyHQweZwbZtJJNJ0T+F
      S2ez2S4xl76ToYH8SEHsCCvQKCArj4xgGLEMefYP/oWFS8jXDGI+BDaV3SCDUv9B0GxVrVZD
      Rbe4ZssoRJlpeyHsfgfJFAyT83uJIfKkETyPRBp6no7joNVqdYk/dD3pBdTOIB5sYIcrwcDm
      yyNrkOwkUVVVhPUCm+ZSgiwbh8mldGxQoqe+aSWR+wmLd5f7oHHquo5qtYpMJtN1v6OKM2HM
      HEchlO+BCC4owoRh0LHKzyJs8mq1Wj7xicyj8vuTVxdN03x5xiRuym1GYUczQKvVQrPZhOu6
      MAwDmUzGlzhNVqKgPV5ROgk5lHssM0GYmBAlpwb1CNlmTW2GWSXCYu3DZngy79LqRqJBHIsV
      6RP9rFRxDQAE8tLGDWAcFrKI1I9hPc9DJpMRQXHB+yYJQb4uaBWLeq47WgSiG3YcB41GQ+SA
      GoaBbDbbtdyRZzAYVhwMDwZ6x/pHEaBMTI7jdMWlAB0iDpNDgW49IZPJoFQqid/izKSyyNeP
      uMPEvLAJgFakKGvLKOjFzEFvcZTORs84m8368kaCbbfb7a7wi17jAHb4CpBOp4Wzg/NOgFmr
      1UIymfQ9MJr5CfLsKBP8MO5+2aIRJVvLKwZjTDBiEMGVhXOO6elplMtlEQAY9aKCLz2umBRH
      rKNnJz/DcSFslSKiJo9vUEyUzccEy7JgmqaYNMIsQhTAGMQDqwTruo5CoeBzgBAj1Go14RKX
      EVSM5ONB81wUgjI7IYqYgjJtMK9X/hwGSn4PyrlhCK5Uvcy0Ufe4lebS4AoTZoiQQ92DYkqY
      ZQjYZE4S0eTrKKI0rM5UP+xoBgDCk5+DxEFRjEHFiOL0w1aDKEQpyvJvALrKlMhtBl9wHFDy
      EF03qFIeB+NuLwzB+w1jgF4Rn7KlTgYpwsFCC4x1wioqlcpQK9iOZwBgszqYrus9A6VoRkwm
      k0I0CiOkXt7TsPOjzJlRIpGcEMN5d4pf1Nj7jSMOesm9g86OhHQ63WWt6tV/vz6owl/USkvt
      yJ9d10WpVBLVI4JxVWHvIeq7byyx7uo+grHNqNBUKoVSqeSzxgRBIk4qlfI5nEhUkJfWfuJG
      8LdeD5mOkaUpzGQXtHr0QpzVI0zUCF4bJKRhUK/Xhw6Xjsq1CCPcqOuCzy8KQQNBHDwQKwBB
      URTk83kRLCVDfqBE+LlcDqZp+tLuZPSbeeTz5HP7VWkLsyb1Wo3k42FLf69+ghaPIMEFRcAo
      S1A/DBsaHQbOua++UFA8Desr6vkR4lh8AHQx8o5fAYKgrCFylctV6AhUZiOdTouQWgpCC87O
      USCGiopAleuOBhG8hh56lIwqK9By3/Rb3NksuEJtlS4xCAYZ+7iU87DJkUowUmKVKMc5lh63
      GZRhBoQrWQBECiaJT5lMRsyWcSoJBJfTIIPFvZ5z7jP59UIw621cMUJhkK1IveKpxtFP8N0A
      4RGk/dqIOk8WM6OuTyQS4ne5nMoDyQBkSqOSimGyJOcclUpFVBkzTRNTU1PI5XIDR4aGmVOD
      DzvYZvCFB0WQMKJLJpOCMILOvEHHGYTMTFH3HmX6jdJ3RkHQyhZmCg2ONY5OFKaEr965hvPf
      /yJq1arIKyYx+oFkAGBzWSMLRRgTuK6LWq2GUqkkas6bpimsRFEJ1UFiDppYox50EPJ4LMuK
      pQAzxoSlIyjC9Jute+k0UdatKEaVfRlhekk/H0Q/BBV4+Vhwpeg3w/cCYwzMquBR9mPcufRj
      ZDIZ3z4TD5wOIIPs/WSSDFYLpodGdmIqxlutVlGpVAAAzUYDoOfKAY57LwGs85lD/M42P9z7
      RyYoqRHfZ2qr+wr/uZutuJ6HUmkDyeSm4s4YINMvo4ObA9/sgG0eajabSAWTxtnm3YgmOe+6
      HhLB0UffGNjmZZCIWDye8FsEADQaTdi2FHLBN8fCfA1sjo9H/OZ5LhijCSs4CbCOUSQJeNVb
      vkA/zvmDzQAEkuup3qTneYLACVR0SVVV2LbdKcTaqiPzzr+DqQVnT/kB865H2n2g188MF0pZ
      PLZQFEeuLDVwdH+MimZV/9dhtAEOgFX937cCl5caOHYgfpW2ItB1f8Pg7atLWMw3ez6caZWB
      cwW8dkeUYiTsCgYAOqsBxdJQjU7Ab/WhqmOGYaDZbOLQ/GH84Mwc3l28g1Rk/sfoSmi6qaKY
      3uxgNan5vsfFVinE48BKxcJUZrBNPMaBqUIOaaMFQwt/NrL4mGZ13Ll1HclUBtlcHp7n7R4G
      IDDGxGpQr9dF+Cyw6SRbW1uDVV/Dn33tJcw9/jGsX/t/kdIrfVqO33+XLL5z6faBR8rU0LZ5
      KAME38OhrI3GtX+HqqPjljYHN7v44CrBvUCrQaVSgWVZQullrBOpOTU1hds3riN36DSuXXgN
      VmMMa/E9hCqiEw7YMjQtB4mI2T8MKYNhf8rBceM69m18c3cyAOH22W9g9eL3cPnyZWH+SiQS
      WFtbw0989FN4z3vfj8r6XZSU/fd7qLEwrFNrO5xh98vXZmgqHK+/dzgMU6ldogRHIYcNHOXn
      sHrjFVTKp1FlSbzT8DB75GHU1hpYWdbh6Xm8c+sGni72b28ciFueZSsIdpze1pDWu45s1X0E
      EUH/XWMJC77b1QzAUtOAexszaWDGfa1z0AC8Oz9AwwKuLDMcWvhplG42cau2jPlMvEyoqBfb
      74VHhVYM0gcwGiGH+QLGgbCRxiV+SgUNlqiMM1ks7EvjjbeBRw5EnxPML/b9FmuEDygKR9+P
      crubxxUGZEzgyTkPN9/6HmAWcCA9XBpgmDMp5CQAmwSxP2/gylI9+nyM1+IzbFsDhWL0ofVe
      7VCNUMuyxC6jVLK9/xgZFL13cdxejrtdzQBzD51Eqfj+yN+/ekHHiVwVBtrwXE/UmZQ3diCf
      AXkk5XqU8rm9IjqDrz6X0gFwVJrhqZPA+JNXwpi0X/zNOCNAe4GcmZTtRRlfceKnAMBIZtF2
      eoe0R93LrmYAxhjUwkOhv11c4XhsnwXOPdSaFv7seue4TNhyHDo9RLlKtRy3I/dJ//daGQ4U
      E1gpt0LHDMTLWhsVvZRj2XQ8rjblZ0LiDT07uXz6oJX8TszncW2tO0Axzth3tQ4AAFP75lC+
      DOQDhRrO3gHmchy6puDu3SV88j0KKDQqSsamY3KRrqjguLDrZGgKw92NFhYPdNcF6odRdICw
      uB75/61SksOC7IBNBqCJRc7ko8/9qtQxdMTaYbCrVwAA2Dc7i/XEw13H//zjwLklBdf5Ij52
      SoUSiPgMA+fcl5DdK0S3H3RNwVNH8/jhpY2hTIjBQDn6TFuC9lq1grP0VhN/P4StlhTfFddq
      VrfjjT3Yz65fAQBAyT0Ea/1tn7fw6jrHbE7Fu/aXcciMt9nysIh6NZmEhqeP5XHuehmPL+SH
      bl8ee7C4lhwKEvytX2bbMBiUicLk/GAZzFj9xj0vIGLu+hUAAJpqAS9vHEe5uUkoizMKPvUI
      x7yxOhDxD8UoPQ1EDEf3p/DOndrg7YZA13UhT1P2HBEZhYDL+3PFsmI9ANCNeHVMgxW/9wQD
      HD12HIvaJaTN+/WSe/ebTmhIGAyX+5hGY/XEuismBHOHKaFonLh/SZcdqEMqAXuCAYrFIm6k
      n4UzZOGzqISQ+Nf3P+fQdAqqApy9Xu7rIxgVD/psH4Ywho6zsu0JBmCM4Y033oCmDj9PjUI0
      DPFexsK+FOanElAGnM3iWKCCok5QiR4Z9ysY6B5cpbseK/lwZKMAGQREIeX7MNb7goW8g+Wa
      grtDBH7KKXlxZOYgcTFsLj39mODWegsL+7pLuIwT2xGfs904PlfE5dXu+5JTSOm+aTPzXZkP
      EIWj7/oYKuvnoTg1XLu5jKzu4NiUi4Qef7Ydxv7OOYdr1cH5FID+DNC0xut97TXmsOO9nFg7
      GQlDRYvrADa961GeZBKXVFXdOwyQSRo4ml/rfJnumBzPXivh1L7BdhQheBxYq3moWAoY25Q/
      +b3cVfqHA1itcnic+3wNUTDUrSe0Xn6OKIQlscuwXQ+31+/t1ijOC/R775/g1XJ7TPrgO098
      Z13n0X+OO1ig367JCY4D3lzvPqjoAOIzQLXFcasCcKYjYZrIJlQszujQ1O5dz2Usuhw/fGcd
      7zpWFOdGoe24sF0Pep/zgADh9IhQ3Q4wxoQlhiYAOeF+87M4hM1D8peQHOzNn7qP+b4Mvnru
      GQZAarYrCbuQ1lFqAoV7wYTXNzjKbQ2GpsJ1bWQNFw1bAVdMOK6HffkknjgavvlFL+gqw1Pz
      Gt68XsKTR6d6D9PUoKsKzt+q4kAhgXyP3OE4HtxBvLxxy7aEQVcV7C8M/mzGhbeuLuP4tIdB
      8k8ZY3uHAdqWA9vl0CUR4/C0iRtreVxcb8PjHAv70jiW6IgzltOZiUwtXOEdVJHUVAaV9Z+h
      bMfDmaslzE8lcfZGGT9xaqbrnCCh7gSldtSFZtTkGcdqIJUbfBB7hgGSquUjfiLqw9Mm+FR3
      SIAcNhGcRYd5UeWmi0K2f9mQdx0rwLJdGLqKpXL07D8owfS6h1GTa8YhZo3KxPMHD+LN23fw
      6L7oEPMw7BkzKLe7Q48HbmMEu/nNdRvz070TNwiG3lmFFg+kcemuP0RiFCak68IiM+Pe29j9
      BxJGYaSprIlCYR9qrcH0gD2zAnitEnDPWCM/6O0QH1yPQ9PjxarISOgqTF3BetXCVNa/SoWt
      ANWmjdWqFVmNDfBXqOiqgue7bBBZGijVh8uocxzHtzHeKKtKoJhdLOwZBkB9Gch1Pm5tcng3
      GpaHXGo4BTGX1LBUtlDMGD4PcRjjXl5q4PjBrP8gY5DssvIPnXZ8FhhxeNPiwliX+YX7Tuhg
      oz6Y6NFpYtM7S5CjVwfdrX4Y7BkG4O0yxBKwjXA9jksrHp4+Hk/8CSKX0lFrOThztYTTRwuh
      jLtWtbBabYOxTmBdPwyyAsY1AJh6986OcUDBesQMcpTqdmBPMADnHPBc3A8GuLJi4bGF3qbP
      fpibSqJle2jbHlyPQ1EYLt6uihVhaaOJxxfyOHN18Op2vZTprSZCInhiAPn4uKpe9MOeYIDO
      buzdx7dD/negwdR7M54s90bJwIemk/jTt9fw0GwKpbqF00cL4Lwjwjx2uCP25FKbr1PeWrZX
      f8F+46DX+YPI8MF0SHnMlA4ZNzFeHtsg2BMMUK1WkTHjG7wogEoOsZUT5IF40Z0AoMLBO3eq
      ODGXiyQaIgBN03y5scBmIS1DU/Chx2fuieipe2PwK7Wm7t/TYCvRzQTdIeNxnW9hW0ptW0WK
      benlPqNSLqOYiM8A9PJIOaOXJBOm/LkXTh5I4OytFjjPRZ5DhEIKYGRYg3R+r9/jYry5wIOv
      pnKmGiHMIrSV2BMM0G41fLMj0PvhhiVkB2flOC9HriLB7kWChV03VA7sGOXzYQmtl8h2P8Yz
      DPYEA3iN1YHODxNvgrJonBcu4s/d8SqTQfFiqwhmu83F48Cgz2JPeIK9+vL9HoLAMAS1k4lQ
      JAiFHB9H21t9za5fAWzbxtrN81g8snUm0H5WFM79s+mogV/+tmXz4ViajGx/uxlx0Gd0bamM
      ejoLNOJfs+sZ4PL51/GeQ1uz0AVzbPthGCYIEt2wos+5s+fx+9+6jH/83zyPm9eu41988Ydg
      io6/9SvPYyalolFaxWc/9z2AOyg5KXz21z+Mf/ufXkTu6MP4i+89irfOncf//Z0LWDi6gF99
      /nTkWO9nZKqpq3j00GAOx10vAnn1lYGTzOOC8kr7muxG7D6MqAYltA2LobTeSQp6+btn8PHn
      fxLv3q/i+xdWYNs2jEwBv/PXn8dHH57G8ZMLuHF7FfuzCVxfrYFzD//6Kz/Gp559HH/h2Ud6
      9rMVNYbitjeTT6HeGiwkY1evAJxzeOvviBignYDgKhA8Jp8XxCjmwWefPol//+VXAABPPHYU
      v/cHfwKn3cZv/0RnP7WOCRb4j9+5is/+Dx9EQgHay3fx1m0PimLh6pV1VJtt/K1/9Dn8/t//
      ZQSjdOotG2cubZGuxTspqKqu49ShPDyPQ1MV1NsOdFVByuyIt822hfT0YPFDu5oBbNuG7m1t
      jZ1hEOaJDSKY7hiFYcSOL33rHP7rv/oprL/+Kr755l3o7TrmDh/A5dd+jGOnTyNJeROMSpQn
      MT+XxtOPL+KPv/4awta7dELDwwe2tpqF53FcvL0Bjk5xYV1laNkeHK7iyL404FlAF2v2xq4W
      gXRdh73vmfs9jEgME1sfFssvEMUnThO/+398CYdm8/hnf/A9/Ld/7ZP4zte/i/PNNH7lQ0fx
      rz7/PSgMWG4o+BvPPwEAeOP1t/C5H95C5eZVfOutO/jMr/0M/s/PvYi/8vMfweCB3eOBojA8
      PJfGqbk0jh9IYWFfEg/PpfHonInrSyXY7hD+lFarxU3zft3S1uPN738Vi7Q90n3C67ddnD7a
      fxOyOLm9vXDmahlP9ck57mrXbmOlwTEbrB8fEzTmt2+W8fCB7d8nWMabN2owNRfHZuMrwrt6
      BQAApm59THnfMcQ8T14Rgn9bNjbdHJr4fe2MYSyj4pHDGbTteM+KQlt2PQPk5x5GtT1YpGM/
      mXxQjJN8o6rTbbeNfiusPaOCAYhL0p7X2RJrVyvBAHBwbh5f/sZ+3HjpS93VlMIQfKn3sqRI
      2dx3+gQOTUszJsNmrRvpX7kfj3O8enFloHHfXGuJfjYLSm1Wger2vAK3162BRaDdhoXZNF6/
      XsaTRzI9z1NVFa7r7n4GYIwhoQD73ObI7XDO8dBsAo8fyfa/YESoDHjqIX8//bKzOB/PHgNx
      MI44IUqHlLdHlT8HLVxxdovJJFSoSn9lmN2zcO16EQgAHv3wJ2Apo/H6/Q4MY6y7pv9OqAc0
      KlzXFVWcOd/c4on+gjt1xoHluHDj7J6NPaAEA8CBgwfR1EZX9HYCwcmbXNxPjCvYzTAM6Lou
      NvCQd7ChdEn6PW6fh2YyuLQUb8Xf9SIQAFQqFejucEVw42BLYmCEL8of+7OdySIDYUh+iGLm
      UXawmc0buLkaTxzcEwxw5+YNJN32WNraznk3SBiUpilnjQUZwfW4LypUKOa+YrXUQVQE6eYJ
      PFhkiHPgXvizfKlle2ha4VvwUB+6xmIV/R0P4r2pPcEA3HOBrlc2HmxVBGTU65NXAUVRfDV1
      js0mcPn2Ws+23rlTxrHpMY+NASaAm3d7X7da1/H+R2YjfyelmHPuqwkUTEclWJYVudNl0oxH
      2rueATjnuPln3wEbG/H3D1rbKlD0aZQYlE1qyCZ7v9JKvYGjM6OPeRgdoGb1vobuj3MOy7IE
      0buu2zFZappYBfs5COMqwbueAUqlEpa//w3cv8Ld4wW9+PutBG8F5EIEqqrCMAw4jiOKZxHz
      u64LXdfhONGhz1NZAy+8toIDBf3eHm0QmWsdEbITXLfrGeDmOxeQsHpbBAZVLO934gewA5Xg
      OOjDs4wxUFwa6TmUi00+gk6Np86q0Guj77liAisFHY8dDOtU8i0MfBMPGA4tnoCdHn4X9jBs
      F/HF6SeOc2jnIN79yCZPYgS6T3l/r36r4L5iFtfXeyfI7PoVoFAs4oN/5x/hW3//b8Ns984N
      GCRNMayg01aiXyW2BwG1potLSw2fFQqA73u73YbCFCiqAlXVxI8080OcyhC9mdJm8xeWgf05
      DlMLZ5ZdzwCMMcwdPoLTv/q38cb/9g+g8SF3yxYNjj9baxQ8SAyQNhkWpqiwWD+sdTQAACAA
      SURBVPg5rbYCVVHhOA5MU4PtOPDczkSjKFxUpvY4R8I0u2O3ApgvFHHpbh2WbeGxg92rxoO0
      fg4NxhgeeeZ98PYfHlub21UtYavDobcTDICqdDbT09TuP1UBDE0FgwdDV6EqgAIOXVNg6Cp0
      TYGuMiRMHaZ+7zxN6fv3yKEsKi3ADVmwd/0KQGCMITt3BO27V/ue14vguivgbEK+znGcSPc9
      WXFGrYAsiwWjtrkTQKERMpLJ8OSWQYrmVpsO5nKdfdqC2BMrAKFdCtkqFYOJEWFyZ1TVBgrk
      8jwPruuK4C7OOWx7uNAMWdSithzHEd/HCWqf+pOxHck640I2qaFmhydG7SkGKBw9MdL1YRXQ
      CEFC0DRNBHfJ/9MsPWysixwmTN5SanucFiGZwCl5hBxSxNAyc+90PHY4izduuag0A5Wo79N4
      7gtmTjzaYxPmeDJ9uxVv5ibTnRy7IxPqoAwQHBO1K5sNt1L8IaaTY5AeJHFLUxmeOlrEStXP
      rHuKAY48/CjcQnQsiowo2f3yN1/H21c2xj20HYcgw2qa5lvV6DuFLcfBoMKSLIKNA2Et7SkG
      KBSLePY3/yewmbmh2zAdC+de+DFeffUGnJjxJsMgyH6DeKnDcoYfRFiWJXQny7LgOA5s2xZ/
      g+o8PBDYCuwxBmCMYf6hY/jI//hZeAePxjo/DCZ3cfeVt/GVL7+Flr1FzrAhaHenE/ygozMM
      Q4h5QZ1qkAQZQtgksqcYgFAoFvHoL/w1tBW98xCHnC3ZjVt44Qtn0GhvgRI4xOIStMqEOuxG
      GVOwrUEJcMCbChK8rD/FCYXo6p933/+eZAAAOPjQMZQTnaKh2of/Em6mZ3E7M4ubiSnU1fiF
      wtTlVXzt8z/CWmW4jaIjMQKl7lTzZC8fynYg+ET2RF2gKBQKBfylz/wucPQxLK+uYq6+jLna
      MuZb60hJ2WNxZhlto4SXPv8qltZHqzyxLbiPNDjoCjD2/ici0CYURcHswTn81G99BgbjYAun
      AHToY5jdThKNOv70j1/F1TvbV5qkF6LHPISot8N1i7gIE4H2TChEGKxGGf/yn/4DrJ29gKfe
      /14wdgG65+I/vHIWupHA4uwMjmdVfOn8bZiJBD796BG89PYVrLYczM9M49lDnSJUlXoNXzx/
      C2YiBcd28ZUUx51KHc998N14934N/+wP/wwcCv7Gf/YRHCluXR1WOYR4nF7hsBo98nH5e3As
      Owkc8HEAY2zvrgAAcPP6VRyYnUaJ56G//jIABngWbJbELzx1HKdns/ja+Zv46UcewgHFwpmV
      Cq6WLfzcows4d/Ou8I5+9e2b+MRjizjIWjh/dw1feukC/vJHnsEfffG7+NFrb+L0+9+Dn318
      Ct96s0/S7IiQwxa2iwB3oq4RhYkIFMCxU0/h8P4i9H1zYNyD7jnwPCClc/z7V97Ei9fXUXY9
      TJka9mdTqFoe0qqHPzp7BdP5vHAE1TjHlKFify6N1VIFSdPApZfOYmm9gePHj+DrL7yMf/Pt
      q3hiobBl9yLb/bfCU9uL0IP7HexU8OASgD0uAhGefv7nkLmzH2de+AIOahwfPrmAJG/hc2+t
      4FBCx9Wmi/OrFZxayOINbuBvvusofu97b8Jz92O55WLOVHGl7uD8agWPLh7FxTcuw7FaaK5U
      8Nl/8Q38wq//PPZXruLzr1zD6UNPxhpTuW7hrZvlruPhJMZEWLxPDAkpInq3ZCGp9y5jHlb1
      QSCED8i/xAMn15oWMvd2b+EAqi3gwp3uHeyY1MZgP/aAf1AAgIblIqP5b2DX7w/QC9/7ky/g
      he/+CADw/M9+Ep/7f76MJzbO4odvvImKA3z4xCFkFA9/cuEGivki3jtfxMW7K3htuYJnFuaw
      uroMIz+DR/MGvn7xBor5Av7cXBF3Nkr405vreO74YRQMhq/e2sBT7z2BX/nke5DS473JN66s
      4NED8RboOHI4HX9rieOJYwditTsqXru0gqeObO2uMYNgo+6gXK3hyL1tlDjne5sBZLQqazh/
      bRnn/vnvwLRb4nivZb3UbCOf6L8phAcg8+gxfORDi7HHMwgDDIK3loAnju0X38eR4B/1jH78
      zvK2M0AvcWy97qBareHQ1KbgMxGB7iGRm0br9vcE8Qcrr4U90ELSjJe4DqD+5mV8g3P85HOL
      sXat3C7dcquI33Y8rFy5jXNLm9Yo35kRj8DKFHH61L6RxhQGzjlMleFsWUOb0aS1B8qiDIKD
      J07hSjIDvVmLNP0FETuRHkDjrSt4wXLxsY+ehB6SnSRjy+h/jJzVa3V0PY55r4QFpxV5Thje
      qhsAhmOAfu8hZSqYypp4eD4rzt3TVqAgDh9dxDP/3d9DW9msRUMYl7nPvXQdX/3qm2hLQXRk
      wXnzRhnnrq7gzZs1mOr2VZzYCmy31zeOlQro7LsAbDLvhAEkMMaw+MhjWPiLf9V3bOz9XL+N
      r375nIgkFdlXnotT+xUczjZxYnZrFucoMhklPzmU+Iax3MToR/Z1xI15ku/NuVd7dLIC9MD7
      P/lzcI91tgsdJdm81zXq7bt44Yuvo2ltzvT8HsWkjO1/LYOucMF764pElf4dFZRLLedVh32m
      dM0wjzVBC+hfEwYIgaIoeP63/i7YiadGaqcfUalLK/j6F16TyorvbEeSjKjZ1zczc//3YcVI
      YjYK7yBCJ/1LJnrP83pmklnOHk6JHATZbBaf+K3PwDl4tO8LHEVMYitrePELZ1BtOkgnTdTb
      D57sH54+Or72Kf6fdpPRdR2GYQhPPH2nz3KpGBof/aUMxfd9wgA9kEqlMP/nnoOdSItjoyjD
      kYyysoYX//jH0FWG1dqDwQBx0i5FReYtTtGMmpwURelagRzP/33CAH3wE5/+RWgHFnzHesmY
      vdDrPG2jhK994QwOFYffGmicCBJrP+INEnq/JxIpQmG0ZJ5+ljvH9R+bMEAfMMZgZjKRSl8w
      9GCUmS5vNXBrtX9mGcm59Dk4yw1DQNSm3B6BlMzg+T37C4m9D0Pw2kGfXK/nHTYuz/MzyIQB
      4kASgXphVF+B6Tn48Q9u9z2PCFWuCOe6LizLEr8NWqxKiAjS1qRUvY4KYpGlhbYtlf+62huo
      90002t5Q18addOS2GWMTT3AcfOiX/yu8dnAeYAoq1y+jWVqHs3wLRqM7WnMQz3FoRen1Cs5c
      ruOpY9FMJ9fhkUOfqa7mMKHQVFWOrpNrb8r7dXHOoWmaSLqJmoHjPAd5/HTs3ewOzr+hwslP
      o9128J6Txdj3MExc04QBYiCXz+O5n/8l37HSxgZe/Kd/D+zGRd/xfi8gLMRC/m5wF2+9cgsn
      Dh2P9AfIBBdGfKP4LPq1JxO8bG0ZNv9Avnf6/0jtBlC/ibqr4GXnFB49kkU2qUJVGJQRFeng
      9RMGiImLFy6gVSnB4RxWvY5Tp5/Gh37jv8crf/QfsXHxHFTdgL50LdZs2Ctzq5FO4+M/s3hf
      nGHjxKiOYAYgo3p4uvwmln+o446SQBsKSkoGzzx9BIbGYOr+ZxT17OWxBAMRJwwQEydOnsRb
      r/4AM3MdUSiXz4OxAj7x678JAGi1mvjD3/rrSDbLA734IBMcemQ/iumdYQkKQ5gxQP68KdoA
      o3iC5bZmDRtARx/hKOPM60C6VUYjPwvN1FEut5DLmEikTDxxNI+3b1bhNltorpehpZKwymVM
      Lczh+OE81AkDDI9H3vPermP0kpLJFB77L/4mXNvGO//h92DY8aMgfStETJoJ1R+2AYP1Fyfs
      e8AQDACnvVuAAaBZQ6lu4pDnIF91USup+MGNHBbVMtIUTFgHoAG16yW8cmsGzfwsTh3Oi5FN
      GGBMuHTpEk49/QySySTmF0/g27/7O9Cr4fsRyA4aGW1Fw/R0/w1dgzL5VjDBqO1yzkfamzmu
      PlFQ2sKYn1FdPKmGFy7OqB4exzKaG6v44YvX4OZn8L5nFidm0GFx5fIl3/epqSLO/Ol3AAAH
      Dx/BR//uPwEPONCATcIKq+dvHp7B8bn+DBC0v2+Fh3VUpopz9VaElvTqi3OOBHPxiFFB0mtP
      /ACjYHa/P6+2WJzC+z760+L7zOx+vOdXfxM2C5fnyZElv2zXdmE5Wx0KsU0Bd2NelEYJpguD
      5wGW400YYFik0347/Xe/+RJK636RZ+H4SVjZqb6eSiHP31nDS99fjT2G4WbK0cKeB+mlnwgU
      Fm7Rr79BmSCKcdq2gxvL1YkOMC4884EPoFnv3oc4e/govHMrAPy2dg6gzRksRYejqFBTGehJ
      hocXsrH73A4FeBiCu/ch1vlxGGwr7jNpKDg2a04YYFwwDBOG0V1d4/Snfwk/4hx6Jo/09D4o
      ZhJGvoh0cQrJRBKZbBbpdBqNRgN3v/W/4OGD/lcy7pe/XTYjD4MJWz2941uICQNsMRYWj6Pw
      a78Jy7J8y7FpmshkMiiXyyKmp/i+X8Ob116Hun4OR7INJHU2divPtqXc3PMDdAW79XEUxrnX
      QZT/fs9vwgBbDMYYUqkUWi2/X4C2/FFVVQST5fMF5J98Dqr6Ydy4dgX28lno5fM4WgQYGw8T
      bNcK0C8pfhCmjir8FWscfc6fMMA2QNd1JBIJHxNwzlGr1YRPgGYqxhhc18XcoSPAoSNw3Y/j
      wpW3wVfPIWddw3xB3Tbx4Ac/ugrD7i5lGAeW7eGoGhIlOsTYhzH39utHt5po2ZO6QNsCxhhy
      uZwIIyZQTD1jnX2wHMeBaZrCREovcf6hh6EdfwyNRgPnrpyFsn4WB411FJLKyBlqr99VoCbC
      Fe+6Oo356nUUMBwTYMwRHYOuGr3OP4ISLp6/NWGA7QKFD8sgnYDyXYvFIjjnaDQacF0Xuq6j
      0WiIa03TxOGT74KmPYO11RXcvvUGtNLbWMi1YAxJbHzqFOZOPCHGKDK6OMfhpxmu/ujbKLz2
      r7EdwhOtfgBG3vQ7DrM49eaEAbYTqVQK9RBTKQDfZteZTMb3W6vV8inQtm0jly8gX+joC9eu
      X4a39ha08gWoCE+EIXJYrnBcXWmBEqPcAvM55Wg1okSbI6efxaXqKqbeeQFFNuRKMACI2S3L
      Es/EdV2xU2QcxF0pDjmrk+K42wnOOTY2NmBZm2mPFBJhGAZyuVzodY7joNVqodlsRpb8oN0U
      e4Fk6Hq9Lhx5nHOR+UXnpFIpkfnleR4URcHypXNIfPOfo6i2Q9seF+je5LInNK7g/cVxMIY9
      KzkWa8IA24x6vY5qtSq+04tVFAWFQiFy13XLslAul8eye3q73Yau65EMQ6VHms2m6EtRFKze
      vILEi/8YRdbcNkW8F8bhRJuEQmwzksmkL4yCZiLXddFsRu8yOa5YGNI5eq0Wrut2mW09z8PM
      oaOwPvrbuKwd3rISJ+OCnKXWs3TLZAXYfliWhfX1dZTLZbTbbeTzeSHvGoaB2dnZrmscx8H6
      +vpYNr+zbVvk9UYhyiNLG1S//ZXfx2NLL93XlSA4xkH9BZY3KYx1X0CVzhzHgWVZaLVaWF9f
      x/LyMu7cuRN5TSqVGsvMaxiG8D5HIWrFoeoQcx/4NFad+zdxjuM5VF11YgW6H1BVFZlMBpZl
      IZ1Oi5mfMYZsNtwmzxhDMpmMtCINgrBQ7EGRzeVw5eTPYOby5+/bKjB6PsRkBdh2LC0toVqt
      gjEG27ah6zra7TZSqRRSqRRyuRw456hWq12z8CCmwF6ghJxRxCnXdcFnjo08lmERp+xKL/mf
      MYYVLzVZAbYbrVYLyWQSZ8+eRaFQEObNRqMBy7KwtLQEz/NQKBSwtLTUcX4dPgyg89LS6TRK
      pdLI4/A8D6qqCjPnMDi4cAx3v5/FflaJ7gcK7lgGanPvhnbnjY7Fy2njoGnDgBN53TjR5ios
      T4ELhqLWMfm2PIal/U9OGGC7YZomarUaZmdnkU6n0W63kUwm0Wg0kE6nkUgk4HkekskkdF1H
      Mpn0VUgwTROmaaLd3rTHr62tIZfLwbIsaJoGRVFEu7Ztg3OOZDIpztc0DbZtR5pc4yKRTGHp
      5E9j5uLnQx1wjDGc3/9hLH7sr2DeNIWTy/M8vPXiH+Dk9S/DYINVsAurqQT0LgZmMg/n9j+H
      zMwclDf/E2pKGvzkczi8/5GJFeh+g0IfKPyBoCgKstms8BPoui5esGVZ2NjYEISwsbGBarWK
      TCYDVVXRarWg6zpqtRqmpqZQq9Vw4MBmCidjTJwjO5iGkeV1XcfVs6+g8P3/HUXF7yRreirK
      n/qHmJqe6bpOVVVcePn/w+LFP4zFBGEWnn7HCB4HLmafhPXwx2Am03jyqSeRSCQ79x7vNifY
      KpBYUywWfTOy53moVDqiRbvd7mIOKoMIdGb0+fl5kWOwb98+GIaBQ4cOwTRN5PN5X5+WZXWV
      Oxy2sptt2zj8yNNwf/Z/xuVjfx5rji5k7wvuDA7OzYdexznHqed+Fref+XU0+eCCSFziB4CG
      p2JZKWLx5MN47/veh2Ry05o2WQHGCNd1RxIrLMtCqVTyKafJZFKYP0kBrlarsG1bVGzup8wG
      idt1XfFdlv/lkGy6bhCoqtrJbHvhX8Fdvowjv/wPoZuJ0KQYubzila//Xzh2/YXIdkc1ed46
      +WksfPgXQy1sEwbYYWi1WqhUKoKoVVUV3mMihGq1KhTYRqPRlwHk34n4KBxCJsZarQZV7eQb
      6LoOx3GQSCTE757nCSU+SvYm61YikehYigLEH6Zwl1fuwPjSZ5BV7K7fqM1BwTlQcTVUH3oW
      J37uN5BIJEPPmyjBOwyJRKcuULlcFiEStVoNmqaBJiqayTjnIlBuEFA4RJCwbNtGJpPBjRs3
      BOM1Gg1omoZmsyn8FvV6XZhSbdvGwYMHRRvtdhuapnXtJ9AL0wcP452pJ5Er/ygyhbKfmMM5
      8E33BA7MH4K1dBn1A0/g8Q8+j8cXFnoy0IQBdiBM04RhGD5LT63W2bybGASACJ2m8OG4IMbS
      NM3nFEsmk2i1WpidnYXrujAMA57nodlsIp1OC3GMstkMw+gaD9A7lj9M13AcB6n3/jzqXzmD
      lOJ0nR9sPwyX3CnMqxVk3vUJJFMpHDsWz0cxYYAdAMdxfA6usNBfx3HQbDZ9BAd0FOB8Po9S
      qeQLa44CxQHJTjb6n9oOlm4khZvEJc/zMDU1Fdq2rJyHIUrZnj98BOfTJ3Cy9XbskiqEmqui
      /tCzaOUO4anji5HiThgmVqD7jNCiTe02ms2miLuhv0ajEUrkqqoil8tFKuAywZHoYxhGVzUG
      ORY/bFz9IlI552i322g0Gj4Gllcy27Z93+l3x3Gw+It/B+fTj0e2H4YrbhFfS30I+tzD+Pjz
      PzMQ8QMTJXjHgDKgiHBKpZJQImX5t1AohM6ydB5Vm6jVar7fZaW62WyGtjFKGiL5FhqNBorF
      IpaXl0W4BZlw0+m0CAJsNBqYmppCvV4XAYELCwuo12rQ/vC3kVO7GT24cpxrpJF85ENoHngC
      z37wuaHGPVkBdgg45yiVSlhdXUWtVvNFfhJxe56HWq0WuicXiU2JRALmPa9rmDmTmCpudtWg
      oDxmyjlIJpMoFAowTROWZYn8Zwr+oyjXfD4PxhjMRAIr7/4VrGjdzrPg6nMi2cSFNQvvfs8z
      Q493ogPsEJimCU3TUC6X0Wq1hFIrJ6kDnZVibW0N09PTkSKPbOFRFKXLHJlIJETYBCHoAxgU
      nHOfpSqVSvkC7uRQDPrOGBNm1mazKYL9jjz5AVxjGmZf+5eRIlfDVVBydcwuPtrV9iCYMMAO
      ApkeKWUy6KGVZXSyzIQRLM28zWZTzLJye2ErwDhCpCnAjjGGW7duoVAoCL2A/AKtVgvpdFr4
      FOgzRcGSiJTKT6HlKTCZGzqmVxpF3DQX8JefeGro8QITEWjHIZFIYN++fUgkEj7ZP0gE9Xq9
      p/0/k8lgZmZGzLRhVqV2ux1aqmUU0ErieR7q9brIX6hUKiiVSrAsSyj5tm2LrDhZufc8D5mZ
      OVTdaK/6BzNrmEqqyEYUEoiLyQqww0CEnslkYJomKpUKdF0XMyaBc45mswlVVX2BcnI7JGLQ
      ShCsskDV6mSFOGyFoMjRKCVZjkKltimEm9oENuObikX/1qeKoogqedRGMpXCnVN/Afsu/UF4
      n5xh38l3DeRwC8NkBdjBUFUVU1NTyOVyQmmUYds26vU6ms0m2u121+xN9XRyuRyy2awQT0is
      8jwv0msbNHmS5SaYkBP0KluWJUKwwxJ6SCySrVZymRag43ewLAv7n3wOq7aOMCQUjqnKJSzd
      vRvzaYZjsgLsULiui1dffRX79+8XxE9WlHK5jHQ6LQpmJRIJrK2tYW5uThBiq9WCpmnIZDLg
      nItZd319HZZlCRGLrDZhhE3tkJxuGIYIy6BsNjquKIrQNWzbjqzJE7xHKsEil4NkjAlv+IXD
      Pwl+45uYNbpzmJXGOo6fODHSc56sADsYjDGUSiXcvXsXjuNgY6OzARwpiqurq2IWnZ2dRa1W
      w82bN0Vhq3q9jrW1NaysrIg2NU1DKpUS3ykkglaLYP+MMZ/ZNZFIQNM0JJNJaJomxKeg8yyO
      LhEWxEf6AwXVnfr4LyH9y/8rLs4+i3VvMwiPMYYDa2dw/co7cR5lJCaOsB0KIgQqmruxsYHp
      6WkRplCtVoVsD3ScTKZp+sQcaocIeX19XZhEgzMuBdbJViO5fEpcJxkxjLyiBEMuarWayHaj
      EvF0LZ3XarWQSqVELkQqlUJlfQVrZ74J1/Ogr17EYvsSXp39BH7qv/yNoZ/zRATaoZAJUdd1
      X60gxhg2NjaE2EFMQrZ3OkcGzapyOXY6TswgB8cBCI0YHRQy4xDjNZtNlMtl5HI5tFot1Go1
      FAoFUYpxdnYWjUYD1WpVrCylUgmmaeLET/3n98bE8do3voCjT3xgpPFNGOABBWMM5XJZECgp
      y1GgFMtWq4V2u92VUUWzs6IoaDabQiyinORBIK8AwdmfsU6p+EajAc658HiTB5v6prxoSrKh
      gsEkjjHG8MSHPuXLbBsGExHoAcXt27dFrkAmk4Gu6zBNs8vEGITjOMJGv7GxgUQi4fPYUomW
      oEw/iAjUbDZ9eka/IDqgYz0ifSKsLxqPXNFOVVVks9mRSsVMVoAHFAcOHMDq6qpvBmy32z5C
      CgMRC5VjIWWTMYZ6vS7qFDHGUKvVcPDgQXieh42NDRSLxVBFWdYjKHWTRC46h8yuYSDdg3QO
      +VoK5SCLEfWRyWSE9WkUTBjgAYWsyMqgFaFfXD5t20RyPokWlBJJRAlAmDpv3LiBfD4vRBxy
      zNG5lCxD56iqikqlImJ1iFjlGCZSguW+CKqqolariTgpwL/V7KjED0wY4IFGcN8xoCNKxKn4
      lkwmsbi46Nt7IJvN+sKX5Vm42WxiamoK7XZbZKFRdYpGo4FyuYx8Pi+8yJ7niRRLmr2BzTgm
      TdO6HHNynwB8pVuov3FFrRImDPCAQlEUZDIZEYc/jLwOdGZZIkaqFiETHBH0zEwnPFmurED9
      JBKJroQciuwMMqOiKEin02KVCcsis21bMJesi9CqNw7rlBjPWFqZYNtBIkAqleqKCnVdV5g3
      +ymfZIEpFApCIaa2KaRBJmL5s2zZoQ03SJanyM+wyhDy5oCUcG/bNtbX10V78spAMUIUZiGb
      iEfFxAq0S2DbNqrVqih6lUql0Gw2hYUozoxJ1iGqUifPvKQbAPD5GsKiVCl0ohdo5aLyK7qu
      i3IwlCJJsj8l6tdqNRHFms/nYVkWGo0GnnzyyaHNoRMG2EWgaEvSC2hmLhQKscUizrnYximY
      SUazbhQDUM2gKAVdhmz1IR2DqluQFSiRSIj8YRKpKABwampKfD948CCGpeEJA+wycM4FExAB
      ZzKZrp0ne8HzPKytrYkYfcY6hbSCsrrMAHIIxDB2/2azKYiYPMK6rgumCxb3mp6eHtkJBkx0
      gF0H8rTmcjlBnBQuHRfkNZaL5oatIMFKEnIYtGymDFpvbNv2zdiy3Z+UYtlqFPQmy3kDo2LC
      ALsQJD6Q/Z3k6kFCGqioLhEaOciiQBt5y4rxt7/9baiqipdffhmNRgMbGxsiiYcKfa2trcHz
      PKEAB5XmIPHL9zgOTBhgl4KYgDCoDZ1i8pPJpDCHRiXPhLXLWGe7p2vXrmF2dha3b9/GysoK
      PM/D66+/jnq9jqWlJRiGgVu3bmHfvn24fPlyZLUKErcmfoAJYoO8vaZpdlWUiwPKJlMUBY1G
      Q4RHkJxPpkrZPg9sEu38/Dw2NjaEj4ByF6ampoQ/YHV1Fel0Grdu3cL09DQcx/HpGkHCHzcj
      TJTgCfqCLEPNZhOtVguqqvoqQHueJ8Ih5GR+2VZPjq+gw428xlTtmixYFIkaXLnIBxBWmnEY
      TESgCfqC4nwqlYogSMuyRDAdhVO0Wi2f5SiYF6xpmqgSQUxA1h2S/UnsMk0TjuOI/sj7S3nM
      o1avIExEoAn6Yn19XUSIUgUIikOi2B7btkWIQ71eh6qqYr8zsuRQ+DLFG4URMa0IRPRUZ9Sy
      LLiui2w2i1qtJsosjooJA0zQF+R8ajQaACDEFdu2heMrkUggnU4L0YVqncomT7IiyV7lIOQU
      TloRGNss3U4h0ePCRAeYoC+oTCNFfVJEaKPRELM8+QpIxgcgvpOsT4n6lMIZ3LJI3rJVrk8U
      ZCSgE5Q3DrqdrAATRIJmY7LKUEwRxepQ1hdVqSD5n+R3VVVRrVZhmqYg5Gw2KypIUzuJREJk
      qskMQPoBMYC8pZNlWSLUYxSL0EQJniASQcIiLzNlYslVHKhCnby/Gedc7CJD19C5FOpAlSGA
      TkGsVquFer0ujhEjkChEx4LlFIfFZAWYYGCEzbgUBiGHMBCBygwRtpOmfA3J+KZpipBq8hzP
      zMz4dq8JKxM/KCYMMMFAkAtXkZjTbreRTqeFmOK6ri8bTI7hodDnMMj+BbIUaZoGXdcxNTUl
      xB5y6o1aFxSYMMAEA6LZbIqtWYlgHcfpqiyXTCa7Zuh2ux2puJIDjMpArjd62QAAANVJREFU
      UntkDaKdbbLZrFDKqYboKMrwhAEmiA2S6eWURDJtWpaFcrksSiaSE4t2rQG6Q5qpTWImWhlo
      TzQ5JKJeryObzfoqSBiGgWazKbLRhsFECZ4gNsJ2sidnWKVSAedchEvIf2S1kbdylfUIMpHK
      xyk9kwg7nU4Lkce2bbGJIPko5JKPsge6n89gsgJMEBty+RRCWGEqkttJVCJTJ2Vwcc5h2zay
      2axPP6AN/ojo5VIoFI1Ku0x6noebN2+KMiwbGxvIZrPCNEuM4Hkejh8/HnlP/z+cfd4caOif
      FgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eXgc13Xg+6uq3hc0GvsOAiAJ7osoUgu10LI1lmPJtrxpvMmxouibxH6T
      973neTMv+TLPdt5M3nzjvDx7MolHEy+Jk/FItmVZsq3NkrVTEkVxp7iCBEjsS6P3tareH80q
      VHdXNxokQEJC/b6PBNBddetW1T3nnnPuufcKqqqqWFisUMRrXQELi2uJJQAWKxpLACxWNJYA
      WKxoSgTg+3/9F+w9OgiZGR75+bMlJ/zkJ48AMDJwnOMDI1VfKDV2nO/++Nf639ODR/n6n/5H
      UsrlVHt+jux9lv/0V9/hu9/9LoMTkYrHfvfb3yYFPHLp3iqRmRnkJ0++BMCTP3mE2GXW752X
      nuSvvvO3PPzwwwxNXm4peV779Y957fgYv/3t8wD85JH578Mij634g5ToY9/vfsONq+/lwvA4
      gycP8vSLb5KTfNx92yaefvopkjj44KYWwnh5d/8r/HbvERo7V3P3rm7+9tHn8SgJdt/9OYSp
      U7x56CS+pm4+dXN3wXVefuEldm5p582jFwhGjyG078QfPcmY0M7UiZc5NzLLXZ/8PCde+S32
      Bjet3Zs4+sqzTIYTfOQzX0IKneXXL+1HUe189X95gMd+9AMmYhnuu/9BmgMuIjPjXL/nY9zY
      EuPh37zITV0i+98dZNWGnWxqkBmhjTZGGKENyAv0U08/RTgncvvGJo4ORnHVeJkameDLX/os
      jzzyKPfddx9KJs6F0UkARi9cIAf86qc/ZnAsxM4P3I1t+hhvnZkhHJpmVVsTE3H42lc+xY9+
      8ENiGZH7H3yQgMtGaHKUPR/7PDt6apEzUX70T4+ye0MLM64ejr34GHaPF1ttN5+68zp+8KP/
      geII8OAf3M/Df/0f8Acb8LZu4MM7e/j+j39KeGKQD/XcyfT0BAPH9/P0U0+REz2sDmRou/4e
      Rt5+krbr7+H1px9BSSe54/c+zi9++iiiu54HH/g8NmHpG9pypdQEEuzcuqGFV49eAKCusQWf
      y8Gx136Hq3srGzdu4oHP3Us8MsNMJM4Tz73O1772xyTOvcPIbIxAez9f/MQe9h06QUtbBw67
      xO9+93zRRVROTcS5967befPlF1m9ppdXXn6VV15/m95GhZcOjnDTro384rEnGb1wmsa+HWxd
      u4quznZsSpxnX97HL379Il/92leRMhHGTu7j1KzAdaubeezpl/WrPPfko/zdj59g9w2beGnf
      Cb761a9y/M0XiFyqu3YPAG29G9i0cRMPfekzxEKTTOdcfPSDHyA1OcDg+XeJKjV6ucf2v8rD
      Dz/M/mNnyc2e58S0g69+7au88KufE5ocZecdH6fNoXD7J79IMjzCyX0vMivUsbrZztMvv6OX
      8+Sj/8jDDz/MTMZNX02Wh586yK4NnczEsnzp9x9k+OR+XnrmcTxt66jJjfPGsYskVDtffuAh
      Bo7t5emf/4yPffmP+NAtOwC4cOECvRt2sHHTJr70mXuYGR8mnlH0nwfffouP3vcVDv72p9T1
      bMUeG+Cds9OL1Zbek5j6ANs/8FEOvPAECvDzf/4nbvrIJ1nT1YSqgpxJk5Xn7BY7OSLxFKFo
      GpcN8sok//8//fP/5JOfvY+mWm9B+bGxEwyPz/KjR59l6Oy7OJvWIofPEck5aPB7SMdnUSQf
      u2/YArjo620nPnyMvYNpPv7h21AVFUHNkEimiUSiODweoqEQjroOdq6b62nuvOezfP3f/Rm7
      1q9CySZJphIkMjI2QSSdTjM9Xfjy5WyKdE4GoK+3D4C777qNf//N73DHnXv04zbuuIWHHnqI
      HRv7EB0ekpFpErEQsug0fcgej4dQKERdRz/rupv0z+/57P089NBDNPpsDI7NUKPGCSWyyHKO
      bDpONCXj97iZmQnRu3EHbbWuS2fmn6/DKTETihAOhwuul02lyckKoiiQTiWZnpkBoL6tm1qP
      /VJ9ZujfeiNNXsm0zisF6Rvf+MY3ij9s7+yi1uuhtqWD3Ts389xzL9C3dj19a1bTEXTy9CsH
      2LqxH0+gnlt2beLxx37Bjf/i46xqDmJz+2lrzP/cuqadF159h/UbN7K6dxWiw0NHSz0To2Ps
      uuOjfOj23XTWOXEE26lz5Ghdu4329k66mzzsO3iM1es301QfoK2rE4+/nqmzB4mqXnp7ethz
      42Z++atnGJma4Z5P/kvqpBhHTg6yccsWgjV5gQvUNxP0uwGB1V0t/OLxp/jop+5jdV8fB17/
      Hc7aVvr6VlMf8NLR2Ul7vZcnXniT7ZvX4w82EvS7qWls5fCho9z7e3foz0d0eOlqa8w/q751
      dPhknnr+De77wufxuR0EG9vwu220dHTiEGHzzluQYqOcHBxny5at1HjzDfm1F3/L/v37CTY0
      4gi0cc8dOzkzHOLE2y9z/uIEH733s2zdfj0zQ+8yMpNk69bNuJ02ujq7ALj9jg/x8jNP4Kxt
      Y+3afgJeB52dXdR7RV548xgfuuN2fvfs07R297F6TT9eh0hXZyfda9YzeuYI45EsW7dswuVY
      uUIgvFdHgl957pccHxihrr2fz9x9x/wnXCa/+ek/0LDhdnZtXLVk1yjmkZ88wn2fu++qXW8l
      854VAAuLxcAaB7BY0RSEQaPR6GUXlE6ncTrNnUALi+VKgQD4/f4rKuxKz7ewuNpYJpDFisYS
      AIsVTUkqhMXVZe/evfT29nL48GGCwSB9fX0899xz9Pf3c+DAAbq7u2lvb6e1tZWnnnqK3t5e
      hoeHAUgkEtx3332IoqXHLhdLAK4xfX19KIpCbW0tdrsdVVXZvHkzfX19SJLEqVOniEajrFmz
      hoaGBkKhEKtWrUKWZU6fPo2iKJYAXAGWAFxjRkZGsNlsyLKMz+cjFAoxPj5OU1MT69evp7m5
      mUQiwcmTJ6mpqWHNmjUcOHCA/v5+JEnCZrNe4ZWwaANh0Wh0SaJAuQv7Fr1Mi/cOUmM/gqtm
      /gMvk2WvPpI/+8q1roLFNcT96R9i69y5ZOVbxqPFisYSAIsVjSUAFisaSwAsVjSWAFisaCwB
      sFjRWAJgsaKxBMBiRWMJgMWKxhIAixWNJQAWKxpLACxWNJYAWKxoFiAAKqFQCFXJcXF4jOjs
      LLIKodDs0tXOwmKJqT4dWskxE4qQjEWwqzIXp8L443HODY2z+4ZtKIpCLpdbwqparEQURV7S
      dlW9AKgKE+MjNDY2EA1HqW1pZWp0mNbWRkRRRBRFa3aSxaIjiks76636kiUnN910U+Fn7a2L
      XB0Li6uL5QRbrGgsAbBY0VgCYLGisQTAYkVjCYDFisYSAIsVjWkYVM5miMTigEAgWGtJicX7
      FtO2nU0nOfXuEZ5++ndkr3aNLCyuIqYC4PIFsDtgdnQKawMxi/czZawbGTnrZPv1G69ubSws
      rjJlzftsNoUrEMBxNWtjYXGVKSMAEvV1NUyMjFk+gMX7GtMo0NDhg4xnFeqbGli5e4hbrARM
      BcDlq2VrZzsesATA4n2NqQA09a66ytWwsLg2WGNcFisaSwAsVjSWAFisaCwBsFjRWAJgsaKx
      BMBiRbPg9SYio0MMhLP4iOJv7uPEkSPcftvNS1E3C4slZ8ECILjcKEMjKG3dTAwcp6G9HUVR
      rIWxLJaE5bMw1iU8Pj91rZ20NdWRratBkiRrYSyLJWP5LIx1CcnuYlVXOwAOp3PRK2RhcTWx
      nGCLFY0lABYrGksALFY0lgBYrGgsAbBY0VgCYLGisQTAYkVjCYDFisYSAIsVjSUAFisaSwAs
      VjSWAFisaCwBsFjRWAJgsaKxBMBiRWMJgMWKxhIAixWNJQAWK5oFC0A0NMmhQ0cZPHuC2WSO
      Q4cOL0W9LCyuCgsWgHA8zZrWAFHJz8SZw8h271LUy8LiqrDgSfHN9QFODU3Q3dZEzCnS5HYv
      Rb0sLK4KBQIQjUarOqmrrQkAn8+nn5dIJBa5annSG7+0JOVavDdQBD9ile2yWlRVRRAEAARV
      VRdlJ9RoNIrf71+MoiwslhRFURDFvPVvrWS1zEgnopwbvEhTczNTszHqvDaSsoSQjeGsaaQx
      WHOtq/ieR2v8YIVBlx0Ot4+Ax8l0JIHXLpDIyiBnQHKSioWvdfXed1gCsMyITA4zGc/gscNM
      LIkoZ0nnVFLxMILNda2r977D8gEsVjSLJgAWFu9FLBPIYkVjCYDFisYSAIsVjSUAFisaSwAs
      VjSWAFisaCwBsFjRWAJgsaKxBMBiRWMJgMWKxhIAixWNJQAWK5pCAVBlXnnhOfYdPM7Rw4Wr
      PRT/XYnnnnsBgOOH9vHqmwcqHnv68FGKJ1O+/PxvePHFF0lkS49/8ldPli1r6vy7jEay7H3z
      jarrarGyKZwRlprhjcNneOAru/n77/wHRHcNialB9p8YIjp8BtVpZ/9Lr6J4Ajzwxc9y9MBb
      vLD3EEGngk9M4e3dxuDFELlklDtJ8Pq+Uzz44Bf4zeOPkohGEAWJup0fY/jAU0wPj5K1eajP
      xOhUYPDA27gdNj77hS/yzv79bNt1KwMHX+E3L+1n26p6xu2tCNkUidAoj/3kHwhHEkiCk0EV
      PnfbDn759MtsbZMY8s6SGz1CYnqMRCKKIAqcS9TiUZL8wf2fuUaP2WIhzIxd5OzFCbp6e2iu
      CwIQmg0RrA0u+rUKewCbly/f/zn+8Uc/pLu3n/6eIK/vPcSFkRE6V61m3eoOTp8+T2dHOwCv
      vf4awxcvYHd52bl1LUMDA6zddgMOEcBOLpcgHk8QiqXYvq6T2USGTDJKKgv1zZ20NwTo6Oxm
      /fr1tNV4wFeLBHhrm9mzZw+d7c1MToUI+l2s3bCZbDw/OTqRhb5mP7G0nT9+6AH2vvYaY8MX
      ae3oYN269QBMhWLs3L6OyclZVm/YhlOSF/3hWSwNPr8fJZPk8KGDDJw6zn/9zt+y78hhDu97
      g4f//gdEMot3rcL5AKrMwbf3Ud+1ljpnjqHpJLnoFP7GVpr9TgbGItTas0QVF+v6ujh9/BCq
      K0it10nAYyMp+Tl/8iiNrR20tzQRmRnj1IUZNq9u48iZEXZs6uPAkdO0tTUiqAICKvW1Pg6f
      GiI68DaBbfewtbuW08cPMjwxS3fvWtobvbz59C8ZkFbx6bt2E54ax+cUGZyM0xb0U9PcxOjZ
      E4QzEhv6ezh48BitLY001Qd458gZtm3oJiq7ySXCNDc3Ld6Ts6iK197Yy+4bb+LcmRO4a5vw
      223E0zEUUeT86WFuvGlHyTmx2SlOnB6kta2JTDrL1MQEzV2dKOk0E1MhtmzfgWuRZrNbE2Is
      lpTX3tjL7l2b+McfPsaanhZORyQC8hQtq3pQMzZTAbiaWAJgsaSEp8cYCaVwqUlqW1eRjoVx
      CDLRnEjQ56MmcG2n0VoCYLGiscYBLFY01sJY14BDb7/Ovtf30rF2I5F0Co+3jrFTR8k6vHTX
      u0jGo/TcfC/X9dZf66q+77F6gGuA2y5hb+xhavgiH/34Jxg7+TKivxuvkOX8VJR7P7ybA0dO
      XOtqrggsH+Aa8P2/+y5967fQ0VTLodPn6erdwtjpfWTtAVY1uBm8OMrOD32CjqC1ENZSYwmA
      xYrGMoEsVjSWAFisaAqiQIlEAkmSKp6gqiqpVApVVXE6nQXHq6qKqqpks1lyuZy+CUFBtsWl
      38tZXto5xccIgoAgCPrmBplMBkmSkCSpbJnaOWZll0MQBHK5nH5f81mIWp2M5WvPQftclmXs
      djuiKCIIAna7Xf9eFMWCa6VSKWTZPG9JUZSSe1oIZu+jGkRRxOVy6e/UbreXHJNIJFAUpeRa
      GmbPqFIdzVBVFZvNhqqqZDIZEokEtbW1KIqy4HvSyzN+IEkSTqdz3pNUVSUajeJ0OnE4HAWV
      1h5CIpFAEAR9LXatgoqiFDyoYowN3XhToigiimLB58lkUhcCY92MaI3OWJf5yGQyeiMtV0dN
      EM1edPE9plIpPB4PDocDp9OJzWYjnU7rCsfv9+NwOFAUhVQqRTZbmgeeyWRwOBwFu5ssFO3+
      Kz3/4nvRGp3b7UaWZV0IPB5PQWOOx+Ml9Ta+e+1Zmn1Wrp5mddWebzqdxul0EovFyOVyuFz5
      gEGxQpJl2fS96/dW1ZMwIAgCTqcTWZZ1yTO+EO1ikiSZfl/8EIrLNv5e/L2xLK0H0hqr8eFU
      Oq8azF5Ocd3Kladdq1hYId+IVVVFkiTsdntJXQVBwGYrfSWZTAan03lFjb/4voo1MpQXjFwu
      RzKZ1Ff/1noiY73tdjuZTGGaptZWMpkMuVyu5DtBEEyvqd2nmYBo5djtdlKpFLlcDlmWcbvd
      c9seCQLZbJZ0Oo2qqni9pRs5asdelg8giiIejwe73U4ulyupqNPpxOfzmZoR5UwSsxdrvCGt
      HLMHlk6ngbzQaRpfo5ymroSxxzAK63zlGBuX8Z/D4dCfUyaTIZVKFdxTNBpFlmUEQSjpUavF
      rLEUm2ILMUWhUBOnUilSqRQ2mw2Hw1FyrNPpLNG0oijqJouG1juWe5danaoxa1wul957GstW
      FIVsNovD4TBt/BqCIFy+E6zdXLHUa99pQmB20XJ2vva3UTsZNamZ9jKaFFdiIxe/EDONX40/
      UCyARtNL+9xutxeYC5q20vauMusF5qt3OZOikqlR6TsNTQkIgkAymSzrn5iZGbIsk0gkTM+p
      xmbX6mcUGrPvE4mEae+YzWbnbQtXFAWSJAl3mW1StRdp9jLNtHRxIzd+ZzzGaF9rD0WrRzqd
      LtDel+MAl/t8IYKlNRrNP7HZbMiyXOLTGEmlUsTjcXK5nKmGNVLpeRV/X+58I+W0bfFnsiwz
      MzNTIryab1Cs0RVF0X2GyzXdzHy64mvU19eTTqeZmZkpOE+SJDKZDLIs6/9yuZz+T5blKw+D
      SpJU9uY0U8lIcQPVfpZ7YWaNWbtB409ZlpEkiXg8rl+7nENtxpW8JDM0ISjW/oAeZfJ4PLrt
      mslkiMfjpNPpgvPKYdZTVoqgFZ9rVl41n8myzOzsrN7YNROn3Da55ZRHcV3NhNBohmoBhOJI
      G+SFwOFwUFNTQyKRIJPJ6OfY7XZdERnfif7PtNaLhFbZYjtQo7gyCwnTmdmzoijidrt1s2y+
      Bm3sVczKWyzMGqCm7Yt7SVmWyWQyelTDrD7GRnU5glvt8WbHqapKLpfTw57xeJxIJFJWYOez
      5ysFE4znSJKk947F5Rl7XLfbrZvgRtOw3DNc0mxQzalLJpNltbv2s7hbN0YCqmmQRuHRHpYm
      eAtxXKsNlS6U4jCsZsppmkozK7LZLC6XC4fDUXHz8Ur3ZKZIjM9hIYrGeL7x+Hg8jqIoVW+Q
      bmbaauHVSn6Csa7FitRMAWjvUOuhKpmBV+QEV4Mm/Q6HQx+wMrNfjV2d0XQpvoFqokZGx1lz
      gqoVouLrLSbFXbd2HS06ZDRjFhoJqqThKvk11Qq7WfmyLOsx+ErHlcNut+PxePTGX66X0BRF
      KpUC8mM/MGfizucPmWG0Npa0B8hms0QiEVQ1H4tV1XzIz9jwjS/JLNJS/JK0YyqFU429gBYZ
      qtQDldOUi0k5E0tRFFwuF7Is673AQjUzVA4jXy7VNCpjbz1ffYxIklRW8xvPN15fG0eBwjGL
      av07M2W6pD2AFjOWZZlwOKxLr4bxZirdhNaTaMdqnxU7whrF4cZyD9l4bLnrXila3bU6mPk8
      xTa/oigFz6pcHb1erz56v1hjB4tFNXF8Y+9hpqSKFWUlP8LsX/FzNusRl9wH0JxS7Z/xO835
      qzQ0X6xhiu0944MxczZdLpeuOarR7out/XVn69K9mkWmjD0V5EOi1aQrpFKpgkG2cmhCUuyL
      VWpU1dxXsf+0EMdcG7yspseoFMUyppcUH6eFno310cKfWvRyyQXAZrNRW1tLLBYreQF2ux27
      3U4sFpvXjiv34qpxcosdonLhwuLzrtQcMjrWRpu1WKNpvopZiK8SWmx7Prxeb0GukZHLFQIz
      7byQIELx+zZ71povVw673U5NTU1J4xcEgXQ6jc1mKwh/mrHkc4IFQUCSJHw+H4Ig6FEDrZJ2
      ux2/3086nda1QjkqNchyjWa+l2JseJXCZpdLcQMr7rW0z7Rjy+FwOLDZbPo4x0Kub5aXpF23
      mvs0O7+c4JjlCZVjvsZtt9tJp9OmQi4Igp6OU+4aiURCjwa63W5TU/GqzAfQhMDr9ZZkEWoC
      4fF4cLlcpqm2l0Oxo3mlmny+LFYzjOaA5uAW16NcKM9IKplkYuSiPs6x0Lonk8mqzKpqzZBK
      Jon295UqEVEUyeVyJVFB7fqaf1muzg6HA7/fjyRJpNNpZmdniUQiJRmrV21VCGNP4HQ6iUQi
      unOopVZ7vV49J8ZoghTbmMYyzXyAYk3ldDr19NniOmnMF00ptncXOl5QPNA3X4jS2NuFw2HG
      fvZf6PzGf1vQNTXK9a7Fz8ns+YF5SnK1lOu1y/XW2vFm9dUGuDTnP5fLkU6n9XQH7Vy3262P
      ANfW1pLL5fTM0VQqVaBkr+qyKJoQiKJIIBDQh/9VVdUzDQcGBhg+9Cbpt58BVKB6zT0ledh5
      cy8A56ay9DQVpmEgCKCqIAgLKLV64qkciYxKY6A0l0cgfzfzMTgeR3n3ZNG5Kk5VZnJyct75
      GuXQ0lK0RmNULsbGvxCfwNh7lQszm9n1ZqHpcinyxrI8Ho+eWqNl1SaTyYIeXmtLNTU1+qiw
      w+HQ86uKy78m6wJpWlmLjKTTaT3nfGZynBlZor62nrrZoQWVKyOyriV/o+kcrGsrby4sdrQH
      YDaeIZJU6W5cmJlixGsXGDmWwC0WhnhV4PD3voG9cx3+zTcSP38Cd6CO7m03zJs8J4oifr9f
      N6G0vP50Ok04HF5Q/cyiceVMuOJn7HK5sNlsJJPJkvkBTqdTD4iY4fV6cblcZLNZPd+n0sy5
      4vKL669xTRfGkiSJi4PnuDhwmlXrt+Dz+ahraCIRizF1OEndgktc2Ojpooc8F6GMTE7BIZho
      U6AlMQYnx8iceImgoJJTBd46e4KGNZtZd/2NQD6iZOzitbSKmZkZmpqaCqawakqoOG24nNMM
      cw2oUqqBpt2Nmlm7rjaBqTjFOZPJlPVRHA4HLpeLdDpNLBYrO4nGeLxxgkwlrvnKcJnQJL7n
      v8/AgVUkHV6a2jqZSghMi17WypMLKmsJlPpVx+OUGFdFfEL+JZuZF5qA2ASV1nN74dxe9h7d
      i7epg8SZQ7hXbcBZW09g9Wbq6vOry7W3tzM2NobD4aCxsVGPDmlTHTXMwrQaxeMX1TQwrTxZ
      lksG94zXUBSlYKRXQwueJBIJPe9fC3FqZpNm4hizbKsNplxzAejZcj37n2kmOHOOIMDYURDq
      8Na0QJneuaydangfdlFFUVRE8cqiP9r1LpeFxtnb6lwc9dXiS8zMfzBzwtAxehhGDxMEEsfG
      kXu20rDrVhqbm/VoSUdHB6lUiqGhIerq6vD7/bjdbt2EikajBf5BsaNfqUeohJkgzXeMdpyW
      TKmNX2ij5trCC9qsRG1udTnTpxzXXAD8NTU4N+2GvT8HYFa1Y0dmOJlBQUDE/OGVi9Zo9DXa
      OTeZoq/58u3xxaJcdKUcwc5mODmzoHM0Un07WfOph2htay94Hpq54XQ66erqYmZmhqGhIdra
      2vRBMiPGqBeYD0rNJ9yXO8im9Q7GgdJoJIK/pkZ3orXMUO1fOp0mm82iqir19dWvqXrN1wUS
      BIG6/q3Il55TTpB4lyAtudmSxr8QHDaBZCpNNFleIxTbuWYveEHaXyiN9FxOTFyQLu+1pFbf
      wPUP/jva2jsKhE5LStRMEEEQqK+vp7Ozk9HRUSYmJhAEAa/XW9GZNfYI2mfaXGazc8o9v6ps
      80uDV/F4nAsDJxh9+6ecOLyPi/ufYHZ6oqRsLaSuhT+r5ZoLAEBzdx+nnG0AeNQs1zHBRmXK
      9NiKDakoMrGp3cXQRIysXLnxFQ/JGz9bUMNdpOCqzWlnIYpTBpKbP8h1X/k6ExPjnDl9GkBf
      PkSbdF9sFwuCQGdnJ36/n8HBQZLJpGn2rVnEx+jcFkdjys3hNX5v/GlWtiRJxGIxIpEI/slX
      2Nme5Xr722wLTpI6+aRp3aDQga/07jTFsCwEIFhXR01TKwAeQaatZOPU6jBrfutanRw8F2Zs
      tvqd1YoHiK42ktuly/J818+pcLFhHe5gPfv/81d5+x//Gr/fRyqVIhQKMTs7qw8CTU9PEw6H
      9capzT4TRZGmpiYikUhBSNXoqBqXuDHWyWazlbW7jQNbZv6EscEbZ3WJoqiHxqdPvEh3bV7A
      pEv+nCgn9TKKy9RGvGOxmG4SmZHNZgmHw9feB9AI46B9nmPmawxmX0uiwI5uJ++OpmiprRwv
      r/Y6S01rnZtjio1aMafXp9yLjKo22iNn8b91Aj8QUKc4+TdfJ/Cxr9HY0a0fp2lpLSFR09zG
      EVeHw8Hw8LCewKgx3/NwOBwFC3dVg3E03ShoxvMzmQze9AWKDRUtrlFuNDmVSukzzbR8M+06
      2lTJeDyOLMvLRwDae3sZVyewzYzjSyZwUn7BJLPPAeypFPG0gtdZ1LGpwCJNdVyMyNB8NNQ4
      SPlrIT5nBhpHbUtf/NzfTkGhKTtD+Gd/ycn6HuyrNtN83W34/TW6Fjf6AsUavaGhgbGxMdLp
      NPX19QV5UNlstmwMXsu50coqXlmvXCSoUgrG2MAhtjaWvrf8gH75xbO0/DItFV5bdkYT6kwm
      owv+8hGAoIP24CgEYe85N86irEctKWJMdWL3SrhcIg6XqNvKKlCjwrnRKJtWBQrOzSlqRVuv
      +EFWM0hWzkw6P5EknjLE1Qt+mUvtUJmruGqSJ5HNlTa04jrFVBuyzUZQTJUcGxCyBGZOwcwp
      pt75NRfdQdy3fJquDdv0CIs2T0AzOzKZDIIgEAgEGBkZ0aND2pRFj8ejLy1SPBdYKxPyfoG2
      +JfR7yj2JYwp4tpnxucqZSNg4s8W9xzFKIpCJBLB5XLh8/kQRVGvhyzLpFKpuVdbyskAABnG
      SURBVCVrSou/NijinHnSEBAZTXtweiScHgk5lcPulLBJKrsCMm4bgAKUOlqz4QGGpjfQVT+X
      MxNJyiSz8NqJGW7urysxlcp1pcUPt5rufVWTm1VXkAoBcGpwluZUqOzQslavGcXORkfS/CAD
      QVKQHCX27N8xWf8Nunv69IiPZntr/oC2skJ7ezujo6MEg0Hsdru+xqZm5hTPLSjW5E6ns8QG
      z2azevjS4XCUrBNqPHZs6AwtyoDp/fidAmNnD9G6epvps3E6naRSKTKZDDMzMyUrBmr1W1YC
      gDKXprq2XmFNHeTjG5o2Nc4BLV/MtOymv8jWb/Db8TgV4ikIxbPU+aobJVyIPat36VWdUZmu
      Vj+v1zdTPzNW8TgvORKqDa8oV1VXGwqR8RGU7h7ODwywpr8fyNffaCqk02lcLhednZ2EQiEy
      mQz19fW6+SOKIj6fT19gqtiE0TS5NkilCYeWyl18jrHxJ5MJLpx9l9TIQfq7ze+p0S8xGz6F
      omzRG7YkSXrKhJZGnS8vWTJxyG636ws7LxsBUMIjwJXb1kqgEZtUWobHIeJxiBwbTlDnC5R8
      Pz6bZixcfaRoDu1aKsm0TGeDp+LR1eBySNS21sM8AhBTJXrEvC1bzaCTS1CITF/k5cd/wke+
      8CAwFz/XljmBfAONx+N4PB7q6+sZGRlBEAQ9yUxb5cPlchUkrxkjRtrfWsKjKIokk0m9QWqL
      J8+OnUcwKLfw1DAtyjmu76q8PVSTNMWpt59hxwc/q69LqjnAmqNfHJ7VhFBLyhOEJZ4SuRCE
      +Fzez+WMHgKMZxy0dtRUPKapRuLkSIz+trl1S0dDaaZiCttXt5TWq0LDKtZ8IzNJbFQWompH
      R6tRA5IAOVXAJpTa0GbXmfK0IAnQ1dGuR0NisZhu12v3Umz+GUeDtbCppnXNwqBmSiwUCun5
      +Vp5U5OTrLedLAhaHJ+aJCcrphG9gnsXIR7N58rYbDYURSlI5TDWxWazYbfbcbvdJdMnl40A
      yInwFdsPEXcz3f7K5k2j30Y4kebwYAQBFbsoIAkK4TIzDctFG8r1VGYNqPj7xaJTSnMm4aTG
      odJmLxQ8Y721uthyaVKHnmfrn/9QP8ZsYatKqRvavgaag6wt7lXuvgVBIBwO6+aJMYrk8/mI
      jcm6AESSORyiStokKTScUDg4nEOS7Nh89bSt282eWzfgdrtRVZVwOFwQ0nU6nXqKtdmEeY1l
      IQCqqqKmInCFaTtKbJZYqh6fq/JQ+OpmZ0minDxWOWVioVQTSVoM2qU0sazImOCgxVba+xjr
      EMzOMhnsxevN935mK3trxxuXO9cauDY4BXOrOhiFzHgtrYfRJvFofxtJZzK4Da/q+Lkxdva4
      OHSh9HmPpdxckAPcuPNm1vSvK5jfq2WSamiTf6qZPLQsBCCbzWJT8zdwJRrSqWRM7X8zRLEo
      /nwFbdXYQ6iGz64WPlEhlpEZVJx02eciM2ZC6L/ug/pn5UZw7XY7Xq9Xt6V9Pl/FiTOaA6qZ
      RIBuXmnOs9nklXg0Qmc+pMdEOENX/SV/wVDnt8+nSLi66N9+K5/Y3UzDpVRuI8XhVeOeAfOx
      LATg4tB5Wlyl2wItlLgs4HZUt7dXMVOTU7yVyrFzXTsCMDU5jTMQxO+4FKpTFI6eGkK2u9na
      1wyqyskzQ8gOLz11TvadHGEqmiFY66Y50HbF9xJJq2TV6qY/qgACRHIS3Y7KgmfzzvlI5cw6
      TdtruUF1dXWMjY3h8XhKQpfa5PSZmRnThllfX19WeJxuD9MhhZaAxEQoyvrmfHPUlNjJWS+r
      7niA9kvJfeWUiiiK1NbWkkgk8Hq9FVeKKHkeVR21xITOH6VeXATbWK08ocP0FFVl/MIIT78z
      wua6Id44H2F7TZJv//AZvvF//+9sb85rkvPnL3BmIsbs0CHeGtpA3ex5Qs56WmsT9NR1ABCZ
      GOb1sw72bLpyAXCLcTZuKqfFiu8r/7KHwwLZSQG7yYwygLDqYO3G6/S/i5e2N5oU2mixqqqM
      jo5SV1dXsrKfFg69cOECLS0temaoy+XSozDamk9a+cbfGxoamBiAlgAIyGgpD40+iYGpLI07
      PkZbR2dVjdk473chve+yEADbyNuLWl4l+9ssutHc2cYXPlTH08++yrq1AW7dup6TR08XnNfT
      283L+5/l1TNh/s8Pt/GX336Wdet6uThi566b13P79f08//wb7NlzMyeGzDNZC+qo/weKKrC6
      PYgkCYiCgCQK2F0ufGVdmTIOtiSWbfwAaVXA7Z4L02qDUfNlTcbjcb1RF38XDocRRZGZmRm9
      ARY71to1jPk+ehKcmkNRRBQ5B+TPr/dJHJtexYbutVU35ss1Oa+5AKiqipC5vOzP+crVqJQ/
      BCCnk/zn//5rHvrKJ7i5v7lsmfd/+k42dbzFY6+dpaaunq9/5SP8j39+jINjadaKUwzIQR6s
      j9DsW3je0fkLYeRcBgSJlBggG4tA6XBFRdp9CocnvPSo5iGtRiHN4JmTrN24BZjbU63S6nLa
      BBTteWnxe20wSZumaJaD//Kzv+Stw6cYvjjM17/5n/hv3/oTfM29tPZt5uY+L3//899x/uCr
      /Mu7bqbBqRCdsnH41Bl++MxxvvXvv8nU4BH+7C+/B0qOf/sXf8WLP/s7Lk7FGY3B9779zYU9
      nDJccwEQBAFb02oYv7Bk1ygX19Z4fe8RTodVnn9pH5HYZrJTF/j1/nO8E3uK/+P3P8ijT77F
      nVuaePKt8yRiUW6541ZuqO3mf/v/fkEmrXBvo4O//d6rPPiZDwNnL6uOq2qz5DW7AoR4eXzh
      ZfgdKtetlng9sYumrn4E1MKuBpX+lrmcW7PBIiOKohAKhWhqakJVVX0ZwlQqxfT0NLOzs7jd
      bmpra/X1nIzcsudOVLuPVCyGJEAoLvOR2z/Alq1b+dnf/AV3f/6PGBk/wO+ee5NPrWlmGghm
      FRokB+t33cST//P7/NGf/xXN06/y948/y7++74u8+trrvHbk/MIfThmuuQAASIFWohfLa01j
      c80peZPBrNOOZEVm47miM4q1/1y0RpvAsmnndr7bt5UdazXbvZt7PnwLAEOnz/KBPdexvbuW
      7ds3Gcrp4PY9c3/9m6/dx+hMkmx1U3nnpb/dTmhWIOhcmG/ktqls814g1ftxGlo7S76vDQb1
      383CoBqCIBCJRGhoaNAHkaanp/U5uU1NTSSTSX0gzex8UEEQUJQcsUSaP/iDrzA1Pca/+dNf
      8o0/+QL/13/8JvGBCRy+OsJi3uGXHHYEJcfpl58nmcjisit4vB6S6fxAqSiKxMMRssBirCG4
      LARg1Y13cyq4BlWdG0IHwXQ0cOzAE3RyrujT/IGrAjA9NteTFDedgWmVvjpjbzB3RCrjB0qd
      1641fXRVeyMmWZ2XS7Nf4Oiki6Bz/mS3YvxCnHAiavpdLBbD7/dz5tRJZkMzyLKCpg48Ph8N
      jU26na6tqmaz2RgeHqa5uRlRFEmlUkxMTOiJbcYNAI1pzi88/RQ2fz1qOsZsaJwDB07Qt6o5
      vyyKKnHLlrWcGdnPR3fUMDs5hNjSSdwfYDyR4tVfPc6Ou+/k//3Wn9PhyfB79/+v/OrJp2jr
      7mZmdASZ95EA2O12WtvaCvb2Ko4YaGT8TtpKBEMt83sh4YRKZ0AtCeUBJCKLN0K7WMiihKLO
      TQCphsG4k1j9Vlb3bTD9/vihA6Sf/wfqEhP4hUKTZaxrFy2f+eOCnWq0nRY7OjpIp9NEIpGC
      96Ht/FOMKIrsvv0DHD12gt//kz+js6WBTr+dk+dG+H++9WfYyFAjyXx59xpavRJ/cyzO73Up
      nLPZ+OAnPo2/tY2OtTv51zv8OGpb6O/tZG1Q4uTABf7L9/6GyplC1bMsBMAs7bisEzuXUn85
      F9InU2gvuZrlxRcTbfDJGH0xrlevaVSHw0FznZ2ZkECDuzrhnM2I2Pb8W1Y3lXfkAZqTY6bP
      UBAKNwY3jvZOT0+bllVuNheAxx9k14036X83tHbir2tCUHPYnG762hpR3f1M9W7nUzfU4Kpr
      Iuip4fe37eD82TP4agJEImF6e/OmXHNHD80dPVU9i2pZFgIAi5sjU+31jBMy/GKcw0ePXfoy
      L2eTszJebWKOPsRL4d8GsrKKKqcYMrgzSUVk89YAQU9hfo3RYdQiMcbUA4AGn8C5cYkGd3Vr
      3fhsCjOzo6iXzJhKg0emlImWVbMqdjXX0TYA1CJLgc230rf+j/SRZOPkmVV9qwFoaGysvv6X
      wbIQAG3XDo1irVKwA/yVpCwYfi+2XVt9Mq0U2s1yKEdzYv7V6UpevqG9zGRFUrlAybHGSeLF
      wmicWzCSkIinVFBVvf4i+bYqkv9MVcHngnDDJnpXb5lHmVT6rnK4WPs7GgmTSCRoam6ZN9xs
      /E67T8iv9dm/eZuePrFUu3POx7IQgOIl8YpnFxVwhXk7c8WUTxvW63Hllykpybgn8HxIIjQE
      7NQNT5muF2pkOmzHecu/KLyqSYOsdE/zZbhqJFMpopFZmppL08eNZRWXp80SM05IudYsCwHQ
      Ji+nUqmSkcLi0cPFaJbGl3k1TK9z4znCl5zsXC6HcMkEkC5pPS2lGAAhH57VMlVtdoHjqp+1
      agyPWN4UsQkqTl9pT1PCAm/XTEGkJs8iOYMV50mY5QUV9/LLgWUhANq6jsZVBaA0GpT/8Eoa
      7OJtfbQQuh0J2lz5l69lRgqCULALinHSCVAwstq3Fl496WUz5qFNgICYY/j4m9TuvqtiXbRQ
      synzjJhrOGIDREMiFyMDhGI5CEWJqxI5UUIWROqVNCoqAgKyIBBRJNwBF9fffo9exkJWb1tK
      loUAAAVREA2zXuCKokALpcrrmIVry2HU9ppNXGk5cgAFAb9Nnld7N+5/hItOFx3X7zE18VRV
      Rc2kytZZpbR3NNZrcuQ8uYlj9LomsXsBxtk/EydycZbV6xs5P56mpc7B4JvnaZPSqMCIs4Hz
      aRs7b9+pp1HU1NQsmx5gWawMp2GmFYyz+QEUm/dqVumKKX7N2s6F+rIclxxA7XftcyN2EXo6
      7QxkK88YcggKvPrPjJ0/o+fyG7ebAiAeKjjHKByJiUGG3n5On+llzAEav3gO28Dj9DvOYDdU
      b22Hm9tuayPoFcmcn+DMq+dIZ1VmcZBCItSxhU41ipQYwWGTCAQCuFwuSwDMKF6cFUod4pbr
      Ps4pYctiDbiWvRZcvY6mGoIulWy5LFCDpq4X0wSe/Asmh86aJwE6vYWJIoJAXBE4Z/PT6pim
      Z+BRLv78Wwy9+RRDx95i+Pg+ZmdDBIZ/SXed+fUPnY7x6hOncMdiBJQ0QSXNZFokrYrUNrVi
      RyHolTi/7/HL3uJpqVg2JpCWR67NIS3+Tosdi6JI+w33cfodL72pvdiWlQibsxRuRyVfZgwf
      7T1rS46JRsLk3nxCz9hQL9Vt0u7hxvYM0iX/ajUX4eJFVGA6Y2N4/Dquby5t/KmsyhNPnqdB
      yFBD4YSmWcmNIijIEyNkcMObZxA6RLbceYU3vsgsq+YjCII+f9RskVajhm6/7m4Gau4knVs8
      PV1ihy9K0Yvf+udz5GuVBKNH3ig5buTI23jj42RUgYmcnRP4eVfxsrM9i02k5BkLgFeUqS2z
      Uvfbh2foyEZxZUp3dFydmSGlOqhrbmHTvfeTiSXpu/muZWP6aCwrAYD8SwgEAjidTtOQqPEB
      tm/aw0jrp4hlFuehlphfi1HmIpSxUFyCTM2rP+D0L/87MCfYkYkzyA1e0kE3XV12burI8qHe
      jL6sioZRcNw2FXlqkkyu8JjhmRyxkyNl6yAAzmyS6NkT9PT04dl6O+s2bVm8m1wklp0AQGnk
      QhsJNhstbOrbznTPFwlnriw3cMk0k2Ceun1lRc6f4uASFDzn95FMJBAEgZGTB+jJDtDvT7M2
      kKXOkcNjK9yHrFwkqkmI88uXxklnVSYiMnuPRTi4dxi3yQLGGjICNiWHItk4uPdVdnz4nmVn
      /8My8gGK0dZyMb4Q0TBwZKShcx0hxwMop/6BoL10oViNibjIQKhccyxIlABgLCGRyLkqa3Gj
      xWRyYEwWcMQlssoVCMKl0K+qztnZ1YxneEWZQ689T0f0MKqq0C4ufLLC6bCdc4M5GrPj/Oax
      WRyyjEfN4ZtHXwhA1OahJtBA//U30tG9asHXvhosWwFwOBzU1tYSCuXDdpopVC6LM9jcRdj2
      h6jHv0+d3XyKpW98itpQGQHJp4kW/J701bPpg736IdoQRDUN+cyFBKvSY+QH3yJ6sQtF0P+D
      SXVhm1i7kfEe/Q19nTKCABNpCVFVUBBQLm1AZRMUbIKKXQCbmA+5ikJ+ctGJkIPZ0TRuOUtO
      EKmVM/mzqrgPEZWezDQXjr3FaZvKmrVrF37zV4FlKwBmjbxgMvWlqJCRQH0L0U1/yOSR79Po
      KN1wuWLTMTYsbZCIwkYrFP0sV2+AtKuegaZdpsfIskzj4DPUOxa2o+G0rwbPpU2uVaM0GjNU
      L+ULqqEEyZTMjGDnyPil1R5yCj4URAFsgoyASlIFWRWRARUBRc0vtwjgETJ460HATk4VOB51
      0kAaWQW1CinIIlCjxjh+6iR3GdM9lhHLVgAAfUKGJggFmZJmaRKAP9hEdMsfMn74+zQ78pr3
      9KhCIqXgrZBLY8ZCTJaSxK+aBtpvuNv02EwmQ3jgOSrtZWg2j7mnUWJde+UUAkEQmE2q7J/M
      gipwizesn188hapiIuCl72ZlGzNZiUha4DpbeEFO/SnFhxpoon7VVk68+y4bNm5cwNlXh+Un
      kgZEUSQQCBSMjFZjAvhrG2DrHzKaze81n0nm6Jgap81k6cDFotSBnCc1uMoyjeSy1fUYXges
      7vdS4zIvpxpUVWUw7WQgbENMZmlWU3M9YBlbrtg575AyBKOjZE69Q8YkVLocWNYCAHlnOBAI
      lExjnC8K4gvUIW17kJFcE0jm84uXAj2aMq+uXFiFBEHAXimRjbmGaZcEzo4prJViFTV8OYZS
      Dt4KuVETWVrE9Lyp2GZlZxAZUHwk7F761m9ElJansbE8a1WEzWbD4/EQjZbPhjSidd9ef4DE
      9gcZn/whrUwsaR1L5i9cgcSVS9eudt/krKwiJlLMyLai9TG0BLh8yvWlGs9dCxjJOIgkICDk
      iCMxjQ1fwIYiCGRzKqkMBLJp/JRfylJVVbJINEtpWj/3pzS1tBCJlF9b9FrynhAAyM8ZiEaj
      ZecLl2s0Hq+XVTs/RuriAVzC4s7/NZ1wIsy5ypVs7MvKj6hgehh564LA6nVB7GJwbi8y4Nz5
      KF32BCpzJpiqwqmQHaYTeYFQc9iBJCq5Bi+3d2WQDM9NVeHQhIvpmB0BkLIyATl96bt8qRlV
      QBEEzlKLcvoY2667jra2K18ucil4zwiAIAgFm7QZt96BUjvX+HlzRxenW7fRNbZ/YRe9khEs
      QSxxYjUkSSLevJ1T48dY7Y6VrPpQ7p5M9s3Tj9POSWZVPC47nUFtjsFc4eNCjha3rF9DKz+S
      FcnMXNLohrpEommGwnZ6aud8D0GAbc05uDTvfjZj49SAQFCeCy+HAh2s+dyfcH1HFz7f3EYk
      y5H3lAD4/X49RTeRSOiCAJTk1Bc3PjXYjjK6f0FLjMxH8bUKfROhxFcx1m/VnQ8gyzlOv/M8
      jsljkAyzirGKlpOsVq68qsKBEZEbes1dOwdGTT4nXPXOHCexlyS01WTTnBuC9hoRR5nFi2sd
      Cqt7bJw+56JOTjFADR/5+rfx11TeqWe58J4RAA3NGdY0i7YZsnHMwLiSgSDkVzirOfoU4hJO
      QjKmbmhTN4vDtkYBUFUVm81O9667gLuYDc1w+uJJIhdPITnduBLj2Nx+1NpOFNGONHKAdOpi
      xeuPR6Gxxo5NLDW9ZpMqXsm8C2lwKhxAooZsidlWJ6fZO+Dl1j65rPKoc8oE+tqh7076aurf
      M40f3oMCoKE1LK/Xi8vlIhwOF/QGgN5bxCZH8Irm9n9FO71KTM8XCrWwcXKJsf4atcE6aoM3
      weabMGX7bYwMnuLo4JtscpwwPeT8rMjmDvNWGklCwG7+DEQBnE4B0iamJFATifP2BS+7uszP
      n1Rr6f/ct6gN1pnXfRmz7MOg1SBJUkGoFObmEADExwaxV0jcWgpUgwCYCUg5/6D4O+MxLZ2r
      oaaTkQiMRlTGIipjUZXxqMpkTMUmyChlZDmRVfHaywu63Vm+KYgCyFMpTk2X6stETiSy9t73
      ZOOH93APUIwkSfqGzpBvMPF4nEwmg7u1l1nVSb1QOhizFJPkVVXVIzZmUaviBl7sSxQ7wQW+
      TTaLYzqEomqTWvLpCwqQjtmxdbhN7ymbzlUcefB74VLKkikeQeb8YJaeoIj9kj9wNu7Gsftf
      sW3H7golL2/eNwIA+SVHpqamEEURm82G2+3G7/cz8sYz+NXFMXeqZ27gTqPYDzB+b/QXinOc
      jMfbBahzmK/GbBdVBqdl1rWUanOnULkH7K3NsW/UQV2FbV4bhTSHR300BUXCgfX0fPJ+WjtX
      LbtJLgvhfSUAwWB+rRrNF9BSKLbc/QViez7OxSNvkT3+MvWzA/jL+ATVkMjkncpKpNxigSOu
      YWbulK59RNnjK8Vmk7KAu8y0iFRarvi2VVXLoit/jAiEZ3JkunZxy6e/tuxDnNXwvhIAbawg
      Esn35docYm3dof6b7kC5YQ/jY6MMHXkd9fQbtGbGyw71a5+ORiXCUpseIw9lfXRsuhWXq/wa
      xd2GFeAq9TpmPYDZ9xqBvh1MnX6CBkdhyFJRVcZEP7vqzW15Qa4sABfjEnWXdpap1FMmHLXc
      9rEH3heNH+D/B7d5ZUxHzK4dAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
