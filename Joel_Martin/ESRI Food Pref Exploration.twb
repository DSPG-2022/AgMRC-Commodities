<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='County' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2'>
        <calculation class='tableau' formula='2' />
        <aliases>
          <alias key='1' value='State' />
          <alias key='2' value='County' />
        </aliases>
        <members>
          <member alias='State' value='1' />
          <member alias='County' value='2' />
        </members>
      </column>
    </datasource>
    <datasource caption='esri_food_prefs' inline='true' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='esri_food_prefs' name='textscan.14iq3n01445tmx113ac6h0os973b'>
            <connection class='textscan' directory='C:/Users/joelm/Documents/GitHub/AgMRC-Commodities/Joel_Martin/Data' filename='esri_food_prefs_w_state_county.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Median_Household_Income_2000.csv' table='[US_Median_Household_Income_2000#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='GISJOIN' ordinal='0' />
            <column datatype='integer' name='YEAR' ordinal='1' />
            <column datatype='integer' name='REGIONA' ordinal='2' />
            <column datatype='integer' name='DIVISIONA' ordinal='3' />
            <column datatype='string' name='STATE' ordinal='4' />
            <column datatype='integer' name='STATEA' ordinal='5' />
            <column datatype='string' name='COUNTY' ordinal='6' />
            <column datatype='integer' name='COUNTYA' ordinal='7' />
            <column datatype='string' name='CTY_SUBA' ordinal='8' />
            <column datatype='string' name='PLACEA' ordinal='9' />
            <column datatype='string' name='TRACTA' ordinal='10' />
            <column datatype='string' name='TRBL_CTA' ordinal='11' />
            <column datatype='string' name='BLCK_GRPA' ordinal='12' />
            <column datatype='string' name='TRBL_BGA' ordinal='13' />
            <column datatype='string' name='C_CITYA' ordinal='14' />
            <column datatype='string' name='AIANHHA' ordinal='15' />
            <column datatype='string' name='RES_ONLYA' ordinal='16' />
            <column datatype='string' name='TRUSTA' ordinal='17' />
            <column datatype='string' name='TRBL_SUBA' ordinal='18' />
            <column datatype='string' name='ANRCA' ordinal='19' />
            <column datatype='integer' name='MSA_CMSAA' ordinal='20' />
            <column datatype='integer' name='PMSAA' ordinal='21' />
            <column datatype='integer' name='NECMAA' ordinal='22' />
            <column datatype='string' name='URB_AREAA' ordinal='23' />
            <column datatype='string' name='URBRURALA' ordinal='24' />
            <column datatype='string' name='CD106A' ordinal='25' />
            <column datatype='string' name='CD108A' ordinal='26' />
            <column datatype='string' name='CD109A' ordinal='27' />
            <column datatype='string' name='ZIP3A' ordinal='28' />
            <column datatype='string' name='ZCTAA' ordinal='29' />
            <column datatype='string' name='NAME' ordinal='30' />
            <column datatype='integer' name='GMY001' ordinal='31' />
            <column datatype='real' name='Median_Household_Income_Adjusted' ordinal='32' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='esri_food_prefs_w_state_county.csv' table='[esri_food_prefs_w_state_county#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='countyFIPS' ordinal='0' />
              <column datatype='string' name='FIPS' ordinal='1' />
              <column datatype='integer' name='stateFIPS' ordinal='2' />
              <column datatype='integer' name='tractFIPS' ordinal='3' />
              <column datatype='real' name='longitude' ordinal='4' />
              <column datatype='real' name='latitude' ordinal='5' />
              <column datatype='real' name='avgFoodExpenditure_2000' ordinal='6' />
              <column datatype='real' name='avgFoodHomeExpenditure_2000' ordinal='7' />
              <column datatype='real' name='avgMeatHomeExpenditure_2000' ordinal='8' />
              <column datatype='real' name='avgFruitsVegetablesHomeExpenditure_2000' ordinal='9' />
              <column datatype='real' name='avgFoodAwayExpenditure_2000' ordinal='10' />
              <column datatype='real' name='avgFoodExpenditure_2010' ordinal='11' />
              <column datatype='real' name='avgFoodHomeExpenditure_2010' ordinal='12' />
              <column datatype='real' name='avgMeatHomeExpenditure_2010' ordinal='13' />
              <column datatype='real' name='avgFruitsVegetablesHomeExpenditure_2010' ordinal='14' />
              <column datatype='real' name='avgFoodAwayExpenditure_2010' ordinal='15' />
              <column datatype='real' name='avgBakeryCerealHomeExpenditure_2000' ordinal='16' />
              <column datatype='real' name='avgFlourHomeExpenditure_2000' ordinal='17' />
              <column datatype='real' name='avgRiceHomeExpenditure_2000' ordinal='18' />
              <column datatype='real' name='avgPastaCornMealHomeExpenditure_2000' ordinal='19' />
              <column datatype='real' name='avgBreadHomeExpenditure_2000' ordinal='20' />
              <column datatype='real' name='avgBeefHomeExpenditure_2000' ordinal='21' />
              <column datatype='real' name='avgPorkHomeExpenditure_2000' ordinal='22' />
              <column datatype='real' name='avgPoultryHomeExpenditure_2000' ordinal='23' />
              <column datatype='real' name='avgSeafoodHomeExpenditure_2000' ordinal='24' />
              <column datatype='real' name='avgEggsHomeExpenditure_2000' ordinal='25' />
              <column datatype='real' name='avgDairyHomeExpenditure_2000' ordinal='26' />
              <column datatype='real' name='avgLunchAwayHomeExpenditure_2000' ordinal='27' />
              <column datatype='real' name='avgDinnerAwayHomeExpenditure_2000' ordinal='28' />
              <column datatype='real' name='avgBreakfastAwayHomeExpenditure_2000' ordinal='29' />
              <column datatype='real' name='avgAlcoholicBeverageExpenditure_2000' ordinal='30' />
              <column datatype='real' name='avgBakeryCerealHomeExpenditure_2010' ordinal='31' />
              <column datatype='real' name='avgFlourHomeExpenditure_2010' ordinal='32' />
              <column datatype='real' name='avgRiceHomeExpenditure_2010' ordinal='33' />
              <column datatype='real' name='avgPastaCornMealHomeExpenditure_2010' ordinal='34' />
              <column datatype='real' name='avgBreadHomeExpenditure_2010' ordinal='35' />
              <column datatype='real' name='avgBeefHomeExpenditure_2010' ordinal='36' />
              <column datatype='real' name='avgPorkHomeExpenditure_2010' ordinal='37' />
              <column datatype='real' name='avgPoultryHomeExpenditure_2010' ordinal='38' />
              <column datatype='real' name='avgSeafoodHomeExpenditure_2010' ordinal='39' />
              <column datatype='real' name='avgEggsHomeExpenditure_2010' ordinal='40' />
              <column datatype='real' name='avgDairyHomeExpenditure_2010' ordinal='41' />
              <column datatype='real' name='avgLunchAwayHomeExpenditure_2010' ordinal='42' />
              <column datatype='real' name='avgDinnerAwayHomeExpenditure_2010' ordinal='43' />
              <column datatype='real' name='avgBreakfastAwayHomeExpenditure_2010' ordinal='44' />
              <column datatype='real' name='avgAlcoholicBeverageExpenditure_2010' ordinal='45' />
              <column datatype='string' name='ESRI_County' ordinal='46' />
              <column datatype='string' name='ESRI_State' ordinal='47' />
              <column datatype='integer' name='value' ordinal='48' />
            </columns>
          </relation>
          <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Median_Household_Income_2000.csv' table='[US_Median_Household_Income_2000#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='GISJOIN' ordinal='0' />
              <column datatype='integer' name='YEAR' ordinal='1' />
              <column datatype='integer' name='REGIONA' ordinal='2' />
              <column datatype='integer' name='DIVISIONA' ordinal='3' />
              <column datatype='string' name='STATE' ordinal='4' />
              <column datatype='integer' name='STATEA' ordinal='5' />
              <column datatype='string' name='COUNTY' ordinal='6' />
              <column datatype='integer' name='COUNTYA' ordinal='7' />
              <column datatype='string' name='CTY_SUBA' ordinal='8' />
              <column datatype='string' name='PLACEA' ordinal='9' />
              <column datatype='string' name='TRACTA' ordinal='10' />
              <column datatype='string' name='TRBL_CTA' ordinal='11' />
              <column datatype='string' name='BLCK_GRPA' ordinal='12' />
              <column datatype='string' name='TRBL_BGA' ordinal='13' />
              <column datatype='string' name='C_CITYA' ordinal='14' />
              <column datatype='string' name='AIANHHA' ordinal='15' />
              <column datatype='string' name='RES_ONLYA' ordinal='16' />
              <column datatype='string' name='TRUSTA' ordinal='17' />
              <column datatype='string' name='TRBL_SUBA' ordinal='18' />
              <column datatype='string' name='ANRCA' ordinal='19' />
              <column datatype='integer' name='MSA_CMSAA' ordinal='20' />
              <column datatype='integer' name='PMSAA' ordinal='21' />
              <column datatype='integer' name='NECMAA' ordinal='22' />
              <column datatype='string' name='URB_AREAA' ordinal='23' />
              <column datatype='string' name='URBRURALA' ordinal='24' />
              <column datatype='string' name='CD106A' ordinal='25' />
              <column datatype='string' name='CD108A' ordinal='26' />
              <column datatype='string' name='CD109A' ordinal='27' />
              <column datatype='string' name='ZIP3A' ordinal='28' />
              <column datatype='string' name='ZCTAA' ordinal='29' />
              <column datatype='string' name='NAME' ordinal='30' />
              <column datatype='integer' name='GMY001' ordinal='31' />
              <column datatype='real' name='Median_Household_Income_Adjusted' ordinal='32' />
            </columns>
          </relation>
          <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Median_Household_Income_2010.csv' table='[US_Median_Household_Income_2010#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='GISJOIN' ordinal='0' />
              <column datatype='string' name='YEAR' ordinal='1' />
              <column datatype='string' name='REGIONA' ordinal='2' />
              <column datatype='string' name='DIVISIONA' ordinal='3' />
              <column datatype='string' name='STATE' ordinal='4' />
              <column datatype='integer' name='STATEA' ordinal='5' />
              <column datatype='string' name='COUNTY' ordinal='6' />
              <column datatype='integer' name='COUNTYA' ordinal='7' />
              <column datatype='string' name='COUSUBA' ordinal='8' />
              <column datatype='string' name='PLACEA' ordinal='9' />
              <column datatype='string' name='TRACTA' ordinal='10' />
              <column datatype='string' name='BLKGRPA' ordinal='11' />
              <column datatype='string' name='CONCITA' ordinal='12' />
              <column datatype='string' name='AIANHHA' ordinal='13' />
              <column datatype='string' name='RES_ONLYA' ordinal='14' />
              <column datatype='string' name='TRUSTA' ordinal='15' />
              <column datatype='string' name='AITSCEA' ordinal='16' />
              <column datatype='string' name='ANRCA' ordinal='17' />
              <column datatype='string' name='CBSAA' ordinal='18' />
              <column datatype='string' name='CSAA' ordinal='19' />
              <column datatype='string' name='METDIVA' ordinal='20' />
              <column datatype='string' name='NECTAA' ordinal='21' />
              <column datatype='string' name='CNECTAA' ordinal='22' />
              <column datatype='string' name='NECTADIVA' ordinal='23' />
              <column datatype='string' name='UAA' ordinal='24' />
              <column datatype='string' name='CDCURRA' ordinal='25' />
              <column datatype='string' name='SLDUA' ordinal='26' />
              <column datatype='string' name='SLDLA' ordinal='27' />
              <column datatype='string' name='SUBMCDA' ordinal='28' />
              <column datatype='string' name='SDELMA' ordinal='29' />
              <column datatype='string' name='SDSECA' ordinal='30' />
              <column datatype='string' name='SDUNIA' ordinal='31' />
              <column datatype='string' name='PUMA5A' ordinal='32' />
              <column datatype='string' name='BTTRA' ordinal='33' />
              <column datatype='string' name='BTBGA' ordinal='34' />
              <column datatype='string' name='NAME_E' ordinal='35' />
              <column datatype='integer' name='JOIE001' ordinal='36' />
              <column datatype='string' name='NAME_M' ordinal='37' />
              <column datatype='integer' name='JOIM001' ordinal='38' />
            </columns>
          </relation>
          <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_county_2000.csv' table='[US_Population_by_county_2000#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='GEOID' ordinal='0' />
              <column datatype='string' name='NAME' ordinal='1' />
              <column datatype='string' name='variable' ordinal='2' />
              <column datatype='integer' name='value' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_county_2010.csv' table='[US_Population_by_county_2010#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='GEOID' ordinal='0' />
              <column datatype='string' name='NAME' ordinal='1' />
              <column datatype='string' name='variable' ordinal='2' />
              <column datatype='integer' name='value' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_state_2000.csv' table='[US_Population_by_state_2000#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='GEOID' ordinal='0' />
              <column datatype='string' name='NAME' ordinal='1' />
              <column datatype='string' name='variable' ordinal='2' />
              <column datatype='integer' name='value' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_state_2010.csv' table='[US_Population_by_state_2010#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='GEOID' ordinal='0' />
              <column datatype='string' name='NAME' ordinal='1' />
              <column datatype='string' name='variable' ordinal='2' />
              <column datatype='integer' name='value' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[AIANHHA (US_Median_Household_Income_2010.csv)]' value='[US_Median_Household_Income_2010.csv].[AIANHHA]' />
          <map key='[AIANHHA]' value='[US_Median_Household_Income_2000.csv].[AIANHHA]' />
          <map key='[AITSCEA]' value='[US_Median_Household_Income_2010.csv].[AITSCEA]' />
          <map key='[ANRCA (US_Median_Household_Income_2010.csv)]' value='[US_Median_Household_Income_2010.csv].[ANRCA]' />
          <map key='[ANRCA]' value='[US_Median_Household_Income_2000.csv].[ANRCA]' />
          <map key='[BLCK_GRPA]' value='[US_Median_Household_Income_2000.csv].[BLCK_GRPA]' />
          <map key='[BLKGRPA]' value='[US_Median_Household_Income_2010.csv].[BLKGRPA]' />
          <map key='[BTBGA]' value='[US_Median_Household_Income_2010.csv].[BTBGA]' />
          <map key='[BTTRA]' value='[US_Median_Household_Income_2010.csv].[BTTRA]' />
          <map key='[CBSAA]' value='[US_Median_Household_Income_2010.csv].[CBSAA]' />
          <map key='[CD106A]' value='[US_Median_Household_Income_2000.csv].[CD106A]' />
          <map key='[CD108A]' value='[US_Median_Household_Income_2000.csv].[CD108A]' />
          <map key='[CD109A]' value='[US_Median_Household_Income_2000.csv].[CD109A]' />
          <map key='[CDCURRA]' value='[US_Median_Household_Income_2010.csv].[CDCURRA]' />
          <map key='[CNECTAA]' value='[US_Median_Household_Income_2010.csv].[CNECTAA]' />
          <map key='[CONCITA]' value='[US_Median_Household_Income_2010.csv].[CONCITA]' />
          <map key='[COUNTY (US_Median_Household_Income_2010.csv)]' value='[US_Median_Household_Income_2010.csv].[COUNTY]' />
          <map key='[COUNTYA (US_Median_Household_Income_2010.csv)]' value='[US_Median_Household_Income_2010.csv].[COUNTYA]' />
          <map key='[COUNTYA]' value='[US_Median_Household_Income_2000.csv].[COUNTYA]' />
          <map key='[COUNTY]' value='[US_Median_Household_Income_2000.csv].[COUNTY]' />
          <map key='[COUSUBA]' value='[US_Median_Household_Income_2010.csv].[COUSUBA]' />
          <map key='[CSAA]' value='[US_Median_Household_Income_2010.csv].[CSAA]' />
          <map key='[CTY_SUBA]' value='[US_Median_Household_Income_2000.csv].[CTY_SUBA]' />
          <map key='[C_CITYA]' value='[US_Median_Household_Income_2000.csv].[C_CITYA]' />
          <map key='[DIVISIONA (US_Median_Household_Income_2010.csv)]' value='[US_Median_Household_Income_2010.csv].[DIVISIONA]' />
          <map key='[DIVISIONA]' value='[US_Median_Household_Income_2000.csv].[DIVISIONA]' />
          <map key='[ESRI_County]' value='[esri_food_prefs_w_state_county.csv].[ESRI_County]' />
          <map key='[ESRI_State]' value='[esri_food_prefs_w_state_county.csv].[ESRI_State]' />
          <map key='[FIPS]' value='[esri_food_prefs_w_state_county.csv].[FIPS]' />
          <map key='[GEOID (US_Population_by_county_2010.csv)]' value='[US_Population_by_county_2010.csv].[GEOID]' />
          <map key='[GEOID (US_Population_by_state_2000.csv)]' value='[US_Population_by_state_2000.csv].[GEOID]' />
          <map key='[GEOID (US_Population_by_state_2010.csv)]' value='[US_Population_by_state_2010.csv].[GEOID]' />
          <map key='[GEOID]' value='[US_Population_by_county_2000.csv].[GEOID]' />
          <map key='[GISJOIN (US_Median_Household_Income_2010.csv)]' value='[US_Median_Household_Income_2010.csv].[GISJOIN]' />
          <map key='[GISJOIN]' value='[US_Median_Household_Income_2000.csv].[GISJOIN]' />
          <map key='[GMY001]' value='[US_Median_Household_Income_2000.csv].[GMY001]' />
          <map key='[JOIE001]' value='[US_Median_Household_Income_2010.csv].[JOIE001]' />
          <map key='[JOIM001]' value='[US_Median_Household_Income_2010.csv].[JOIM001]' />
          <map key='[METDIVA]' value='[US_Median_Household_Income_2010.csv].[METDIVA]' />
          <map key='[MSA_CMSAA]' value='[US_Median_Household_Income_2000.csv].[MSA_CMSAA]' />
          <map key='[Median_Household_Income_Adjusted]' value='[US_Median_Household_Income_2000.csv].[Median_Household_Income_Adjusted]' />
          <map key='[NAME (US_Population_by_county_2000.csv)]' value='[US_Population_by_county_2000.csv].[NAME]' />
          <map key='[NAME (US_Population_by_county_2010.csv)]' value='[US_Population_by_county_2010.csv].[NAME]' />
          <map key='[NAME (US_Population_by_state_2000.csv)]' value='[US_Population_by_state_2000.csv].[NAME]' />
          <map key='[NAME (US_Population_by_state_2010.csv)]' value='[US_Population_by_state_2010.csv].[NAME]' />
          <map key='[NAME]' value='[US_Median_Household_Income_2000.csv].[NAME]' />
          <map key='[NAME_E]' value='[US_Median_Household_Income_2010.csv].[NAME_E]' />
          <map key='[NAME_M]' value='[US_Median_Household_Income_2010.csv].[NAME_M]' />
          <map key='[NECMAA]' value='[US_Median_Household_Income_2000.csv].[NECMAA]' />
          <map key='[NECTAA]' value='[US_Median_Household_Income_2010.csv].[NECTAA]' />
          <map key='[NECTADIVA]' value='[US_Median_Household_Income_2010.csv].[NECTADIVA]' />
          <map key='[PLACEA (US_Median_Household_Income_2010.csv)]' value='[US_Median_Household_Income_2010.csv].[PLACEA]' />
          <map key='[PLACEA]' value='[US_Median_Household_Income_2000.csv].[PLACEA]' />
          <map key='[PMSAA]' value='[US_Median_Household_Income_2000.csv].[PMSAA]' />
          <map key='[PUMA5A]' value='[US_Median_Household_Income_2010.csv].[PUMA5A]' />
          <map key='[REGIONA (US_Median_Household_Income_2010.csv)]' value='[US_Median_Household_Income_2010.csv].[REGIONA]' />
          <map key='[REGIONA]' value='[US_Median_Household_Income_2000.csv].[REGIONA]' />
          <map key='[RES_ONLYA (US_Median_Household_Income_2010.csv)]' value='[US_Median_Household_Income_2010.csv].[RES_ONLYA]' />
          <map key='[RES_ONLYA]' value='[US_Median_Household_Income_2000.csv].[RES_ONLYA]' />
          <map key='[SDELMA]' value='[US_Median_Household_Income_2010.csv].[SDELMA]' />
          <map key='[SDSECA]' value='[US_Median_Household_Income_2010.csv].[SDSECA]' />
          <map key='[SDUNIA]' value='[US_Median_Household_Income_2010.csv].[SDUNIA]' />
          <map key='[SLDLA]' value='[US_Median_Household_Income_2010.csv].[SLDLA]' />
          <map key='[SLDUA]' value='[US_Median_Household_Income_2010.csv].[SLDUA]' />
          <map key='[STATE (US_Median_Household_Income_2010.csv)]' value='[US_Median_Household_Income_2010.csv].[STATE]' />
          <map key='[STATEA (US_Median_Household_Income_2010.csv)]' value='[US_Median_Household_Income_2010.csv].[STATEA]' />
          <map key='[STATEA]' value='[US_Median_Household_Income_2000.csv].[STATEA]' />
          <map key='[STATE]' value='[US_Median_Household_Income_2000.csv].[STATE]' />
          <map key='[SUBMCDA]' value='[US_Median_Household_Income_2010.csv].[SUBMCDA]' />
          <map key='[TRACTA (US_Median_Household_Income_2010.csv)]' value='[US_Median_Household_Income_2010.csv].[TRACTA]' />
          <map key='[TRACTA]' value='[US_Median_Household_Income_2000.csv].[TRACTA]' />
          <map key='[TRBL_BGA]' value='[US_Median_Household_Income_2000.csv].[TRBL_BGA]' />
          <map key='[TRBL_CTA]' value='[US_Median_Household_Income_2000.csv].[TRBL_CTA]' />
          <map key='[TRBL_SUBA]' value='[US_Median_Household_Income_2000.csv].[TRBL_SUBA]' />
          <map key='[TRUSTA (US_Median_Household_Income_2010.csv)]' value='[US_Median_Household_Income_2010.csv].[TRUSTA]' />
          <map key='[TRUSTA]' value='[US_Median_Household_Income_2000.csv].[TRUSTA]' />
          <map key='[UAA]' value='[US_Median_Household_Income_2010.csv].[UAA]' />
          <map key='[URBRURALA]' value='[US_Median_Household_Income_2000.csv].[URBRURALA]' />
          <map key='[URB_AREAA]' value='[US_Median_Household_Income_2000.csv].[URB_AREAA]' />
          <map key='[YEAR (US_Median_Household_Income_2010.csv)]' value='[US_Median_Household_Income_2010.csv].[YEAR]' />
          <map key='[YEAR]' value='[US_Median_Household_Income_2000.csv].[YEAR]' />
          <map key='[ZCTAA]' value='[US_Median_Household_Income_2000.csv].[ZCTAA]' />
          <map key='[ZIP3A]' value='[US_Median_Household_Income_2000.csv].[ZIP3A]' />
          <map key='[avgAlcoholicBeverageExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgAlcoholicBeverageExpenditure_2000]' />
          <map key='[avgAlcoholicBeverageExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgAlcoholicBeverageExpenditure_2010]' />
          <map key='[avgBakeryCerealHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgBakeryCerealHomeExpenditure_2000]' />
          <map key='[avgBakeryCerealHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgBakeryCerealHomeExpenditure_2010]' />
          <map key='[avgBeefHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgBeefHomeExpenditure_2000]' />
          <map key='[avgBeefHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgBeefHomeExpenditure_2010]' />
          <map key='[avgBreadHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgBreadHomeExpenditure_2000]' />
          <map key='[avgBreadHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgBreadHomeExpenditure_2010]' />
          <map key='[avgBreakfastAwayHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgBreakfastAwayHomeExpenditure_2000]' />
          <map key='[avgBreakfastAwayHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgBreakfastAwayHomeExpenditure_2010]' />
          <map key='[avgDairyHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgDairyHomeExpenditure_2000]' />
          <map key='[avgDairyHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgDairyHomeExpenditure_2010]' />
          <map key='[avgDinnerAwayHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgDinnerAwayHomeExpenditure_2000]' />
          <map key='[avgDinnerAwayHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgDinnerAwayHomeExpenditure_2010]' />
          <map key='[avgEggsHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgEggsHomeExpenditure_2000]' />
          <map key='[avgEggsHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgEggsHomeExpenditure_2010]' />
          <map key='[avgFlourHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgFlourHomeExpenditure_2000]' />
          <map key='[avgFlourHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgFlourHomeExpenditure_2010]' />
          <map key='[avgFoodAwayExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgFoodAwayExpenditure_2000]' />
          <map key='[avgFoodAwayExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgFoodAwayExpenditure_2010]' />
          <map key='[avgFoodExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgFoodExpenditure_2000]' />
          <map key='[avgFoodExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgFoodExpenditure_2010]' />
          <map key='[avgFoodHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgFoodHomeExpenditure_2000]' />
          <map key='[avgFoodHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgFoodHomeExpenditure_2010]' />
          <map key='[avgFruitsVegetablesHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgFruitsVegetablesHomeExpenditure_2000]' />
          <map key='[avgFruitsVegetablesHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgFruitsVegetablesHomeExpenditure_2010]' />
          <map key='[avgLunchAwayHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgLunchAwayHomeExpenditure_2000]' />
          <map key='[avgLunchAwayHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgLunchAwayHomeExpenditure_2010]' />
          <map key='[avgMeatHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgMeatHomeExpenditure_2000]' />
          <map key='[avgMeatHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgMeatHomeExpenditure_2010]' />
          <map key='[avgPastaCornMealHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgPastaCornMealHomeExpenditure_2000]' />
          <map key='[avgPastaCornMealHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgPastaCornMealHomeExpenditure_2010]' />
          <map key='[avgPorkHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgPorkHomeExpenditure_2000]' />
          <map key='[avgPorkHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgPorkHomeExpenditure_2010]' />
          <map key='[avgPoultryHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgPoultryHomeExpenditure_2000]' />
          <map key='[avgPoultryHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgPoultryHomeExpenditure_2010]' />
          <map key='[avgRiceHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgRiceHomeExpenditure_2000]' />
          <map key='[avgRiceHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgRiceHomeExpenditure_2010]' />
          <map key='[avgSeafoodHomeExpenditure_2000]' value='[esri_food_prefs_w_state_county.csv].[avgSeafoodHomeExpenditure_2000]' />
          <map key='[avgSeafoodHomeExpenditure_2010]' value='[esri_food_prefs_w_state_county.csv].[avgSeafoodHomeExpenditure_2010]' />
          <map key='[countyFIPS]' value='[esri_food_prefs_w_state_county.csv].[countyFIPS]' />
          <map key='[latitude]' value='[esri_food_prefs_w_state_county.csv].[latitude]' />
          <map key='[longitude]' value='[esri_food_prefs_w_state_county.csv].[longitude]' />
          <map key='[stateFIPS]' value='[esri_food_prefs_w_state_county.csv].[stateFIPS]' />
          <map key='[tractFIPS]' value='[esri_food_prefs_w_state_county.csv].[tractFIPS]' />
          <map key='[value (US_Population_by_county_2010.csv)]' value='[US_Population_by_county_2010.csv].[value]' />
          <map key='[value (US_Population_by_state_2000.csv)]' value='[US_Population_by_state_2000.csv].[value]' />
          <map key='[value (US_Population_by_state_2010.csv)]' value='[US_Population_by_state_2010.csv].[value]' />
          <map key='[value (esri_food_prefs_w_state_county.csv)]' value='[esri_food_prefs_w_state_county.csv].[value]' />
          <map key='[value]' value='[US_Population_by_county_2000.csv].[value]' />
          <map key='[variable (US_Population_by_county_2010.csv)]' value='[US_Population_by_county_2010.csv].[variable]' />
          <map key='[variable (US_Population_by_state_2000.csv)]' value='[US_Population_by_state_2000.csv].[variable]' />
          <map key='[variable (US_Population_by_state_2010.csv)]' value='[US_Population_by_state_2010.csv].[variable]' />
          <map key='[variable]' value='[US_Population_by_county_2000.csv].[variable]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countyFIPS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countyFIPS]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>countyFIPS</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stateFIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[stateFIPS]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>stateFIPS</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tractFIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tractFIPS]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>tractFIPS</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgFoodExpenditure_2000</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgFoodHomeExpenditure_2000</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgMeatHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgMeatHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgMeatHomeExpenditure_2000</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFruitsVegetablesHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFruitsVegetablesHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgFruitsVegetablesHomeExpenditure_2000</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodAwayExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodAwayExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgFoodAwayExpenditure_2000</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgFoodExpenditure_2010</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgFoodHomeExpenditure_2010</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgMeatHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgMeatHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgMeatHomeExpenditure_2010</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFruitsVegetablesHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFruitsVegetablesHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgFruitsVegetablesHomeExpenditure_2010</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodAwayExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodAwayExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgFoodAwayExpenditure_2010</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBakeryCerealHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBakeryCerealHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgBakeryCerealHomeExpenditure_2000</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFlourHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFlourHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgFlourHomeExpenditure_2000</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgRiceHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgRiceHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgRiceHomeExpenditure_2000</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPastaCornMealHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPastaCornMealHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgPastaCornMealHomeExpenditure_2000</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBreadHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBreadHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgBreadHomeExpenditure_2000</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBeefHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBeefHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgBeefHomeExpenditure_2000</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPorkHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPorkHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgPorkHomeExpenditure_2000</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPoultryHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPoultryHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgPoultryHomeExpenditure_2000</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgSeafoodHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgSeafoodHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgSeafoodHomeExpenditure_2000</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgEggsHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgEggsHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgEggsHomeExpenditure_2000</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgDairyHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgDairyHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgDairyHomeExpenditure_2000</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgLunchAwayHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgLunchAwayHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgLunchAwayHomeExpenditure_2000</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgDinnerAwayHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgDinnerAwayHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgDinnerAwayHomeExpenditure_2000</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBreakfastAwayHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBreakfastAwayHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgBreakfastAwayHomeExpenditure_2000</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgAlcoholicBeverageExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgAlcoholicBeverageExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgAlcoholicBeverageExpenditure_2000</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBakeryCerealHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBakeryCerealHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgBakeryCerealHomeExpenditure_2010</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFlourHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFlourHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgFlourHomeExpenditure_2010</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgRiceHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgRiceHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgRiceHomeExpenditure_2010</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPastaCornMealHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPastaCornMealHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgPastaCornMealHomeExpenditure_2010</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBreadHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBreadHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgBreadHomeExpenditure_2010</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBeefHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBeefHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgBeefHomeExpenditure_2010</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPorkHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPorkHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgPorkHomeExpenditure_2010</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPoultryHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPoultryHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgPoultryHomeExpenditure_2010</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgSeafoodHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgSeafoodHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgSeafoodHomeExpenditure_2010</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgEggsHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgEggsHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgEggsHomeExpenditure_2010</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgDairyHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgDairyHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgDairyHomeExpenditure_2010</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgLunchAwayHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgLunchAwayHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgLunchAwayHomeExpenditure_2010</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgDinnerAwayHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgDinnerAwayHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgDinnerAwayHomeExpenditure_2010</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBreakfastAwayHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBreakfastAwayHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgBreakfastAwayHomeExpenditure_2010</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgAlcoholicBeverageExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgAlcoholicBeverageExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>avgAlcoholicBeverageExpenditure_2010</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ESRI_County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ESRI_County]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>ESRI_County</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ESRI_State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ESRI_State]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>ESRI_State</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value (esri_food_prefs_w_state_county.csv)]</local-name>
            <parent-name>[esri_food_prefs_w_state_county.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GISJOIN</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GISJOIN]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>GISJOIN</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REGIONA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[REGIONA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>REGIONA</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DIVISIONA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DIVISIONA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>DIVISIONA</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATEA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[STATEA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>STATEA</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTYA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTYA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>COUNTYA</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CTY_SUBA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CTY_SUBA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>CTY_SUBA</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PLACEA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PLACEA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>PLACEA</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACTA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRACTA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>TRACTA</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRBL_CTA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRBL_CTA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>TRBL_CTA</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BLCK_GRPA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BLCK_GRPA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>BLCK_GRPA</remote-alias>
            <ordinal>61</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRBL_BGA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRBL_BGA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>TRBL_BGA</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C_CITYA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[C_CITYA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>C_CITYA</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIANHHA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AIANHHA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>AIANHHA</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RES_ONLYA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RES_ONLYA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>RES_ONLYA</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRUSTA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRUSTA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>TRUSTA</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRBL_SUBA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRBL_SUBA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>TRBL_SUBA</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANRCA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ANRCA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>ANRCA</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MSA_CMSAA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MSA_CMSAA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>MSA_CMSAA</remote-alias>
            <ordinal>69</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PMSAA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PMSAA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>PMSAA</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NECMAA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NECMAA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>NECMAA</remote-alias>
            <ordinal>71</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>URB_AREAA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[URB_AREAA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>URB_AREAA</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>URBRURALA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[URBRURALA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>URBRURALA</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CD106A</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CD106A]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>CD106A</remote-alias>
            <ordinal>74</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CD108A</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CD108A]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>CD108A</remote-alias>
            <ordinal>75</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CD109A</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CD109A]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>CD109A</remote-alias>
            <ordinal>76</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP3A</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ZIP3A]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>ZIP3A</remote-alias>
            <ordinal>77</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZCTAA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ZCTAA]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>ZCTAA</remote-alias>
            <ordinal>78</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>79</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GMY001</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GMY001]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>GMY001</remote-alias>
            <ordinal>80</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median_Household_Income_Adjusted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Median_Household_Income_Adjusted]</local-name>
            <parent-name>[US_Median_Household_Income_2000.csv]</parent-name>
            <remote-alias>Median_Household_Income_Adjusted</remote-alias>
            <ordinal>81</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GISJOIN</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GISJOIN (US_Median_Household_Income_2010.csv)]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>GISJOIN</remote-alias>
            <ordinal>82</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[YEAR (US_Median_Household_Income_2010.csv)]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>83</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REGIONA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[REGIONA (US_Median_Household_Income_2010.csv)]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>REGIONA</remote-alias>
            <ordinal>84</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DIVISIONA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DIVISIONA (US_Median_Household_Income_2010.csv)]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>DIVISIONA</remote-alias>
            <ordinal>85</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE (US_Median_Household_Income_2010.csv)]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>86</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATEA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[STATEA (US_Median_Household_Income_2010.csv)]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>STATEA</remote-alias>
            <ordinal>87</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY (US_Median_Household_Income_2010.csv)]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>88</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTYA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTYA (US_Median_Household_Income_2010.csv)]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>COUNTYA</remote-alias>
            <ordinal>89</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUSUBA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUSUBA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>COUSUBA</remote-alias>
            <ordinal>90</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PLACEA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PLACEA (US_Median_Household_Income_2010.csv)]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>PLACEA</remote-alias>
            <ordinal>91</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACTA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRACTA (US_Median_Household_Income_2010.csv)]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>TRACTA</remote-alias>
            <ordinal>92</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BLKGRPA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BLKGRPA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>BLKGRPA</remote-alias>
            <ordinal>93</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONCITA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONCITA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>CONCITA</remote-alias>
            <ordinal>94</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIANHHA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AIANHHA (US_Median_Household_Income_2010.csv)]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>AIANHHA</remote-alias>
            <ordinal>95</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RES_ONLYA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RES_ONLYA (US_Median_Household_Income_2010.csv)]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>RES_ONLYA</remote-alias>
            <ordinal>96</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRUSTA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRUSTA (US_Median_Household_Income_2010.csv)]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>TRUSTA</remote-alias>
            <ordinal>97</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AITSCEA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AITSCEA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>AITSCEA</remote-alias>
            <ordinal>98</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANRCA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ANRCA (US_Median_Household_Income_2010.csv)]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>ANRCA</remote-alias>
            <ordinal>99</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CBSAA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CBSAA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>CBSAA</remote-alias>
            <ordinal>100</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CSAA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CSAA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>CSAA</remote-alias>
            <ordinal>101</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>METDIVA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[METDIVA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>METDIVA</remote-alias>
            <ordinal>102</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NECTAA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NECTAA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>NECTAA</remote-alias>
            <ordinal>103</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CNECTAA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CNECTAA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>CNECTAA</remote-alias>
            <ordinal>104</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NECTADIVA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NECTADIVA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>NECTADIVA</remote-alias>
            <ordinal>105</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UAA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UAA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>UAA</remote-alias>
            <ordinal>106</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CDCURRA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CDCURRA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>CDCURRA</remote-alias>
            <ordinal>107</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SLDUA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SLDUA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>SLDUA</remote-alias>
            <ordinal>108</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SLDLA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SLDLA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>SLDLA</remote-alias>
            <ordinal>109</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUBMCDA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SUBMCDA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>SUBMCDA</remote-alias>
            <ordinal>110</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SDELMA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SDELMA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>SDELMA</remote-alias>
            <ordinal>111</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SDSECA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SDSECA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>SDSECA</remote-alias>
            <ordinal>112</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SDUNIA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SDUNIA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>SDUNIA</remote-alias>
            <ordinal>113</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PUMA5A</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PUMA5A]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>PUMA5A</remote-alias>
            <ordinal>114</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BTTRA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BTTRA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>BTTRA</remote-alias>
            <ordinal>115</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BTBGA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BTBGA]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>BTBGA</remote-alias>
            <ordinal>116</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME_E</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME_E]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>NAME_E</remote-alias>
            <ordinal>117</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JOIE001</remote-name>
            <remote-type>20</remote-type>
            <local-name>[JOIE001]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>JOIE001</remote-alias>
            <ordinal>118</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME_M</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME_M]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>NAME_M</remote-alias>
            <ordinal>119</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JOIM001</remote-name>
            <remote-type>20</remote-type>
            <local-name>[JOIM001]</local-name>
            <parent-name>[US_Median_Household_Income_2010.csv]</parent-name>
            <remote-alias>JOIM001</remote-alias>
            <ordinal>120</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US_Population_by_county_2000.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEOID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GEOID]</local-name>
            <parent-name>[US_Population_by_county_2000.csv]</parent-name>
            <remote-alias>GEOID</remote-alias>
            <ordinal>121</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME (US_Population_by_county_2000.csv)]</local-name>
            <parent-name>[US_Population_by_county_2000.csv]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>122</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[US_Population_by_county_2000.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>123</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[US_Population_by_county_2000.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>124</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US_Population_by_county_2010.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEOID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GEOID (US_Population_by_county_2010.csv)]</local-name>
            <parent-name>[US_Population_by_county_2010.csv]</parent-name>
            <remote-alias>GEOID</remote-alias>
            <ordinal>125</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME (US_Population_by_county_2010.csv)]</local-name>
            <parent-name>[US_Population_by_county_2010.csv]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>126</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable (US_Population_by_county_2010.csv)]</local-name>
            <parent-name>[US_Population_by_county_2010.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>127</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value (US_Population_by_county_2010.csv)]</local-name>
            <parent-name>[US_Population_by_county_2010.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>128</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US_Population_by_state_2000.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEOID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GEOID (US_Population_by_state_2000.csv)]</local-name>
            <parent-name>[US_Population_by_state_2000.csv]</parent-name>
            <remote-alias>GEOID</remote-alias>
            <ordinal>129</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME (US_Population_by_state_2000.csv)]</local-name>
            <parent-name>[US_Population_by_state_2000.csv]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>130</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable (US_Population_by_state_2000.csv)]</local-name>
            <parent-name>[US_Population_by_state_2000.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>131</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value (US_Population_by_state_2000.csv)]</local-name>
            <parent-name>[US_Population_by_state_2000.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>132</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US_Population_by_state_2010.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEOID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GEOID (US_Population_by_state_2010.csv)]</local-name>
            <parent-name>[US_Population_by_state_2010.csv]</parent-name>
            <remote-alias>GEOID</remote-alias>
            <ordinal>133</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME (US_Population_by_state_2010.csv)]</local-name>
            <parent-name>[US_Population_by_state_2010.csv]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>134</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable (US_Population_by_state_2010.csv)]</local-name>
            <parent-name>[US_Population_by_state_2010.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>135</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value (US_Population_by_state_2010.csv)]</local-name>
            <parent-name>[US_Population_by_state_2010.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>136</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk]&quot;' value='Average Poultry Home Expenditure 2000' />
          <alias key='&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]&quot;' value='Average Poultry Home Expenditure 2010' />
          <alias key='&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]&quot;' value='2000' />
          <alias key='&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]&quot;' value='2010' />
        </aliases>
      </column>
      <column caption='AIANHHA (US Median Household Income 2010.csv)' datatype='string' name='[AIANHHA (US_Median_Household_Income_2010.csv)]' role='dimension' type='nominal' />
      <column caption='Aianhha' datatype='string' name='[AIANHHA]' role='dimension' type='nominal' />
      <column caption='Aitscea' datatype='string' name='[AITSCEA]' role='dimension' type='nominal' />
      <column caption='ANRCA (US Median Household Income 2010.csv)' datatype='string' name='[ANRCA (US_Median_Household_Income_2010.csv)]' role='dimension' type='nominal' />
      <column caption='Anrca' datatype='string' name='[ANRCA]' role='dimension' type='nominal' />
      <column caption='Blck Grpa' datatype='string' name='[BLCK_GRPA]' role='dimension' type='nominal' />
      <column caption='Blkgrpa' datatype='string' name='[BLKGRPA]' role='dimension' type='nominal' />
      <column caption='Btbga' datatype='string' name='[BTBGA]' role='dimension' type='nominal' />
      <column caption='Bttra' datatype='string' name='[BTTRA]' role='dimension' type='nominal' />
      <column caption='Cbsaa' datatype='string' name='[CBSAA]' role='dimension' type='nominal' />
      <column caption='Cd106A' datatype='string' name='[CD106A]' role='dimension' type='nominal' />
      <column caption='Cd108A' datatype='string' name='[CD108A]' role='dimension' type='nominal' />
      <column caption='Cd109A' datatype='string' name='[CD109A]' role='dimension' type='nominal' />
      <column caption='Cdcurra' datatype='string' name='[CDCURRA]' role='dimension' type='nominal' />
      <column caption='Cnectaa' datatype='string' name='[CNECTAA]' role='dimension' type='nominal' />
      <column caption='Concita' datatype='string' name='[CONCITA]' role='dimension' type='nominal' />
      <column caption='COUNTY (US Median Household Income 2010.csv)' datatype='string' name='[COUNTY (US_Median_Household_Income_2010.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='COUNTYA (US Median Household Income 2010.csv)' datatype='integer' name='[COUNTYA (US_Median_Household_Income_2010.csv)]' role='measure' type='quantitative' />
      <column caption='Countya' datatype='integer' name='[COUNTYA]' role='measure' type='quantitative' />
      <column caption='County1' datatype='string' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Cousuba' datatype='string' name='[COUSUBA]' role='dimension' type='nominal' />
      <column caption='Csaa' datatype='string' name='[CSAA]' role='dimension' type='nominal' />
      <column caption='Cty Suba' datatype='string' name='[CTY_SUBA]' role='dimension' type='nominal' />
      <column caption='C Citya' datatype='string' name='[C_CITYA]' role='dimension' type='nominal' />
      <column caption='Map State or County Level' datatype='integer' name='[Calculation_1192890997300523009]' role='dimension' semantic-role='[State].[Name]' type='ordinal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column caption='CountyLevel' datatype='string' name='[Calculation_1192890997300772866]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when 1 then Null&#13;&#10;when 2 then [countyFIPS]&#13;&#10;END' />
      </column>
      <column caption='DIVISIONA (US Median Household Income 2010.csv)' datatype='string' name='[DIVISIONA (US_Median_Household_Income_2010.csv)]' role='dimension' type='nominal' />
      <column caption='Divisiona' datatype='integer' name='[DIVISIONA]' role='measure' type='quantitative' />
      <column datatype='string' name='[ESRI_County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[ESRI_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Fips' datatype='string' name='[FIPS]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='GEOID (US Population by county 2010.csv)' datatype='string' name='[GEOID (US_Population_by_county_2010.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='GEOID (US Population by state 2000.csv)' datatype='integer' name='[GEOID (US_Population_by_state_2000.csv)]' role='measure' type='quantitative' />
      <column caption='GEOID (US Population by state 2010.csv)' datatype='integer' name='[GEOID (US_Population_by_state_2010.csv)]' role='measure' type='quantitative' />
      <column caption='Geoid' datatype='string' default-role='measure' default-type='quantitative' name='[GEOID]' role='dimension' type='nominal' />
      <column caption='GISJOIN (US Median Household Income 2010.csv)' datatype='string' name='[GISJOIN (US_Median_Household_Income_2010.csv)]' role='dimension' type='nominal' />
      <column caption='Gisjoin' datatype='string' name='[GISJOIN]' role='dimension' type='nominal' />
      <column caption='Gmy001' datatype='integer' name='[GMY001]' role='measure' type='quantitative' />
      <column caption='Joiestimate001' datatype='integer' name='[JOIE001]' role='measure' type='quantitative' />
      <column caption='Joimargin001' datatype='integer' name='[JOIM001]' role='measure' type='quantitative' />
      <column caption='Metdiva' datatype='string' name='[METDIVA]' role='dimension' type='nominal' />
      <column caption='Msa Cmsaa' datatype='integer' name='[MSA_CMSAA]' role='measure' type='quantitative' />
      <column caption='Median Household Income Adjusted' datatype='real' name='[Median_Household_Income_Adjusted]' role='measure' type='quantitative' />
      <column caption='NAME (US Population by county 2000.csv)' datatype='string' name='[NAME (US_Population_by_county_2000.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='US Pop County 2010.csv) - Split 1' datatype='string' name='[NAME (US_Population_by_county_2010.csv) - Split 1]' role='dimension' semantic-role='[County].[Name]' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[NAME (US_Population_by_county_2010.csv)]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [NAME (US_Population_by_county_2010.csv)], &quot;,&quot;, 1 ) )' />
      </column>
      <column caption='US Pop State 2010' datatype='string' name='[NAME (US_Population_by_county_2010.csv) - Split 2]' role='dimension' semantic-role='[County].[Name]' type='nominal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[NAME (US_Population_by_county_2010.csv)]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [NAME (US_Population_by_county_2010.csv)], &quot;,&quot;, 2 ) )' />
      </column>
      <column caption='NAME (US Population by county 2010.csv)' datatype='string' name='[NAME (US_Population_by_county_2010.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='NAME (US Population by state 2000.csv)' datatype='string' name='[NAME (US_Population_by_state_2000.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='NAME (US Population by state 2010.csv)' datatype='string' name='[NAME (US_Population_by_state_2010.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='County 2000' datatype='string' name='[NAME - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='5' user:SplitFieldOrigin='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[NAME]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [NAME], &quot;,&quot;, 1 ) )' />
      </column>
      <column caption='State 2000' datatype='string' name='[NAME - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[NAME]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [NAME], &quot;,&quot;, 2 ) )' />
      </column>
      <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
      <column caption='Name E' datatype='string' name='[NAME_E]' role='dimension' type='nominal' />
      <column caption='Name M' datatype='string' name='[NAME_M]' role='dimension' type='nominal' />
      <column caption='Necmaa' datatype='integer' name='[NECMAA]' role='measure' type='quantitative' />
      <column caption='Nectaa' datatype='string' name='[NECTAA]' role='dimension' type='nominal' />
      <column caption='Nectadiva' datatype='string' name='[NECTADIVA]' role='dimension' type='nominal' />
      <column caption='PLACEA (US Median Household Income 2010.csv)' datatype='string' name='[PLACEA (US_Median_Household_Income_2010.csv)]' role='dimension' type='nominal' />
      <column caption='Placea' datatype='string' name='[PLACEA]' role='dimension' type='nominal' />
      <column caption='Pmsaa' datatype='integer' name='[PMSAA]' role='measure' type='quantitative' />
      <column caption='Puma5A' datatype='string' name='[PUMA5A]' role='dimension' type='nominal' />
      <column caption='REGIONA (US Median Household Income 2010.csv)' datatype='string' name='[REGIONA (US_Median_Household_Income_2010.csv)]' role='dimension' type='nominal' />
      <column caption='Regiona' datatype='integer' name='[REGIONA]' role='measure' type='quantitative' />
      <column caption='RES ONLYA (US Median Household Income 2010.csv)' datatype='string' name='[RES_ONLYA (US_Median_Household_Income_2010.csv)]' role='dimension' type='nominal' />
      <column caption='Res Onlya' datatype='string' name='[RES_ONLYA]' role='dimension' type='nominal' />
      <column caption='Sdelma' datatype='string' name='[SDELMA]' role='dimension' type='nominal' />
      <column caption='Sdseca' datatype='string' name='[SDSECA]' role='dimension' type='nominal' />
      <column caption='Sdunia' datatype='string' name='[SDUNIA]' role='dimension' type='nominal' />
      <column caption='Sldla' datatype='string' name='[SLDLA]' role='dimension' type='nominal' />
      <column caption='Sldua' datatype='string' name='[SLDUA]' role='dimension' type='nominal' />
      <column caption='STATE (US Median Household Income 2010.csv)' datatype='string' name='[STATE (US_Median_Household_Income_2010.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='STATEA (US Median Household Income 2010.csv)' datatype='integer' name='[STATEA (US_Median_Household_Income_2010.csv)]' role='measure' type='quantitative' />
      <column caption='Statea' datatype='integer' name='[STATEA]' role='measure' type='quantitative' />
      <column caption='State1' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Submcda' datatype='string' name='[SUBMCDA]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='TRACTA (US Median Household Income 2010.csv)' datatype='string' name='[TRACTA (US_Median_Household_Income_2010.csv)]' role='dimension' type='nominal' />
      <column caption='Tracta' datatype='string' name='[TRACTA]' role='dimension' type='nominal' />
      <column caption='Trbl Bga' datatype='string' name='[TRBL_BGA]' role='dimension' type='nominal' />
      <column caption='Trbl Cta' datatype='string' name='[TRBL_CTA]' role='dimension' type='nominal' />
      <column caption='Trbl Suba' datatype='string' name='[TRBL_SUBA]' role='dimension' type='nominal' />
      <column caption='TRUSTA (US Median Household Income 2010.csv)' datatype='string' name='[TRUSTA (US_Median_Household_Income_2010.csv)]' role='dimension' type='nominal' />
      <column caption='Trusta' datatype='string' name='[TRUSTA]' role='dimension' type='nominal' />
      <column caption='Urbrurala' datatype='string' name='[URBRURALA]' role='dimension' type='nominal' />
      <column caption='Urb Areaa' datatype='string' name='[URB_AREAA]' role='dimension' type='nominal' />
      <column caption='YEAR (US Median Household Income 2010.csv)' datatype='string' name='[YEAR (US_Median_Household_Income_2010.csv)]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
      <column caption='Zctaa' datatype='string' name='[ZCTAA]' role='dimension' type='nominal' />
      <column caption='Zip3A' datatype='string' name='[ZIP3A]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='US_Median_Household_Income_2000.csv' datatype='table' name='[__tableau_internal_object_id__].[US_Median_Household_Income_2000.csv_EA3C542EF6C54882AEE76F7D275E48CC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='US_Median_Household_Income_2010.csv' datatype='table' name='[__tableau_internal_object_id__].[US_Median_Household_Income_2010.csv_A281DEF8E477474C905DEF12480A9DAD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='US_Population_by_county_2000.csv' datatype='table' name='[__tableau_internal_object_id__].[US_Population_by_county_2000.csv_D696557D09A840009823E3B964ECA401]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='US_Population_by_county_2010.csv' datatype='table' name='[__tableau_internal_object_id__].[US_Population_by_county_2010.csv_1D49E474C0A04B278A0241CB1823E74E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='US_Population_by_state_2000.csv' datatype='table' name='[__tableau_internal_object_id__].[US_Population_by_state_2000.csv_4B7F7818B78449DD9087218AD559A824]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='US_Population_by_state_2010.csv' datatype='table' name='[__tableau_internal_object_id__].[US_Population_by_state_2010.csv_347E4BBEDECA417BA360FBAF611549AE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='esri_food_prefs_w_state_county.csv' datatype='table' name='[__tableau_internal_object_id__].[esri_food_prefs_w_state_county.csv_F1C51441A06E4CB7B249B60E211B8D48]' role='measure' type='quantitative' />
      <column caption='avgAlcoholicBeverageExpenditure 2000' datatype='real' name='[avgAlcoholicBeverageExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgAlcoholicBeverageExpenditure 2010' datatype='real' name='[avgAlcoholicBeverageExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgBakeryCerealHomeExpenditure 2000' datatype='real' name='[avgBakeryCerealHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgBakeryCerealHomeExpenditure 2010' datatype='real' name='[avgBakeryCerealHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgBeefHomeExpenditure 2000' datatype='real' name='[avgBeefHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgBeefHomeExpenditure 2010' datatype='real' name='[avgBeefHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgBreadHomeExpenditure 2000' datatype='real' name='[avgBreadHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgBreadHomeExpenditure 2010' datatype='real' name='[avgBreadHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgBreakfastAwayHomeExpenditure 2000' datatype='real' name='[avgBreakfastAwayHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgBreakfastAwayHomeExpenditure 2010' datatype='real' name='[avgBreakfastAwayHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgDairyHomeExpenditure 2000' datatype='real' name='[avgDairyHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgDairyHomeExpenditure 2010' datatype='real' name='[avgDairyHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgDinnerAwayHomeExpenditure 2000' datatype='real' name='[avgDinnerAwayHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgDinnerAwayHomeExpenditure 2010' datatype='real' name='[avgDinnerAwayHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgEggsHomeExpenditure 2000' datatype='real' name='[avgEggsHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgEggsHomeExpenditure 2010' datatype='real' name='[avgEggsHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgFlourHomeExpenditure 2000' datatype='real' name='[avgFlourHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgFlourHomeExpenditure 2010' datatype='real' name='[avgFlourHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgFoodAwayExpenditure 2000' datatype='real' name='[avgFoodAwayExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgFoodAwayExpenditure 2010' datatype='real' name='[avgFoodAwayExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgFoodExpenditure 2000' datatype='real' name='[avgFoodExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgFoodExpenditure 2010' datatype='real' name='[avgFoodExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgFoodHomeExpenditure 2000' datatype='real' name='[avgFoodHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgFoodHomeExpenditure 2010' datatype='real' name='[avgFoodHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgFruitsVegetablesHomeExpenditure 2000' datatype='real' name='[avgFruitsVegetablesHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgFruitsVegetablesHomeExpenditure 2010' datatype='real' name='[avgFruitsVegetablesHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgLunchAwayHomeExpenditure 2000' datatype='real' name='[avgLunchAwayHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgLunchAwayHomeExpenditure 2010' datatype='real' name='[avgLunchAwayHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgMeatHomeExpenditure 2000' datatype='real' name='[avgMeatHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgMeatHomeExpenditure 2010' datatype='real' name='[avgMeatHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgPastaCornMealHomeExpenditure 2000' datatype='real' name='[avgPastaCornMealHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgPastaCornMealHomeExpenditure 2010' datatype='real' name='[avgPastaCornMealHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgPorkHomeExpenditure 2000' datatype='real' name='[avgPorkHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgPorkHomeExpenditure 2010' datatype='real' name='[avgPorkHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgPoultryHomeExpenditure 2000' datatype='real' name='[avgPoultryHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgPoultryHomeExpenditure 2010' datatype='real' name='[avgPoultryHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgRiceHomeExpenditure 2000' datatype='real' name='[avgRiceHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgRiceHomeExpenditure 2010' datatype='real' name='[avgRiceHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgSeafoodHomeExpenditure 2000' datatype='real' name='[avgSeafoodHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgSeafoodHomeExpenditure 2010' datatype='real' name='[avgSeafoodHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='County FIPS' datatype='string' name='[countyFIPS]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <semantic-values semantic-role='[County].[Name]'>
          <semantic-value key='1001' value='&quot;Autauga&quot;' />
          <semantic-value key='1003' value='&quot;Baldwin&quot;' />
          <semantic-value key='1005' value='&quot;Barbour&quot;' />
          <semantic-value key='1007' value='&quot;Bibb&quot;' />
          <semantic-value key='1009' value='&quot;Blount&quot;' />
          <semantic-value key='1011' value='&quot;Bullock&quot;' />
          <semantic-value key='1013' value='&quot;Butler&quot;' />
          <semantic-value key='1015' value='&quot;Calhoun&quot;' />
          <semantic-value key='1017' value='&quot;Chambers&quot;' />
          <semantic-value key='1019' value='&quot;Cherokee&quot;' />
          <semantic-value key='1021' value='&quot;Chilton&quot;' />
          <semantic-value key='1023' value='&quot;Choctaw&quot;' />
          <semantic-value key='1025' value='&quot;Clarke&quot;' />
          <semantic-value key='1027' value='&quot;Clay&quot;' />
          <semantic-value key='1029' value='&quot;Cleburne&quot;' />
          <semantic-value key='1031' value='&quot;Coffee&quot;' />
          <semantic-value key='1033' value='&quot;Colbert&quot;' />
          <semantic-value key='1035' value='&quot;Conecuh&quot;' />
          <semantic-value key='1037' value='&quot;Coosa&quot;' />
          <semantic-value key='1039' value='&quot;Covington&quot;' />
          <semantic-value key='1041' value='&quot;Crenshaw&quot;' />
          <semantic-value key='1043' value='&quot;Cullman&quot;' />
          <semantic-value key='1045' value='&quot;Dale&quot;' />
          <semantic-value key='1047' value='&quot;Dallas&quot;' />
          <semantic-value key='1049' value='&quot;DeKalb&quot;' />
          <semantic-value key='1051' value='&quot;Elmore&quot;' />
          <semantic-value key='1053' value='&quot;Escambia&quot;' />
          <semantic-value key='1055' value='&quot;Etowah&quot;' />
          <semantic-value key='1057' value='&quot;Fayette&quot;' />
          <semantic-value key='1059' value='&quot;Franklin&quot;' />
          <semantic-value key='1061' value='&quot;Geneva&quot;' />
          <semantic-value key='1063' value='&quot;Greene&quot;' />
          <semantic-value key='1065' value='&quot;Hale&quot;' />
          <semantic-value key='1067' value='&quot;Henry&quot;' />
          <semantic-value key='1069' value='&quot;Houston&quot;' />
          <semantic-value key='1071' value='&quot;Jackson&quot;' />
          <semantic-value key='1073' value='&quot;Jefferson&quot;' />
          <semantic-value key='1075' value='&quot;Lamar&quot;' />
          <semantic-value key='1077' value='&quot;Lauderdale&quot;' />
          <semantic-value key='1079' value='&quot;Lawrence&quot;' />
          <semantic-value key='1081' value='&quot;Lee&quot;' />
          <semantic-value key='1083' value='&quot;Limestone&quot;' />
          <semantic-value key='1085' value='&quot;Lowndes&quot;' />
          <semantic-value key='1087' value='&quot;Macon&quot;' />
          <semantic-value key='1089' value='&quot;Madison&quot;' />
          <semantic-value key='1091' value='&quot;Marengo&quot;' />
          <semantic-value key='1093' value='&quot;Marion&quot;' />
          <semantic-value key='1095' value='&quot;Marshall&quot;' />
          <semantic-value key='1097' value='&quot;Mobile&quot;' />
          <semantic-value key='1099' value='&quot;Monroe&quot;' />
          <semantic-value key='1101' value='&quot;Montgomery&quot;' />
          <semantic-value key='1103' value='&quot;Morgan&quot;' />
          <semantic-value key='1105' value='&quot;Perry&quot;' />
          <semantic-value key='1107' value='&quot;Pickens&quot;' />
          <semantic-value key='1109' value='&quot;Pike&quot;' />
          <semantic-value key='1111' value='&quot;Randolph&quot;' />
          <semantic-value key='1113' value='&quot;Russell&quot;' />
          <semantic-value key='1115' value='&quot;St. Clair&quot;' />
          <semantic-value key='1117' value='&quot;Shelby&quot;' />
          <semantic-value key='1119' value='&quot;Sumter&quot;' />
          <semantic-value key='1121' value='&quot;Talladega&quot;' />
          <semantic-value key='1123' value='&quot;Tallapoosa&quot;' />
          <semantic-value key='1125' value='&quot;Tuscaloosa&quot;' />
          <semantic-value key='1127' value='&quot;Walker&quot;' />
          <semantic-value key='1129' value='&quot;Washington&quot;' />
          <semantic-value key='1131' value='&quot;Wilcox&quot;' />
          <semantic-value key='1133' value='&quot;Winston&quot;' />
          <semantic-value key='4001' value='&quot;Apache&quot;' />
          <semantic-value key='4003' value='&quot;Cochise&quot;' />
          <semantic-value key='4005' value='&quot;Coconino&quot;' />
          <semantic-value key='4007' value='&quot;Gila&quot;' />
          <semantic-value key='4009' value='&quot;Graham&quot;' />
          <semantic-value key='4011' value='&quot;Greenlee&quot;' />
          <semantic-value key='4012' value='&quot;La Paz&quot;' />
          <semantic-value key='4013' value='&quot;Maricopa&quot;' />
          <semantic-value key='4015' value='&quot;Mohave&quot;' />
          <semantic-value key='4017' value='&quot;Navajo&quot;' />
          <semantic-value key='4019' value='&quot;Pima&quot;' />
          <semantic-value key='4021' value='&quot;Pinal&quot;' />
          <semantic-value key='4023' value='&quot;Santa Cruz&quot;' />
          <semantic-value key='4025' value='&quot;Yavapai&quot;' />
          <semantic-value key='4027' value='&quot;Yuma&quot;' />
          <semantic-value key='5001' value='&quot;Arkansas&quot;' />
          <semantic-value key='5003' value='&quot;Ashley&quot;' />
          <semantic-value key='5005' value='&quot;Baxter&quot;' />
          <semantic-value key='5007' value='&quot;Benton&quot;' />
          <semantic-value key='5009' value='&quot;Boone&quot;' />
          <semantic-value key='5011' value='&quot;Bradley&quot;' />
          <semantic-value key='5013' value='&quot;Calhoun&quot;' />
          <semantic-value key='5015' value='&quot;Carroll&quot;' />
          <semantic-value key='5017' value='&quot;Chicot&quot;' />
          <semantic-value key='5019' value='&quot;Clark&quot;' />
          <semantic-value key='5021' value='&quot;Clay&quot;' />
          <semantic-value key='5023' value='&quot;Cleburne&quot;' />
          <semantic-value key='5025' value='&quot;Cleveland&quot;' />
          <semantic-value key='5027' value='&quot;Columbia&quot;' />
          <semantic-value key='5029' value='&quot;Conway&quot;' />
          <semantic-value key='5031' value='&quot;Craighead&quot;' />
          <semantic-value key='5033' value='&quot;Crawford&quot;' />
          <semantic-value key='5035' value='&quot;Crittenden&quot;' />
          <semantic-value key='5037' value='&quot;Cross&quot;' />
          <semantic-value key='5039' value='&quot;Dallas&quot;' />
          <semantic-value key='5041' value='&quot;Desha&quot;' />
          <semantic-value key='5043' value='&quot;Drew&quot;' />
          <semantic-value key='5045' value='&quot;Faulkner&quot;' />
          <semantic-value key='5047' value='&quot;Franklin&quot;' />
          <semantic-value key='5049' value='&quot;Fulton&quot;' />
          <semantic-value key='5051' value='&quot;Garland&quot;' />
          <semantic-value key='5053' value='&quot;Grant&quot;' />
          <semantic-value key='5055' value='&quot;Greene&quot;' />
          <semantic-value key='5057' value='&quot;Hempstead&quot;' />
          <semantic-value key='5059' value='&quot;Hot Spring&quot;' />
          <semantic-value key='5061' value='&quot;Howard&quot;' />
          <semantic-value key='5063' value='&quot;Independence&quot;' />
          <semantic-value key='5065' value='&quot;Izard&quot;' />
          <semantic-value key='5067' value='&quot;Jackson&quot;' />
          <semantic-value key='5069' value='&quot;Jefferson&quot;' />
          <semantic-value key='5071' value='&quot;Johnson&quot;' />
          <semantic-value key='5073' value='&quot;Lafayette&quot;' />
          <semantic-value key='5075' value='&quot;Lawrence&quot;' />
          <semantic-value key='5077' value='&quot;Lee&quot;' />
          <semantic-value key='5079' value='&quot;Lincoln&quot;' />
          <semantic-value key='5081' value='&quot;Little River&quot;' />
          <semantic-value key='5083' value='&quot;Logan&quot;' />
          <semantic-value key='5085' value='&quot;Lonoke&quot;' />
          <semantic-value key='5087' value='&quot;Madison&quot;' />
          <semantic-value key='5089' value='&quot;Marion&quot;' />
          <semantic-value key='5091' value='&quot;Miller&quot;' />
          <semantic-value key='5093' value='&quot;Mississippi&quot;' />
          <semantic-value key='5095' value='&quot;Monroe&quot;' />
          <semantic-value key='5097' value='&quot;Montgomery&quot;' />
          <semantic-value key='5099' value='&quot;Nevada&quot;' />
          <semantic-value key='5101' value='&quot;Newton&quot;' />
          <semantic-value key='5103' value='&quot;Ouachita&quot;' />
          <semantic-value key='5105' value='&quot;Perry&quot;' />
          <semantic-value key='5107' value='&quot;Phillips&quot;' />
          <semantic-value key='5109' value='&quot;Pike&quot;' />
          <semantic-value key='5111' value='&quot;Poinsett&quot;' />
          <semantic-value key='5113' value='&quot;Polk&quot;' />
          <semantic-value key='5115' value='&quot;Pope&quot;' />
          <semantic-value key='5117' value='&quot;Prairie&quot;' />
          <semantic-value key='5119' value='&quot;Pulaski&quot;' />
          <semantic-value key='5121' value='&quot;Randolph&quot;' />
          <semantic-value key='5123' value='&quot;St. Francis&quot;' />
          <semantic-value key='5125' value='&quot;Saline&quot;' />
          <semantic-value key='5127' value='&quot;Scott&quot;' />
          <semantic-value key='5129' value='&quot;Searcy&quot;' />
          <semantic-value key='5131' value='&quot;Sebastian&quot;' />
          <semantic-value key='5133' value='&quot;Sevier&quot;' />
          <semantic-value key='5135' value='&quot;Sharp&quot;' />
          <semantic-value key='5137' value='&quot;Stone&quot;' />
          <semantic-value key='5139' value='&quot;Union&quot;' />
          <semantic-value key='5141' value='&quot;Van Buren&quot;' />
          <semantic-value key='5143' value='&quot;Washington&quot;' />
          <semantic-value key='5145' value='&quot;White&quot;' />
          <semantic-value key='5147' value='&quot;Woodruff&quot;' />
          <semantic-value key='5149' value='&quot;Yell&quot;' />
          <semantic-value key='6001' value='&quot;Alameda&quot;' />
          <semantic-value key='6003' value='&quot;Alpine&quot;' />
          <semantic-value key='6005' value='&quot;Amador&quot;' />
          <semantic-value key='6007' value='&quot;Butte&quot;' />
          <semantic-value key='6009' value='&quot;Calaveras&quot;' />
          <semantic-value key='6011' value='&quot;Colusa&quot;' />
          <semantic-value key='6013' value='&quot;Contra Costa&quot;' />
          <semantic-value key='6015' value='&quot;Del Norte&quot;' />
          <semantic-value key='6017' value='&quot;El Dorado&quot;' />
          <semantic-value key='6019' value='&quot;Fresno&quot;' />
          <semantic-value key='6021' value='&quot;Glenn&quot;' />
          <semantic-value key='6023' value='&quot;Humboldt&quot;' />
          <semantic-value key='6025' value='&quot;Imperial&quot;' />
          <semantic-value key='6027' value='&quot;Inyo&quot;' />
          <semantic-value key='6029' value='&quot;Kern&quot;' />
          <semantic-value key='6031' value='&quot;Kings&quot;' />
          <semantic-value key='6033' value='&quot;Lake&quot;' />
          <semantic-value key='6035' value='&quot;Lassen&quot;' />
          <semantic-value key='6037' value='&quot;Los Angeles&quot;' />
          <semantic-value key='6039' value='&quot;Madera&quot;' />
          <semantic-value key='6041' value='&quot;Marin&quot;' />
          <semantic-value key='6043' value='&quot;Mariposa&quot;' />
          <semantic-value key='6045' value='&quot;Mendocino&quot;' />
          <semantic-value key='6047' value='&quot;Merced&quot;' />
          <semantic-value key='6049' value='&quot;Modoc&quot;' />
          <semantic-value key='6051' value='&quot;Mono&quot;' />
          <semantic-value key='6053' value='&quot;Monterey&quot;' />
          <semantic-value key='6055' value='&quot;Napa&quot;' />
          <semantic-value key='6057' value='&quot;Nevada&quot;' />
          <semantic-value key='6059' value='&quot;Orange&quot;' />
          <semantic-value key='6061' value='&quot;Placer&quot;' />
          <semantic-value key='6063' value='&quot;Plumas&quot;' />
          <semantic-value key='6065' value='&quot;Riverside&quot;' />
          <semantic-value key='6067' value='&quot;Sacramento&quot;' />
          <semantic-value key='6069' value='&quot;San Benito&quot;' />
          <semantic-value key='6071' value='&quot;San Bernardino&quot;' />
          <semantic-value key='6073' value='&quot;San Diego&quot;' />
          <semantic-value key='6075' value='&quot;San Francisco&quot;' />
          <semantic-value key='6077' value='&quot;San Joaquin&quot;' />
          <semantic-value key='6079' value='&quot;San Luis Obispo&quot;' />
          <semantic-value key='6081' value='&quot;San Mateo&quot;' />
          <semantic-value key='6083' value='&quot;Santa Barbara&quot;' />
          <semantic-value key='6085' value='&quot;Santa Clara&quot;' />
          <semantic-value key='6087' value='&quot;Santa Cruz&quot;' />
          <semantic-value key='6089' value='&quot;Shasta&quot;' />
          <semantic-value key='6091' value='&quot;Sierra&quot;' />
          <semantic-value key='6093' value='&quot;Siskiyou&quot;' />
          <semantic-value key='6095' value='&quot;Solano&quot;' />
          <semantic-value key='6097' value='&quot;Sonoma&quot;' />
          <semantic-value key='6099' value='&quot;Stanislaus&quot;' />
          <semantic-value key='6101' value='&quot;Sutter&quot;' />
          <semantic-value key='6103' value='&quot;Tehama&quot;' />
          <semantic-value key='6105' value='&quot;Trinity&quot;' />
          <semantic-value key='6107' value='&quot;Tulare&quot;' />
          <semantic-value key='6109' value='&quot;Tuolumne&quot;' />
          <semantic-value key='6111' value='&quot;Ventura&quot;' />
          <semantic-value key='6113' value='&quot;Yolo&quot;' />
          <semantic-value key='6115' value='&quot;Yuba&quot;' />
          <semantic-value key='8001' value='&quot;Adams&quot;' />
          <semantic-value key='8003' value='&quot;Alamosa&quot;' />
          <semantic-value key='8005' value='&quot;Arapahoe&quot;' />
          <semantic-value key='8007' value='&quot;Archuleta&quot;' />
          <semantic-value key='8009' value='&quot;Baca&quot;' />
          <semantic-value key='8011' value='&quot;Bent&quot;' />
          <semantic-value key='8013' value='&quot;Boulder&quot;' />
          <semantic-value key='8015' value='&quot;Chaffee&quot;' />
          <semantic-value key='8017' value='&quot;Cheyenne&quot;' />
          <semantic-value key='8019' value='&quot;Clear Creek&quot;' />
          <semantic-value key='8021' value='&quot;Conejos&quot;' />
          <semantic-value key='8023' value='&quot;Costilla&quot;' />
          <semantic-value key='8025' value='&quot;Crowley&quot;' />
          <semantic-value key='8027' value='&quot;Custer&quot;' />
          <semantic-value key='8029' value='&quot;Delta&quot;' />
          <semantic-value key='8031' value='&quot;Denver&quot;' />
          <semantic-value key='8033' value='&quot;Dolores&quot;' />
          <semantic-value key='8035' value='&quot;Douglas&quot;' />
          <semantic-value key='8037' value='&quot;Eagle&quot;' />
          <semantic-value key='8039' value='&quot;Elbert&quot;' />
          <semantic-value key='8041' value='&quot;El Paso&quot;' />
          <semantic-value key='8043' value='&quot;Fremont&quot;' />
          <semantic-value key='8045' value='&quot;Garfield&quot;' />
          <semantic-value key='8047' value='&quot;Gilpin&quot;' />
          <semantic-value key='8049' value='&quot;Grand&quot;' />
          <semantic-value key='8051' value='&quot;Gunnison&quot;' />
          <semantic-value key='8053' value='&quot;Hinsdale&quot;' />
          <semantic-value key='8055' value='&quot;Huerfano&quot;' />
          <semantic-value key='8057' value='&quot;Jackson&quot;' />
          <semantic-value key='8059' value='&quot;Jefferson&quot;' />
          <semantic-value key='8061' value='&quot;Kiowa&quot;' />
          <semantic-value key='8063' value='&quot;Kit Carson&quot;' />
          <semantic-value key='8065' value='&quot;Lake&quot;' />
          <semantic-value key='8067' value='&quot;La Plata&quot;' />
          <semantic-value key='8069' value='&quot;Larimer&quot;' />
          <semantic-value key='8071' value='&quot;Las Animas&quot;' />
          <semantic-value key='8073' value='&quot;Lincoln&quot;' />
          <semantic-value key='8075' value='&quot;Logan&quot;' />
          <semantic-value key='8077' value='&quot;Mesa&quot;' />
          <semantic-value key='8079' value='&quot;Mineral&quot;' />
          <semantic-value key='8081' value='&quot;Moffat&quot;' />
          <semantic-value key='8083' value='&quot;Montezuma&quot;' />
          <semantic-value key='8085' value='&quot;Montrose&quot;' />
          <semantic-value key='8087' value='&quot;Morgan&quot;' />
          <semantic-value key='8089' value='&quot;Otero&quot;' />
          <semantic-value key='8091' value='&quot;Ouray&quot;' />
          <semantic-value key='8093' value='&quot;Park&quot;' />
          <semantic-value key='8095' value='&quot;Phillips&quot;' />
          <semantic-value key='8097' value='&quot;Pitkin&quot;' />
          <semantic-value key='8099' value='&quot;Prowers&quot;' />
          <semantic-value key='8101' value='&quot;Pueblo&quot;' />
          <semantic-value key='8103' value='&quot;Rio Blanco&quot;' />
          <semantic-value key='8107' value='&quot;Routt&quot;' />
          <semantic-value key='8109' value='&quot;Saguache&quot;' />
          <semantic-value key='8111' value='&quot;San Juan&quot;' />
          <semantic-value key='8113' value='&quot;San Miguel&quot;' />
          <semantic-value key='8115' value='&quot;Sedgwick&quot;' />
          <semantic-value key='8117' value='&quot;Summit&quot;' />
          <semantic-value key='8119' value='&quot;Teller&quot;' />
          <semantic-value key='8121' value='&quot;Washington&quot;' />
          <semantic-value key='8123' value='&quot;Weld&quot;' />
          <semantic-value key='8125' value='&quot;Yuma&quot;' />
          <semantic-value key='9001' value='&quot;Fairfield&quot;' />
          <semantic-value key='9003' value='&quot;Hartford&quot;' />
          <semantic-value key='9005' value='&quot;Litchfield&quot;' />
          <semantic-value key='9007' value='&quot;Middlesex&quot;' />
          <semantic-value key='9009' value='&quot;New Haven&quot;' />
          <semantic-value key='9011' value='&quot;New London&quot;' />
          <semantic-value key='9013' value='&quot;Tolland&quot;' />
          <semantic-value key='9015' value='&quot;Windham&quot;' />
          <semantic-value key='&quot;51515&quot;' value='&quot;Bedford&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;46113&quot;' value='39.645545200000001' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;46113&quot;' value='-86.3049611' />
        </semantic-values>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='State FIPS' datatype='integer' name='[stateFIPS]' role='dimension' semantic-role='[State].[Name]' type='ordinal' />
      <column caption='Tract FIPS' datatype='integer' name='[tractFIPS]' role='measure' type='quantitative' />
      <column caption='US Pop County 2010' datatype='integer' name='[value (US_Population_by_county_2010.csv)]' role='measure' type='quantitative' />
      <column caption='value (US Population by state 2000.csv)' datatype='integer' name='[value (US_Population_by_state_2000.csv)]' role='measure' type='quantitative' />
      <column caption='value (US Population by state 2010.csv)' datatype='integer' name='[value (US_Population_by_state_2010.csv)]' role='measure' type='quantitative' />
      <column caption='US Pop County 2000' datatype='integer' name='[value]' role='measure' type='quantitative' />
      <column caption='variable (US Population by county 2010.csv)' datatype='string' name='[variable (US_Population_by_county_2010.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='variable (US Population by state 2000.csv)' datatype='string' name='[variable (US_Population_by_state_2000.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='variable (US Population by state 2010.csv)' datatype='string' name='[variable (US_Population_by_state_2010.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
      <column-instance column='[avgPoultryHomeExpenditure_2000]' derivation='Avg' name='[avg:avgPoultryHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgPoultryHomeExpenditure_2010]' derivation='Avg' name='[avg:avgPoultryHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FIPS]' derivation='Sum' name='[sum:FIPS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgAlcoholicBeverageExpenditure_2000]' derivation='Sum' name='[sum:avgAlcoholicBeverageExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgAlcoholicBeverageExpenditure_2010]' derivation='Sum' name='[sum:avgAlcoholicBeverageExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBakeryCerealHomeExpenditure_2000]' derivation='Sum' name='[sum:avgBakeryCerealHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBakeryCerealHomeExpenditure_2010]' derivation='Sum' name='[sum:avgBakeryCerealHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBeefHomeExpenditure_2000]' derivation='Sum' name='[sum:avgBeefHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBeefHomeExpenditure_2010]' derivation='Sum' name='[sum:avgBeefHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBreadHomeExpenditure_2000]' derivation='Sum' name='[sum:avgBreadHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBreadHomeExpenditure_2010]' derivation='Sum' name='[sum:avgBreadHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBreakfastAwayHomeExpenditure_2000]' derivation='Sum' name='[sum:avgBreakfastAwayHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBreakfastAwayHomeExpenditure_2010]' derivation='Sum' name='[sum:avgBreakfastAwayHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgDairyHomeExpenditure_2000]' derivation='Sum' name='[sum:avgDairyHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgDairyHomeExpenditure_2010]' derivation='Sum' name='[sum:avgDairyHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgDinnerAwayHomeExpenditure_2000]' derivation='Sum' name='[sum:avgDinnerAwayHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgDinnerAwayHomeExpenditure_2010]' derivation='Sum' name='[sum:avgDinnerAwayHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgEggsHomeExpenditure_2000]' derivation='Sum' name='[sum:avgEggsHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgPoultryHomeExpenditure_2000]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgPoultryHomeExpenditure_2010]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tractFIPS]' derivation='Sum' name='[sum:tractFIPS:qk]' pivot='key' type='quantitative' />
      <group caption='Action (State FIPS)' hidden='true' name='[Action (State FIPS)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[stateFIPS]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='State FIPS, County FIPS'>
          <field>[stateFIPS]</field>
          <field>[countyFIPS]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.969415' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0305851' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgAlcoholicBeverageExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[attr:stateFIPS:nk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:latitude:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBeefHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBakeryCerealHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:longitude:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgDairyHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgDinnerAwayHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:countyFIPS:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBreakfastAwayHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:tractFIPS:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBreadHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBreadHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgDairyHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgDinnerAwayHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgEggsHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBakeryCerealHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgAlcoholicBeverageExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[diff:avg:avgPoultryHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[pcto:avg:avgPoultryHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[pcva:avg:avgPoultryHomeExpenditure_2010:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[pcva:avg:avgPoultryHomeExpenditure_2010:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[pcva:avg:avgPoultryHomeExpenditure_2010:qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[pcva:avg:avgPoultryHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBreakfastAwayHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBeefHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:FIPS:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[County].[Name]' value='%null%' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='County' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2'>
          <calculation class='tableau' formula='2' />
          <aliases>
            <alias key='1' value='State' />
            <alias key='2' value='County' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='US_Median_Household_Income_2000.csv' id='US_Median_Household_Income_2000.csv_EA3C542EF6C54882AEE76F7D275E48CC'>
            <properties context=''>
              <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Median_Household_Income_2000.csv' table='[US_Median_Household_Income_2000#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='GISJOIN' ordinal='0' />
                  <column datatype='integer' name='YEAR' ordinal='1' />
                  <column datatype='integer' name='REGIONA' ordinal='2' />
                  <column datatype='integer' name='DIVISIONA' ordinal='3' />
                  <column datatype='string' name='STATE' ordinal='4' />
                  <column datatype='integer' name='STATEA' ordinal='5' />
                  <column datatype='string' name='COUNTY' ordinal='6' />
                  <column datatype='integer' name='COUNTYA' ordinal='7' />
                  <column datatype='string' name='CTY_SUBA' ordinal='8' />
                  <column datatype='string' name='PLACEA' ordinal='9' />
                  <column datatype='string' name='TRACTA' ordinal='10' />
                  <column datatype='string' name='TRBL_CTA' ordinal='11' />
                  <column datatype='string' name='BLCK_GRPA' ordinal='12' />
                  <column datatype='string' name='TRBL_BGA' ordinal='13' />
                  <column datatype='string' name='C_CITYA' ordinal='14' />
                  <column datatype='string' name='AIANHHA' ordinal='15' />
                  <column datatype='string' name='RES_ONLYA' ordinal='16' />
                  <column datatype='string' name='TRUSTA' ordinal='17' />
                  <column datatype='string' name='TRBL_SUBA' ordinal='18' />
                  <column datatype='string' name='ANRCA' ordinal='19' />
                  <column datatype='integer' name='MSA_CMSAA' ordinal='20' />
                  <column datatype='integer' name='PMSAA' ordinal='21' />
                  <column datatype='integer' name='NECMAA' ordinal='22' />
                  <column datatype='string' name='URB_AREAA' ordinal='23' />
                  <column datatype='string' name='URBRURALA' ordinal='24' />
                  <column datatype='string' name='CD106A' ordinal='25' />
                  <column datatype='string' name='CD108A' ordinal='26' />
                  <column datatype='string' name='CD109A' ordinal='27' />
                  <column datatype='string' name='ZIP3A' ordinal='28' />
                  <column datatype='string' name='ZCTAA' ordinal='29' />
                  <column datatype='string' name='NAME' ordinal='30' />
                  <column datatype='integer' name='GMY001' ordinal='31' />
                  <column datatype='real' name='Median_Household_Income_Adjusted' ordinal='32' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='US_Median_Household_Income_2010.csv' id='US_Median_Household_Income_2010.csv_A281DEF8E477474C905DEF12480A9DAD'>
            <properties context=''>
              <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Median_Household_Income_2010.csv' table='[US_Median_Household_Income_2010#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='GISJOIN' ordinal='0' />
                  <column datatype='string' name='YEAR' ordinal='1' />
                  <column datatype='string' name='REGIONA' ordinal='2' />
                  <column datatype='string' name='DIVISIONA' ordinal='3' />
                  <column datatype='string' name='STATE' ordinal='4' />
                  <column datatype='integer' name='STATEA' ordinal='5' />
                  <column datatype='string' name='COUNTY' ordinal='6' />
                  <column datatype='integer' name='COUNTYA' ordinal='7' />
                  <column datatype='string' name='COUSUBA' ordinal='8' />
                  <column datatype='string' name='PLACEA' ordinal='9' />
                  <column datatype='string' name='TRACTA' ordinal='10' />
                  <column datatype='string' name='BLKGRPA' ordinal='11' />
                  <column datatype='string' name='CONCITA' ordinal='12' />
                  <column datatype='string' name='AIANHHA' ordinal='13' />
                  <column datatype='string' name='RES_ONLYA' ordinal='14' />
                  <column datatype='string' name='TRUSTA' ordinal='15' />
                  <column datatype='string' name='AITSCEA' ordinal='16' />
                  <column datatype='string' name='ANRCA' ordinal='17' />
                  <column datatype='string' name='CBSAA' ordinal='18' />
                  <column datatype='string' name='CSAA' ordinal='19' />
                  <column datatype='string' name='METDIVA' ordinal='20' />
                  <column datatype='string' name='NECTAA' ordinal='21' />
                  <column datatype='string' name='CNECTAA' ordinal='22' />
                  <column datatype='string' name='NECTADIVA' ordinal='23' />
                  <column datatype='string' name='UAA' ordinal='24' />
                  <column datatype='string' name='CDCURRA' ordinal='25' />
                  <column datatype='string' name='SLDUA' ordinal='26' />
                  <column datatype='string' name='SLDLA' ordinal='27' />
                  <column datatype='string' name='SUBMCDA' ordinal='28' />
                  <column datatype='string' name='SDELMA' ordinal='29' />
                  <column datatype='string' name='SDSECA' ordinal='30' />
                  <column datatype='string' name='SDUNIA' ordinal='31' />
                  <column datatype='string' name='PUMA5A' ordinal='32' />
                  <column datatype='string' name='BTTRA' ordinal='33' />
                  <column datatype='string' name='BTBGA' ordinal='34' />
                  <column datatype='string' name='NAME_E' ordinal='35' />
                  <column datatype='integer' name='JOIE001' ordinal='36' />
                  <column datatype='string' name='NAME_M' ordinal='37' />
                  <column datatype='integer' name='JOIM001' ordinal='38' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='US_Population_by_county_2000.csv' id='US_Population_by_county_2000.csv_D696557D09A840009823E3B964ECA401'>
            <properties context=''>
              <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_county_2000.csv' table='[US_Population_by_county_2000#csv]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='GEOID' ordinal='0' />
                  <column datatype='string' name='NAME' ordinal='1' />
                  <column datatype='string' name='variable' ordinal='2' />
                  <column datatype='integer' name='value' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='US_Population_by_county_2010.csv' id='US_Population_by_county_2010.csv_1D49E474C0A04B278A0241CB1823E74E'>
            <properties context=''>
              <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_county_2010.csv' table='[US_Population_by_county_2010#csv]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='GEOID' ordinal='0' />
                  <column datatype='string' name='NAME' ordinal='1' />
                  <column datatype='string' name='variable' ordinal='2' />
                  <column datatype='integer' name='value' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='US_Population_by_state_2000.csv' id='US_Population_by_state_2000.csv_4B7F7818B78449DD9087218AD559A824'>
            <properties context=''>
              <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_state_2000.csv' table='[US_Population_by_state_2000#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='GEOID' ordinal='0' />
                  <column datatype='string' name='NAME' ordinal='1' />
                  <column datatype='string' name='variable' ordinal='2' />
                  <column datatype='integer' name='value' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='US_Population_by_state_2010.csv' id='US_Population_by_state_2010.csv_347E4BBEDECA417BA360FBAF611549AE'>
            <properties context=''>
              <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_state_2010.csv' table='[US_Population_by_state_2010#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='GEOID' ordinal='0' />
                  <column datatype='string' name='NAME' ordinal='1' />
                  <column datatype='string' name='variable' ordinal='2' />
                  <column datatype='integer' name='value' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='esri_food_prefs_w_state_county.csv' id='esri_food_prefs_w_state_county.csv_F1C51441A06E4CB7B249B60E211B8D48'>
            <properties context=''>
              <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='esri_food_prefs_w_state_county.csv' table='[esri_food_prefs_w_state_county#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='countyFIPS' ordinal='0' />
                  <column datatype='string' name='FIPS' ordinal='1' />
                  <column datatype='integer' name='stateFIPS' ordinal='2' />
                  <column datatype='integer' name='tractFIPS' ordinal='3' />
                  <column datatype='real' name='longitude' ordinal='4' />
                  <column datatype='real' name='latitude' ordinal='5' />
                  <column datatype='real' name='avgFoodExpenditure_2000' ordinal='6' />
                  <column datatype='real' name='avgFoodHomeExpenditure_2000' ordinal='7' />
                  <column datatype='real' name='avgMeatHomeExpenditure_2000' ordinal='8' />
                  <column datatype='real' name='avgFruitsVegetablesHomeExpenditure_2000' ordinal='9' />
                  <column datatype='real' name='avgFoodAwayExpenditure_2000' ordinal='10' />
                  <column datatype='real' name='avgFoodExpenditure_2010' ordinal='11' />
                  <column datatype='real' name='avgFoodHomeExpenditure_2010' ordinal='12' />
                  <column datatype='real' name='avgMeatHomeExpenditure_2010' ordinal='13' />
                  <column datatype='real' name='avgFruitsVegetablesHomeExpenditure_2010' ordinal='14' />
                  <column datatype='real' name='avgFoodAwayExpenditure_2010' ordinal='15' />
                  <column datatype='real' name='avgBakeryCerealHomeExpenditure_2000' ordinal='16' />
                  <column datatype='real' name='avgFlourHomeExpenditure_2000' ordinal='17' />
                  <column datatype='real' name='avgRiceHomeExpenditure_2000' ordinal='18' />
                  <column datatype='real' name='avgPastaCornMealHomeExpenditure_2000' ordinal='19' />
                  <column datatype='real' name='avgBreadHomeExpenditure_2000' ordinal='20' />
                  <column datatype='real' name='avgBeefHomeExpenditure_2000' ordinal='21' />
                  <column datatype='real' name='avgPorkHomeExpenditure_2000' ordinal='22' />
                  <column datatype='real' name='avgPoultryHomeExpenditure_2000' ordinal='23' />
                  <column datatype='real' name='avgSeafoodHomeExpenditure_2000' ordinal='24' />
                  <column datatype='real' name='avgEggsHomeExpenditure_2000' ordinal='25' />
                  <column datatype='real' name='avgDairyHomeExpenditure_2000' ordinal='26' />
                  <column datatype='real' name='avgLunchAwayHomeExpenditure_2000' ordinal='27' />
                  <column datatype='real' name='avgDinnerAwayHomeExpenditure_2000' ordinal='28' />
                  <column datatype='real' name='avgBreakfastAwayHomeExpenditure_2000' ordinal='29' />
                  <column datatype='real' name='avgAlcoholicBeverageExpenditure_2000' ordinal='30' />
                  <column datatype='real' name='avgBakeryCerealHomeExpenditure_2010' ordinal='31' />
                  <column datatype='real' name='avgFlourHomeExpenditure_2010' ordinal='32' />
                  <column datatype='real' name='avgRiceHomeExpenditure_2010' ordinal='33' />
                  <column datatype='real' name='avgPastaCornMealHomeExpenditure_2010' ordinal='34' />
                  <column datatype='real' name='avgBreadHomeExpenditure_2010' ordinal='35' />
                  <column datatype='real' name='avgBeefHomeExpenditure_2010' ordinal='36' />
                  <column datatype='real' name='avgPorkHomeExpenditure_2010' ordinal='37' />
                  <column datatype='real' name='avgPoultryHomeExpenditure_2010' ordinal='38' />
                  <column datatype='real' name='avgSeafoodHomeExpenditure_2010' ordinal='39' />
                  <column datatype='real' name='avgEggsHomeExpenditure_2010' ordinal='40' />
                  <column datatype='real' name='avgDairyHomeExpenditure_2010' ordinal='41' />
                  <column datatype='real' name='avgLunchAwayHomeExpenditure_2010' ordinal='42' />
                  <column datatype='real' name='avgDinnerAwayHomeExpenditure_2010' ordinal='43' />
                  <column datatype='real' name='avgBreakfastAwayHomeExpenditure_2010' ordinal='44' />
                  <column datatype='real' name='avgAlcoholicBeverageExpenditure_2010' ordinal='45' />
                  <column datatype='string' name='ESRI_County' ordinal='46' />
                  <column datatype='string' name='ESRI_State' ordinal='47' />
                  <column datatype='integer' name='value' ordinal='48' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[ESRI_State]' />
                <expression op='[STATE]' />
              </expression>
              <expression op='='>
                <expression op='[ESRI_County]' />
                <expression op='[COUNTY]' />
              </expression>
            </expression>
            <first-end-point object-id='esri_food_prefs_w_state_county.csv_F1C51441A06E4CB7B249B60E211B8D48' />
            <second-end-point object-id='US_Median_Household_Income_2000.csv_EA3C542EF6C54882AEE76F7D275E48CC' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[ESRI_State]' />
                <expression op='[STATE (US_Median_Household_Income_2010.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[ESRI_County]' />
                <expression op='[COUNTY (US_Median_Household_Income_2010.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='esri_food_prefs_w_state_county.csv_F1C51441A06E4CB7B249B60E211B8D48' />
            <second-end-point object-id='US_Median_Household_Income_2010.csv_A281DEF8E477474C905DEF12480A9DAD' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[countyFIPS]' />
              <expression op='[GEOID]' />
            </expression>
            <first-end-point object-id='esri_food_prefs_w_state_county.csv_F1C51441A06E4CB7B249B60E211B8D48' />
            <second-end-point object-id='US_Population_by_county_2000.csv_D696557D09A840009823E3B964ECA401' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[countyFIPS]' />
              <expression op='[GEOID (US_Population_by_county_2010.csv)]' />
            </expression>
            <first-end-point object-id='esri_food_prefs_w_state_county.csv_F1C51441A06E4CB7B249B60E211B8D48' />
            <second-end-point object-id='US_Population_by_county_2010.csv_1D49E474C0A04B278A0241CB1823E74E' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[stateFIPS]' />
              <expression op='[GEOID (US_Population_by_state_2000.csv)]' />
            </expression>
            <first-end-point object-id='esri_food_prefs_w_state_county.csv_F1C51441A06E4CB7B249B60E211B8D48' />
            <second-end-point object-id='US_Population_by_state_2000.csv_4B7F7818B78449DD9087218AD559A824' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[stateFIPS]' />
              <expression op='[GEOID (US_Population_by_state_2010.csv)]' />
            </expression>
            <first-end-point object-id='esri_food_prefs_w_state_county.csv_F1C51441A06E4CB7B249B60E211B8D48' />
            <second-end-point object-id='US_Population_by_state_2010.csv_347E4BBEDECA417BA360FBAF611549AE' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='(Bar) Average Poultry Home Expenditure'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Poultry Home Expenditure</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
          </datasources>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column-instance column='[avgPoultryHomeExpenditure_2000]' derivation='Avg' name='[avg:avgPoultryHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avgPoultryHomeExpenditure_2010]' derivation='Avg' name='[avg:avgPoultryHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
            <column caption='avgPoultryHomeExpenditure 2000' datatype='real' name='[avgPoultryHomeExpenditure_2000]' role='measure' type='quantitative' />
            <column caption='avgPoultryHomeExpenditure 2010' datatype='real' name='[avgPoultryHomeExpenditure_2010]' role='measure' type='quantitative' />
            <column-instance column='[avgPoultryHomeExpenditure_2010]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk]' scope='rows' value='Total' />
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]' scope='rows' value='' />
            <format attr='display' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk] + [federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk])</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='49.98' text-width='180'>
            <formatted-text>
              <run bold='true'>This is a 13% decrease from 2000.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]</field>
                      <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>11538504.060000073</value>
                    <value>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='185' y='-35' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{1EE640A6-2B2B-4CF5-9650-62264495F1F1}' />
    </worksheet>
    <worksheet name='(County Map) Average Poultry Home Expenditure 2000'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>2000</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='County' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2'>
              <calculation class='tableau' formula='2' />
              <aliases>
                <alias key='1' value='State' />
                <alias key='2' value='County' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='Map State or County Level' datatype='integer' name='[Calculation_1192890997300523009]' role='dimension' semantic-role='[State].[Name]' type='ordinal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='string' name='[ESRI_County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[ESRI_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Median Household Income Adjusted' datatype='real' name='[Median_Household_Income_Adjusted]' role='measure' type='quantitative' />
            <column-instance column='[Median_Household_Income_Adjusted]' derivation='Avg' name='[avg:Median_Household_Income_Adjusted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avgPoultryHomeExpenditure_2000]' derivation='Avg' name='[avg:avgPoultryHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column caption='avgPoultryHomeExpenditure 2000' datatype='real' name='[avgPoultryHomeExpenditure_2000]' role='measure' type='quantitative' />
            <column caption='County FIPS' datatype='string' name='[countyFIPS]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[County].[Name]'>
                <semantic-value key='1001' value='&quot;Autauga&quot;' />
                <semantic-value key='1003' value='&quot;Baldwin&quot;' />
                <semantic-value key='1005' value='&quot;Barbour&quot;' />
                <semantic-value key='1007' value='&quot;Bibb&quot;' />
                <semantic-value key='1009' value='&quot;Blount&quot;' />
                <semantic-value key='1011' value='&quot;Bullock&quot;' />
                <semantic-value key='1013' value='&quot;Butler&quot;' />
                <semantic-value key='1015' value='&quot;Calhoun&quot;' />
                <semantic-value key='1017' value='&quot;Chambers&quot;' />
                <semantic-value key='1019' value='&quot;Cherokee&quot;' />
                <semantic-value key='1021' value='&quot;Chilton&quot;' />
                <semantic-value key='1023' value='&quot;Choctaw&quot;' />
                <semantic-value key='1025' value='&quot;Clarke&quot;' />
                <semantic-value key='1027' value='&quot;Clay&quot;' />
                <semantic-value key='1029' value='&quot;Cleburne&quot;' />
                <semantic-value key='1031' value='&quot;Coffee&quot;' />
                <semantic-value key='1033' value='&quot;Colbert&quot;' />
                <semantic-value key='1035' value='&quot;Conecuh&quot;' />
                <semantic-value key='1037' value='&quot;Coosa&quot;' />
                <semantic-value key='1039' value='&quot;Covington&quot;' />
                <semantic-value key='1041' value='&quot;Crenshaw&quot;' />
                <semantic-value key='1043' value='&quot;Cullman&quot;' />
                <semantic-value key='1045' value='&quot;Dale&quot;' />
                <semantic-value key='1047' value='&quot;Dallas&quot;' />
                <semantic-value key='1049' value='&quot;DeKalb&quot;' />
                <semantic-value key='1051' value='&quot;Elmore&quot;' />
                <semantic-value key='1053' value='&quot;Escambia&quot;' />
                <semantic-value key='1055' value='&quot;Etowah&quot;' />
                <semantic-value key='1057' value='&quot;Fayette&quot;' />
                <semantic-value key='1059' value='&quot;Franklin&quot;' />
                <semantic-value key='1061' value='&quot;Geneva&quot;' />
                <semantic-value key='1063' value='&quot;Greene&quot;' />
                <semantic-value key='1065' value='&quot;Hale&quot;' />
                <semantic-value key='1067' value='&quot;Henry&quot;' />
                <semantic-value key='1069' value='&quot;Houston&quot;' />
                <semantic-value key='1071' value='&quot;Jackson&quot;' />
                <semantic-value key='1073' value='&quot;Jefferson&quot;' />
                <semantic-value key='1075' value='&quot;Lamar&quot;' />
                <semantic-value key='1077' value='&quot;Lauderdale&quot;' />
                <semantic-value key='1079' value='&quot;Lawrence&quot;' />
                <semantic-value key='1081' value='&quot;Lee&quot;' />
                <semantic-value key='1083' value='&quot;Limestone&quot;' />
                <semantic-value key='1085' value='&quot;Lowndes&quot;' />
                <semantic-value key='1087' value='&quot;Macon&quot;' />
                <semantic-value key='1089' value='&quot;Madison&quot;' />
                <semantic-value key='1091' value='&quot;Marengo&quot;' />
                <semantic-value key='1093' value='&quot;Marion&quot;' />
                <semantic-value key='1095' value='&quot;Marshall&quot;' />
                <semantic-value key='1097' value='&quot;Mobile&quot;' />
                <semantic-value key='1099' value='&quot;Monroe&quot;' />
                <semantic-value key='1101' value='&quot;Montgomery&quot;' />
                <semantic-value key='1103' value='&quot;Morgan&quot;' />
                <semantic-value key='1105' value='&quot;Perry&quot;' />
                <semantic-value key='1107' value='&quot;Pickens&quot;' />
                <semantic-value key='1109' value='&quot;Pike&quot;' />
                <semantic-value key='1111' value='&quot;Randolph&quot;' />
                <semantic-value key='1113' value='&quot;Russell&quot;' />
                <semantic-value key='1115' value='&quot;St. Clair&quot;' />
                <semantic-value key='1117' value='&quot;Shelby&quot;' />
                <semantic-value key='1119' value='&quot;Sumter&quot;' />
                <semantic-value key='1121' value='&quot;Talladega&quot;' />
                <semantic-value key='1123' value='&quot;Tallapoosa&quot;' />
                <semantic-value key='1125' value='&quot;Tuscaloosa&quot;' />
                <semantic-value key='1127' value='&quot;Walker&quot;' />
                <semantic-value key='1129' value='&quot;Washington&quot;' />
                <semantic-value key='1131' value='&quot;Wilcox&quot;' />
                <semantic-value key='1133' value='&quot;Winston&quot;' />
                <semantic-value key='4001' value='&quot;Apache&quot;' />
                <semantic-value key='4003' value='&quot;Cochise&quot;' />
                <semantic-value key='4005' value='&quot;Coconino&quot;' />
                <semantic-value key='4007' value='&quot;Gila&quot;' />
                <semantic-value key='4009' value='&quot;Graham&quot;' />
                <semantic-value key='4011' value='&quot;Greenlee&quot;' />
                <semantic-value key='4012' value='&quot;La Paz&quot;' />
                <semantic-value key='4013' value='&quot;Maricopa&quot;' />
                <semantic-value key='4015' value='&quot;Mohave&quot;' />
                <semantic-value key='4017' value='&quot;Navajo&quot;' />
                <semantic-value key='4019' value='&quot;Pima&quot;' />
                <semantic-value key='4021' value='&quot;Pinal&quot;' />
                <semantic-value key='4023' value='&quot;Santa Cruz&quot;' />
                <semantic-value key='4025' value='&quot;Yavapai&quot;' />
                <semantic-value key='4027' value='&quot;Yuma&quot;' />
                <semantic-value key='5001' value='&quot;Arkansas&quot;' />
                <semantic-value key='5003' value='&quot;Ashley&quot;' />
                <semantic-value key='5005' value='&quot;Baxter&quot;' />
                <semantic-value key='5007' value='&quot;Benton&quot;' />
                <semantic-value key='5009' value='&quot;Boone&quot;' />
                <semantic-value key='5011' value='&quot;Bradley&quot;' />
                <semantic-value key='5013' value='&quot;Calhoun&quot;' />
                <semantic-value key='5015' value='&quot;Carroll&quot;' />
                <semantic-value key='5017' value='&quot;Chicot&quot;' />
                <semantic-value key='5019' value='&quot;Clark&quot;' />
                <semantic-value key='5021' value='&quot;Clay&quot;' />
                <semantic-value key='5023' value='&quot;Cleburne&quot;' />
                <semantic-value key='5025' value='&quot;Cleveland&quot;' />
                <semantic-value key='5027' value='&quot;Columbia&quot;' />
                <semantic-value key='5029' value='&quot;Conway&quot;' />
                <semantic-value key='5031' value='&quot;Craighead&quot;' />
                <semantic-value key='5033' value='&quot;Crawford&quot;' />
                <semantic-value key='5035' value='&quot;Crittenden&quot;' />
                <semantic-value key='5037' value='&quot;Cross&quot;' />
                <semantic-value key='5039' value='&quot;Dallas&quot;' />
                <semantic-value key='5041' value='&quot;Desha&quot;' />
                <semantic-value key='5043' value='&quot;Drew&quot;' />
                <semantic-value key='5045' value='&quot;Faulkner&quot;' />
                <semantic-value key='5047' value='&quot;Franklin&quot;' />
                <semantic-value key='5049' value='&quot;Fulton&quot;' />
                <semantic-value key='5051' value='&quot;Garland&quot;' />
                <semantic-value key='5053' value='&quot;Grant&quot;' />
                <semantic-value key='5055' value='&quot;Greene&quot;' />
                <semantic-value key='5057' value='&quot;Hempstead&quot;' />
                <semantic-value key='5059' value='&quot;Hot Spring&quot;' />
                <semantic-value key='5061' value='&quot;Howard&quot;' />
                <semantic-value key='5063' value='&quot;Independence&quot;' />
                <semantic-value key='5065' value='&quot;Izard&quot;' />
                <semantic-value key='5067' value='&quot;Jackson&quot;' />
                <semantic-value key='5069' value='&quot;Jefferson&quot;' />
                <semantic-value key='5071' value='&quot;Johnson&quot;' />
                <semantic-value key='5073' value='&quot;Lafayette&quot;' />
                <semantic-value key='5075' value='&quot;Lawrence&quot;' />
                <semantic-value key='5077' value='&quot;Lee&quot;' />
                <semantic-value key='5079' value='&quot;Lincoln&quot;' />
                <semantic-value key='5081' value='&quot;Little River&quot;' />
                <semantic-value key='5083' value='&quot;Logan&quot;' />
                <semantic-value key='5085' value='&quot;Lonoke&quot;' />
                <semantic-value key='5087' value='&quot;Madison&quot;' />
                <semantic-value key='5089' value='&quot;Marion&quot;' />
                <semantic-value key='5091' value='&quot;Miller&quot;' />
                <semantic-value key='5093' value='&quot;Mississippi&quot;' />
                <semantic-value key='5095' value='&quot;Monroe&quot;' />
                <semantic-value key='5097' value='&quot;Montgomery&quot;' />
                <semantic-value key='5099' value='&quot;Nevada&quot;' />
                <semantic-value key='5101' value='&quot;Newton&quot;' />
                <semantic-value key='5103' value='&quot;Ouachita&quot;' />
                <semantic-value key='5105' value='&quot;Perry&quot;' />
                <semantic-value key='5107' value='&quot;Phillips&quot;' />
                <semantic-value key='5109' value='&quot;Pike&quot;' />
                <semantic-value key='5111' value='&quot;Poinsett&quot;' />
                <semantic-value key='5113' value='&quot;Polk&quot;' />
                <semantic-value key='5115' value='&quot;Pope&quot;' />
                <semantic-value key='5117' value='&quot;Prairie&quot;' />
                <semantic-value key='5119' value='&quot;Pulaski&quot;' />
                <semantic-value key='5121' value='&quot;Randolph&quot;' />
                <semantic-value key='5123' value='&quot;St. Francis&quot;' />
                <semantic-value key='5125' value='&quot;Saline&quot;' />
                <semantic-value key='5127' value='&quot;Scott&quot;' />
                <semantic-value key='5129' value='&quot;Searcy&quot;' />
                <semantic-value key='5131' value='&quot;Sebastian&quot;' />
                <semantic-value key='5133' value='&quot;Sevier&quot;' />
                <semantic-value key='5135' value='&quot;Sharp&quot;' />
                <semantic-value key='5137' value='&quot;Stone&quot;' />
                <semantic-value key='5139' value='&quot;Union&quot;' />
                <semantic-value key='5141' value='&quot;Van Buren&quot;' />
                <semantic-value key='5143' value='&quot;Washington&quot;' />
                <semantic-value key='5145' value='&quot;White&quot;' />
                <semantic-value key='5147' value='&quot;Woodruff&quot;' />
                <semantic-value key='5149' value='&quot;Yell&quot;' />
                <semantic-value key='6001' value='&quot;Alameda&quot;' />
                <semantic-value key='6003' value='&quot;Alpine&quot;' />
                <semantic-value key='6005' value='&quot;Amador&quot;' />
                <semantic-value key='6007' value='&quot;Butte&quot;' />
                <semantic-value key='6009' value='&quot;Calaveras&quot;' />
                <semantic-value key='6011' value='&quot;Colusa&quot;' />
                <semantic-value key='6013' value='&quot;Contra Costa&quot;' />
                <semantic-value key='6015' value='&quot;Del Norte&quot;' />
                <semantic-value key='6017' value='&quot;El Dorado&quot;' />
                <semantic-value key='6019' value='&quot;Fresno&quot;' />
                <semantic-value key='6021' value='&quot;Glenn&quot;' />
                <semantic-value key='6023' value='&quot;Humboldt&quot;' />
                <semantic-value key='6025' value='&quot;Imperial&quot;' />
                <semantic-value key='6027' value='&quot;Inyo&quot;' />
                <semantic-value key='6029' value='&quot;Kern&quot;' />
                <semantic-value key='6031' value='&quot;Kings&quot;' />
                <semantic-value key='6033' value='&quot;Lake&quot;' />
                <semantic-value key='6035' value='&quot;Lassen&quot;' />
                <semantic-value key='6037' value='&quot;Los Angeles&quot;' />
                <semantic-value key='6039' value='&quot;Madera&quot;' />
                <semantic-value key='6041' value='&quot;Marin&quot;' />
                <semantic-value key='6043' value='&quot;Mariposa&quot;' />
                <semantic-value key='6045' value='&quot;Mendocino&quot;' />
                <semantic-value key='6047' value='&quot;Merced&quot;' />
                <semantic-value key='6049' value='&quot;Modoc&quot;' />
                <semantic-value key='6051' value='&quot;Mono&quot;' />
                <semantic-value key='6053' value='&quot;Monterey&quot;' />
                <semantic-value key='6055' value='&quot;Napa&quot;' />
                <semantic-value key='6057' value='&quot;Nevada&quot;' />
                <semantic-value key='6059' value='&quot;Orange&quot;' />
                <semantic-value key='6061' value='&quot;Placer&quot;' />
                <semantic-value key='6063' value='&quot;Plumas&quot;' />
                <semantic-value key='6065' value='&quot;Riverside&quot;' />
                <semantic-value key='6067' value='&quot;Sacramento&quot;' />
                <semantic-value key='6069' value='&quot;San Benito&quot;' />
                <semantic-value key='6071' value='&quot;San Bernardino&quot;' />
                <semantic-value key='6073' value='&quot;San Diego&quot;' />
                <semantic-value key='6075' value='&quot;San Francisco&quot;' />
                <semantic-value key='6077' value='&quot;San Joaquin&quot;' />
                <semantic-value key='6079' value='&quot;San Luis Obispo&quot;' />
                <semantic-value key='6081' value='&quot;San Mateo&quot;' />
                <semantic-value key='6083' value='&quot;Santa Barbara&quot;' />
                <semantic-value key='6085' value='&quot;Santa Clara&quot;' />
                <semantic-value key='6087' value='&quot;Santa Cruz&quot;' />
                <semantic-value key='6089' value='&quot;Shasta&quot;' />
                <semantic-value key='6091' value='&quot;Sierra&quot;' />
                <semantic-value key='6093' value='&quot;Siskiyou&quot;' />
                <semantic-value key='6095' value='&quot;Solano&quot;' />
                <semantic-value key='6097' value='&quot;Sonoma&quot;' />
                <semantic-value key='6099' value='&quot;Stanislaus&quot;' />
                <semantic-value key='6101' value='&quot;Sutter&quot;' />
                <semantic-value key='6103' value='&quot;Tehama&quot;' />
                <semantic-value key='6105' value='&quot;Trinity&quot;' />
                <semantic-value key='6107' value='&quot;Tulare&quot;' />
                <semantic-value key='6109' value='&quot;Tuolumne&quot;' />
                <semantic-value key='6111' value='&quot;Ventura&quot;' />
                <semantic-value key='6113' value='&quot;Yolo&quot;' />
                <semantic-value key='6115' value='&quot;Yuba&quot;' />
                <semantic-value key='8001' value='&quot;Adams&quot;' />
                <semantic-value key='8003' value='&quot;Alamosa&quot;' />
                <semantic-value key='8005' value='&quot;Arapahoe&quot;' />
                <semantic-value key='8007' value='&quot;Archuleta&quot;' />
                <semantic-value key='8009' value='&quot;Baca&quot;' />
                <semantic-value key='8011' value='&quot;Bent&quot;' />
                <semantic-value key='8013' value='&quot;Boulder&quot;' />
                <semantic-value key='8015' value='&quot;Chaffee&quot;' />
                <semantic-value key='8017' value='&quot;Cheyenne&quot;' />
                <semantic-value key='8019' value='&quot;Clear Creek&quot;' />
                <semantic-value key='8021' value='&quot;Conejos&quot;' />
                <semantic-value key='8023' value='&quot;Costilla&quot;' />
                <semantic-value key='8025' value='&quot;Crowley&quot;' />
                <semantic-value key='8027' value='&quot;Custer&quot;' />
                <semantic-value key='8029' value='&quot;Delta&quot;' />
                <semantic-value key='8031' value='&quot;Denver&quot;' />
                <semantic-value key='8033' value='&quot;Dolores&quot;' />
                <semantic-value key='8035' value='&quot;Douglas&quot;' />
                <semantic-value key='8037' value='&quot;Eagle&quot;' />
                <semantic-value key='8039' value='&quot;Elbert&quot;' />
                <semantic-value key='8041' value='&quot;El Paso&quot;' />
                <semantic-value key='8043' value='&quot;Fremont&quot;' />
                <semantic-value key='8045' value='&quot;Garfield&quot;' />
                <semantic-value key='8047' value='&quot;Gilpin&quot;' />
                <semantic-value key='8049' value='&quot;Grand&quot;' />
                <semantic-value key='8051' value='&quot;Gunnison&quot;' />
                <semantic-value key='8053' value='&quot;Hinsdale&quot;' />
                <semantic-value key='8055' value='&quot;Huerfano&quot;' />
                <semantic-value key='8057' value='&quot;Jackson&quot;' />
                <semantic-value key='8059' value='&quot;Jefferson&quot;' />
                <semantic-value key='8061' value='&quot;Kiowa&quot;' />
                <semantic-value key='8063' value='&quot;Kit Carson&quot;' />
                <semantic-value key='8065' value='&quot;Lake&quot;' />
                <semantic-value key='8067' value='&quot;La Plata&quot;' />
                <semantic-value key='8069' value='&quot;Larimer&quot;' />
                <semantic-value key='8071' value='&quot;Las Animas&quot;' />
                <semantic-value key='8073' value='&quot;Lincoln&quot;' />
                <semantic-value key='8075' value='&quot;Logan&quot;' />
                <semantic-value key='8077' value='&quot;Mesa&quot;' />
                <semantic-value key='8079' value='&quot;Mineral&quot;' />
                <semantic-value key='8081' value='&quot;Moffat&quot;' />
                <semantic-value key='8083' value='&quot;Montezuma&quot;' />
                <semantic-value key='8085' value='&quot;Montrose&quot;' />
                <semantic-value key='8087' value='&quot;Morgan&quot;' />
                <semantic-value key='8089' value='&quot;Otero&quot;' />
                <semantic-value key='8091' value='&quot;Ouray&quot;' />
                <semantic-value key='8093' value='&quot;Park&quot;' />
                <semantic-value key='8095' value='&quot;Phillips&quot;' />
                <semantic-value key='8097' value='&quot;Pitkin&quot;' />
                <semantic-value key='8099' value='&quot;Prowers&quot;' />
                <semantic-value key='8101' value='&quot;Pueblo&quot;' />
                <semantic-value key='8103' value='&quot;Rio Blanco&quot;' />
                <semantic-value key='8107' value='&quot;Routt&quot;' />
                <semantic-value key='8109' value='&quot;Saguache&quot;' />
                <semantic-value key='8111' value='&quot;San Juan&quot;' />
                <semantic-value key='8113' value='&quot;San Miguel&quot;' />
                <semantic-value key='8115' value='&quot;Sedgwick&quot;' />
                <semantic-value key='8117' value='&quot;Summit&quot;' />
                <semantic-value key='8119' value='&quot;Teller&quot;' />
                <semantic-value key='8121' value='&quot;Washington&quot;' />
                <semantic-value key='8123' value='&quot;Weld&quot;' />
                <semantic-value key='8125' value='&quot;Yuma&quot;' />
                <semantic-value key='9001' value='&quot;Fairfield&quot;' />
                <semantic-value key='9003' value='&quot;Hartford&quot;' />
                <semantic-value key='9005' value='&quot;Litchfield&quot;' />
                <semantic-value key='9007' value='&quot;Middlesex&quot;' />
                <semantic-value key='9009' value='&quot;New Haven&quot;' />
                <semantic-value key='9011' value='&quot;New London&quot;' />
                <semantic-value key='9013' value='&quot;Tolland&quot;' />
                <semantic-value key='9015' value='&quot;Windham&quot;' />
                <semantic-value key='&quot;51515&quot;' value='&quot;Bedford&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;46113&quot;' value='39.645545200000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;46113&quot;' value='-86.3049611' />
              </semantic-values>
            </column>
            <column-instance column='[Calculation_1192890997300523009]' derivation='None' name='[none:Calculation_1192890997300523009:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ESRI_County]' derivation='None' name='[none:ESRI_County:nk]' pivot='key' type='nominal' />
            <column-instance column='[ESRI_State]' derivation='None' name='[none:ESRI_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[countyFIPS]' derivation='None' name='[none:countyFIPS:ok]' pivot='key' type='nominal' />
            <column caption='US Pop County 2000' datatype='integer' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]'>
            <groupfilter function='member' level='[none:Calculation_1192890997300523009:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk]' value='Total'>
              <formatted-text>
                <run fontalignment='1'>Total</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:countyFIPS:ok]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:Median_Household_Income_Adjusted:qk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:value:qk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:ESRI_County:nk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:ESRI_State:nk]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' indent='3780'>County FIPS:&#9;</run>
                <run bold='true' fontcolor='#000000' indent='3780'><![CDATA[<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:countyFIPS:ok]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>County:&#9;</run>
                <run bold='true' fontcolor='#000000' indent='3780'><![CDATA[<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:ESRI_County:nk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>State:&#9;</run>
                <run bold='true' fontcolor='#000000' indent='3780'><![CDATA[<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:ESRI_State:nk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>Avgerage Poultry Home Expenditure:	</run>
                <run bold='true' fontcolor='#000000' indent='3780'>$</run>
                <run bold='true' indent='3780'><![CDATA[<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>Population:&#9;</run>
                <run bold='true' fontcolor='#000000' indent='3780'><![CDATA[<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:value:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='18' />
                <format attr='color' value='#000000' />
                <format attr='text-decoration' value='none' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{67F01512-F09F-4E80-A129-44DE31AB81A8}' />
    </worksheet>
    <worksheet name='(County Map) Average Poultry Home Expenditure 2010'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>2010</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='County' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2'>
              <calculation class='tableau' formula='2' />
              <aliases>
                <alias key='1' value='State' />
                <alias key='2' value='County' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='Map State or County Level' datatype='integer' name='[Calculation_1192890997300523009]' role='dimension' semantic-role='[State].[Name]' type='ordinal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='string' name='[ESRI_County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[ESRI_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Joiestimate001' datatype='integer' name='[JOIE001]' role='measure' type='quantitative' />
            <column caption='Joimargin001' datatype='integer' name='[JOIM001]' role='measure' type='quantitative' />
            <column-instance column='[JOIE001]' derivation='Avg' name='[avg:JOIE001:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOIM001]' derivation='Avg' name='[avg:JOIM001:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avgPoultryHomeExpenditure_2010]' derivation='Avg' name='[avg:avgPoultryHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value (US_Population_by_county_2010.csv)]' derivation='Avg' name='[avg:value (US_Population_by_county_2010.csv):qk]' pivot='key' type='quantitative' />
            <column caption='avgPoultryHomeExpenditure 2010' datatype='real' name='[avgPoultryHomeExpenditure_2010]' role='measure' type='quantitative' />
            <column caption='County FIPS' datatype='string' name='[countyFIPS]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[County].[Name]'>
                <semantic-value key='1001' value='&quot;Autauga&quot;' />
                <semantic-value key='1003' value='&quot;Baldwin&quot;' />
                <semantic-value key='1005' value='&quot;Barbour&quot;' />
                <semantic-value key='1007' value='&quot;Bibb&quot;' />
                <semantic-value key='1009' value='&quot;Blount&quot;' />
                <semantic-value key='1011' value='&quot;Bullock&quot;' />
                <semantic-value key='1013' value='&quot;Butler&quot;' />
                <semantic-value key='1015' value='&quot;Calhoun&quot;' />
                <semantic-value key='1017' value='&quot;Chambers&quot;' />
                <semantic-value key='1019' value='&quot;Cherokee&quot;' />
                <semantic-value key='1021' value='&quot;Chilton&quot;' />
                <semantic-value key='1023' value='&quot;Choctaw&quot;' />
                <semantic-value key='1025' value='&quot;Clarke&quot;' />
                <semantic-value key='1027' value='&quot;Clay&quot;' />
                <semantic-value key='1029' value='&quot;Cleburne&quot;' />
                <semantic-value key='1031' value='&quot;Coffee&quot;' />
                <semantic-value key='1033' value='&quot;Colbert&quot;' />
                <semantic-value key='1035' value='&quot;Conecuh&quot;' />
                <semantic-value key='1037' value='&quot;Coosa&quot;' />
                <semantic-value key='1039' value='&quot;Covington&quot;' />
                <semantic-value key='1041' value='&quot;Crenshaw&quot;' />
                <semantic-value key='1043' value='&quot;Cullman&quot;' />
                <semantic-value key='1045' value='&quot;Dale&quot;' />
                <semantic-value key='1047' value='&quot;Dallas&quot;' />
                <semantic-value key='1049' value='&quot;DeKalb&quot;' />
                <semantic-value key='1051' value='&quot;Elmore&quot;' />
                <semantic-value key='1053' value='&quot;Escambia&quot;' />
                <semantic-value key='1055' value='&quot;Etowah&quot;' />
                <semantic-value key='1057' value='&quot;Fayette&quot;' />
                <semantic-value key='1059' value='&quot;Franklin&quot;' />
                <semantic-value key='1061' value='&quot;Geneva&quot;' />
                <semantic-value key='1063' value='&quot;Greene&quot;' />
                <semantic-value key='1065' value='&quot;Hale&quot;' />
                <semantic-value key='1067' value='&quot;Henry&quot;' />
                <semantic-value key='1069' value='&quot;Houston&quot;' />
                <semantic-value key='1071' value='&quot;Jackson&quot;' />
                <semantic-value key='1073' value='&quot;Jefferson&quot;' />
                <semantic-value key='1075' value='&quot;Lamar&quot;' />
                <semantic-value key='1077' value='&quot;Lauderdale&quot;' />
                <semantic-value key='1079' value='&quot;Lawrence&quot;' />
                <semantic-value key='1081' value='&quot;Lee&quot;' />
                <semantic-value key='1083' value='&quot;Limestone&quot;' />
                <semantic-value key='1085' value='&quot;Lowndes&quot;' />
                <semantic-value key='1087' value='&quot;Macon&quot;' />
                <semantic-value key='1089' value='&quot;Madison&quot;' />
                <semantic-value key='1091' value='&quot;Marengo&quot;' />
                <semantic-value key='1093' value='&quot;Marion&quot;' />
                <semantic-value key='1095' value='&quot;Marshall&quot;' />
                <semantic-value key='1097' value='&quot;Mobile&quot;' />
                <semantic-value key='1099' value='&quot;Monroe&quot;' />
                <semantic-value key='1101' value='&quot;Montgomery&quot;' />
                <semantic-value key='1103' value='&quot;Morgan&quot;' />
                <semantic-value key='1105' value='&quot;Perry&quot;' />
                <semantic-value key='1107' value='&quot;Pickens&quot;' />
                <semantic-value key='1109' value='&quot;Pike&quot;' />
                <semantic-value key='1111' value='&quot;Randolph&quot;' />
                <semantic-value key='1113' value='&quot;Russell&quot;' />
                <semantic-value key='1115' value='&quot;St. Clair&quot;' />
                <semantic-value key='1117' value='&quot;Shelby&quot;' />
                <semantic-value key='1119' value='&quot;Sumter&quot;' />
                <semantic-value key='1121' value='&quot;Talladega&quot;' />
                <semantic-value key='1123' value='&quot;Tallapoosa&quot;' />
                <semantic-value key='1125' value='&quot;Tuscaloosa&quot;' />
                <semantic-value key='1127' value='&quot;Walker&quot;' />
                <semantic-value key='1129' value='&quot;Washington&quot;' />
                <semantic-value key='1131' value='&quot;Wilcox&quot;' />
                <semantic-value key='1133' value='&quot;Winston&quot;' />
                <semantic-value key='4001' value='&quot;Apache&quot;' />
                <semantic-value key='4003' value='&quot;Cochise&quot;' />
                <semantic-value key='4005' value='&quot;Coconino&quot;' />
                <semantic-value key='4007' value='&quot;Gila&quot;' />
                <semantic-value key='4009' value='&quot;Graham&quot;' />
                <semantic-value key='4011' value='&quot;Greenlee&quot;' />
                <semantic-value key='4012' value='&quot;La Paz&quot;' />
                <semantic-value key='4013' value='&quot;Maricopa&quot;' />
                <semantic-value key='4015' value='&quot;Mohave&quot;' />
                <semantic-value key='4017' value='&quot;Navajo&quot;' />
                <semantic-value key='4019' value='&quot;Pima&quot;' />
                <semantic-value key='4021' value='&quot;Pinal&quot;' />
                <semantic-value key='4023' value='&quot;Santa Cruz&quot;' />
                <semantic-value key='4025' value='&quot;Yavapai&quot;' />
                <semantic-value key='4027' value='&quot;Yuma&quot;' />
                <semantic-value key='5001' value='&quot;Arkansas&quot;' />
                <semantic-value key='5003' value='&quot;Ashley&quot;' />
                <semantic-value key='5005' value='&quot;Baxter&quot;' />
                <semantic-value key='5007' value='&quot;Benton&quot;' />
                <semantic-value key='5009' value='&quot;Boone&quot;' />
                <semantic-value key='5011' value='&quot;Bradley&quot;' />
                <semantic-value key='5013' value='&quot;Calhoun&quot;' />
                <semantic-value key='5015' value='&quot;Carroll&quot;' />
                <semantic-value key='5017' value='&quot;Chicot&quot;' />
                <semantic-value key='5019' value='&quot;Clark&quot;' />
                <semantic-value key='5021' value='&quot;Clay&quot;' />
                <semantic-value key='5023' value='&quot;Cleburne&quot;' />
                <semantic-value key='5025' value='&quot;Cleveland&quot;' />
                <semantic-value key='5027' value='&quot;Columbia&quot;' />
                <semantic-value key='5029' value='&quot;Conway&quot;' />
                <semantic-value key='5031' value='&quot;Craighead&quot;' />
                <semantic-value key='5033' value='&quot;Crawford&quot;' />
                <semantic-value key='5035' value='&quot;Crittenden&quot;' />
                <semantic-value key='5037' value='&quot;Cross&quot;' />
                <semantic-value key='5039' value='&quot;Dallas&quot;' />
                <semantic-value key='5041' value='&quot;Desha&quot;' />
                <semantic-value key='5043' value='&quot;Drew&quot;' />
                <semantic-value key='5045' value='&quot;Faulkner&quot;' />
                <semantic-value key='5047' value='&quot;Franklin&quot;' />
                <semantic-value key='5049' value='&quot;Fulton&quot;' />
                <semantic-value key='5051' value='&quot;Garland&quot;' />
                <semantic-value key='5053' value='&quot;Grant&quot;' />
                <semantic-value key='5055' value='&quot;Greene&quot;' />
                <semantic-value key='5057' value='&quot;Hempstead&quot;' />
                <semantic-value key='5059' value='&quot;Hot Spring&quot;' />
                <semantic-value key='5061' value='&quot;Howard&quot;' />
                <semantic-value key='5063' value='&quot;Independence&quot;' />
                <semantic-value key='5065' value='&quot;Izard&quot;' />
                <semantic-value key='5067' value='&quot;Jackson&quot;' />
                <semantic-value key='5069' value='&quot;Jefferson&quot;' />
                <semantic-value key='5071' value='&quot;Johnson&quot;' />
                <semantic-value key='5073' value='&quot;Lafayette&quot;' />
                <semantic-value key='5075' value='&quot;Lawrence&quot;' />
                <semantic-value key='5077' value='&quot;Lee&quot;' />
                <semantic-value key='5079' value='&quot;Lincoln&quot;' />
                <semantic-value key='5081' value='&quot;Little River&quot;' />
                <semantic-value key='5083' value='&quot;Logan&quot;' />
                <semantic-value key='5085' value='&quot;Lonoke&quot;' />
                <semantic-value key='5087' value='&quot;Madison&quot;' />
                <semantic-value key='5089' value='&quot;Marion&quot;' />
                <semantic-value key='5091' value='&quot;Miller&quot;' />
                <semantic-value key='5093' value='&quot;Mississippi&quot;' />
                <semantic-value key='5095' value='&quot;Monroe&quot;' />
                <semantic-value key='5097' value='&quot;Montgomery&quot;' />
                <semantic-value key='5099' value='&quot;Nevada&quot;' />
                <semantic-value key='5101' value='&quot;Newton&quot;' />
                <semantic-value key='5103' value='&quot;Ouachita&quot;' />
                <semantic-value key='5105' value='&quot;Perry&quot;' />
                <semantic-value key='5107' value='&quot;Phillips&quot;' />
                <semantic-value key='5109' value='&quot;Pike&quot;' />
                <semantic-value key='5111' value='&quot;Poinsett&quot;' />
                <semantic-value key='5113' value='&quot;Polk&quot;' />
                <semantic-value key='5115' value='&quot;Pope&quot;' />
                <semantic-value key='5117' value='&quot;Prairie&quot;' />
                <semantic-value key='5119' value='&quot;Pulaski&quot;' />
                <semantic-value key='5121' value='&quot;Randolph&quot;' />
                <semantic-value key='5123' value='&quot;St. Francis&quot;' />
                <semantic-value key='5125' value='&quot;Saline&quot;' />
                <semantic-value key='5127' value='&quot;Scott&quot;' />
                <semantic-value key='5129' value='&quot;Searcy&quot;' />
                <semantic-value key='5131' value='&quot;Sebastian&quot;' />
                <semantic-value key='5133' value='&quot;Sevier&quot;' />
                <semantic-value key='5135' value='&quot;Sharp&quot;' />
                <semantic-value key='5137' value='&quot;Stone&quot;' />
                <semantic-value key='5139' value='&quot;Union&quot;' />
                <semantic-value key='5141' value='&quot;Van Buren&quot;' />
                <semantic-value key='5143' value='&quot;Washington&quot;' />
                <semantic-value key='5145' value='&quot;White&quot;' />
                <semantic-value key='5147' value='&quot;Woodruff&quot;' />
                <semantic-value key='5149' value='&quot;Yell&quot;' />
                <semantic-value key='6001' value='&quot;Alameda&quot;' />
                <semantic-value key='6003' value='&quot;Alpine&quot;' />
                <semantic-value key='6005' value='&quot;Amador&quot;' />
                <semantic-value key='6007' value='&quot;Butte&quot;' />
                <semantic-value key='6009' value='&quot;Calaveras&quot;' />
                <semantic-value key='6011' value='&quot;Colusa&quot;' />
                <semantic-value key='6013' value='&quot;Contra Costa&quot;' />
                <semantic-value key='6015' value='&quot;Del Norte&quot;' />
                <semantic-value key='6017' value='&quot;El Dorado&quot;' />
                <semantic-value key='6019' value='&quot;Fresno&quot;' />
                <semantic-value key='6021' value='&quot;Glenn&quot;' />
                <semantic-value key='6023' value='&quot;Humboldt&quot;' />
                <semantic-value key='6025' value='&quot;Imperial&quot;' />
                <semantic-value key='6027' value='&quot;Inyo&quot;' />
                <semantic-value key='6029' value='&quot;Kern&quot;' />
                <semantic-value key='6031' value='&quot;Kings&quot;' />
                <semantic-value key='6033' value='&quot;Lake&quot;' />
                <semantic-value key='6035' value='&quot;Lassen&quot;' />
                <semantic-value key='6037' value='&quot;Los Angeles&quot;' />
                <semantic-value key='6039' value='&quot;Madera&quot;' />
                <semantic-value key='6041' value='&quot;Marin&quot;' />
                <semantic-value key='6043' value='&quot;Mariposa&quot;' />
                <semantic-value key='6045' value='&quot;Mendocino&quot;' />
                <semantic-value key='6047' value='&quot;Merced&quot;' />
                <semantic-value key='6049' value='&quot;Modoc&quot;' />
                <semantic-value key='6051' value='&quot;Mono&quot;' />
                <semantic-value key='6053' value='&quot;Monterey&quot;' />
                <semantic-value key='6055' value='&quot;Napa&quot;' />
                <semantic-value key='6057' value='&quot;Nevada&quot;' />
                <semantic-value key='6059' value='&quot;Orange&quot;' />
                <semantic-value key='6061' value='&quot;Placer&quot;' />
                <semantic-value key='6063' value='&quot;Plumas&quot;' />
                <semantic-value key='6065' value='&quot;Riverside&quot;' />
                <semantic-value key='6067' value='&quot;Sacramento&quot;' />
                <semantic-value key='6069' value='&quot;San Benito&quot;' />
                <semantic-value key='6071' value='&quot;San Bernardino&quot;' />
                <semantic-value key='6073' value='&quot;San Diego&quot;' />
                <semantic-value key='6075' value='&quot;San Francisco&quot;' />
                <semantic-value key='6077' value='&quot;San Joaquin&quot;' />
                <semantic-value key='6079' value='&quot;San Luis Obispo&quot;' />
                <semantic-value key='6081' value='&quot;San Mateo&quot;' />
                <semantic-value key='6083' value='&quot;Santa Barbara&quot;' />
                <semantic-value key='6085' value='&quot;Santa Clara&quot;' />
                <semantic-value key='6087' value='&quot;Santa Cruz&quot;' />
                <semantic-value key='6089' value='&quot;Shasta&quot;' />
                <semantic-value key='6091' value='&quot;Sierra&quot;' />
                <semantic-value key='6093' value='&quot;Siskiyou&quot;' />
                <semantic-value key='6095' value='&quot;Solano&quot;' />
                <semantic-value key='6097' value='&quot;Sonoma&quot;' />
                <semantic-value key='6099' value='&quot;Stanislaus&quot;' />
                <semantic-value key='6101' value='&quot;Sutter&quot;' />
                <semantic-value key='6103' value='&quot;Tehama&quot;' />
                <semantic-value key='6105' value='&quot;Trinity&quot;' />
                <semantic-value key='6107' value='&quot;Tulare&quot;' />
                <semantic-value key='6109' value='&quot;Tuolumne&quot;' />
                <semantic-value key='6111' value='&quot;Ventura&quot;' />
                <semantic-value key='6113' value='&quot;Yolo&quot;' />
                <semantic-value key='6115' value='&quot;Yuba&quot;' />
                <semantic-value key='8001' value='&quot;Adams&quot;' />
                <semantic-value key='8003' value='&quot;Alamosa&quot;' />
                <semantic-value key='8005' value='&quot;Arapahoe&quot;' />
                <semantic-value key='8007' value='&quot;Archuleta&quot;' />
                <semantic-value key='8009' value='&quot;Baca&quot;' />
                <semantic-value key='8011' value='&quot;Bent&quot;' />
                <semantic-value key='8013' value='&quot;Boulder&quot;' />
                <semantic-value key='8015' value='&quot;Chaffee&quot;' />
                <semantic-value key='8017' value='&quot;Cheyenne&quot;' />
                <semantic-value key='8019' value='&quot;Clear Creek&quot;' />
                <semantic-value key='8021' value='&quot;Conejos&quot;' />
                <semantic-value key='8023' value='&quot;Costilla&quot;' />
                <semantic-value key='8025' value='&quot;Crowley&quot;' />
                <semantic-value key='8027' value='&quot;Custer&quot;' />
                <semantic-value key='8029' value='&quot;Delta&quot;' />
                <semantic-value key='8031' value='&quot;Denver&quot;' />
                <semantic-value key='8033' value='&quot;Dolores&quot;' />
                <semantic-value key='8035' value='&quot;Douglas&quot;' />
                <semantic-value key='8037' value='&quot;Eagle&quot;' />
                <semantic-value key='8039' value='&quot;Elbert&quot;' />
                <semantic-value key='8041' value='&quot;El Paso&quot;' />
                <semantic-value key='8043' value='&quot;Fremont&quot;' />
                <semantic-value key='8045' value='&quot;Garfield&quot;' />
                <semantic-value key='8047' value='&quot;Gilpin&quot;' />
                <semantic-value key='8049' value='&quot;Grand&quot;' />
                <semantic-value key='8051' value='&quot;Gunnison&quot;' />
                <semantic-value key='8053' value='&quot;Hinsdale&quot;' />
                <semantic-value key='8055' value='&quot;Huerfano&quot;' />
                <semantic-value key='8057' value='&quot;Jackson&quot;' />
                <semantic-value key='8059' value='&quot;Jefferson&quot;' />
                <semantic-value key='8061' value='&quot;Kiowa&quot;' />
                <semantic-value key='8063' value='&quot;Kit Carson&quot;' />
                <semantic-value key='8065' value='&quot;Lake&quot;' />
                <semantic-value key='8067' value='&quot;La Plata&quot;' />
                <semantic-value key='8069' value='&quot;Larimer&quot;' />
                <semantic-value key='8071' value='&quot;Las Animas&quot;' />
                <semantic-value key='8073' value='&quot;Lincoln&quot;' />
                <semantic-value key='8075' value='&quot;Logan&quot;' />
                <semantic-value key='8077' value='&quot;Mesa&quot;' />
                <semantic-value key='8079' value='&quot;Mineral&quot;' />
                <semantic-value key='8081' value='&quot;Moffat&quot;' />
                <semantic-value key='8083' value='&quot;Montezuma&quot;' />
                <semantic-value key='8085' value='&quot;Montrose&quot;' />
                <semantic-value key='8087' value='&quot;Morgan&quot;' />
                <semantic-value key='8089' value='&quot;Otero&quot;' />
                <semantic-value key='8091' value='&quot;Ouray&quot;' />
                <semantic-value key='8093' value='&quot;Park&quot;' />
                <semantic-value key='8095' value='&quot;Phillips&quot;' />
                <semantic-value key='8097' value='&quot;Pitkin&quot;' />
                <semantic-value key='8099' value='&quot;Prowers&quot;' />
                <semantic-value key='8101' value='&quot;Pueblo&quot;' />
                <semantic-value key='8103' value='&quot;Rio Blanco&quot;' />
                <semantic-value key='8107' value='&quot;Routt&quot;' />
                <semantic-value key='8109' value='&quot;Saguache&quot;' />
                <semantic-value key='8111' value='&quot;San Juan&quot;' />
                <semantic-value key='8113' value='&quot;San Miguel&quot;' />
                <semantic-value key='8115' value='&quot;Sedgwick&quot;' />
                <semantic-value key='8117' value='&quot;Summit&quot;' />
                <semantic-value key='8119' value='&quot;Teller&quot;' />
                <semantic-value key='8121' value='&quot;Washington&quot;' />
                <semantic-value key='8123' value='&quot;Weld&quot;' />
                <semantic-value key='8125' value='&quot;Yuma&quot;' />
                <semantic-value key='9001' value='&quot;Fairfield&quot;' />
                <semantic-value key='9003' value='&quot;Hartford&quot;' />
                <semantic-value key='9005' value='&quot;Litchfield&quot;' />
                <semantic-value key='9007' value='&quot;Middlesex&quot;' />
                <semantic-value key='9009' value='&quot;New Haven&quot;' />
                <semantic-value key='9011' value='&quot;New London&quot;' />
                <semantic-value key='9013' value='&quot;Tolland&quot;' />
                <semantic-value key='9015' value='&quot;Windham&quot;' />
                <semantic-value key='&quot;51515&quot;' value='&quot;Bedford&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;46113&quot;' value='39.645545200000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;46113&quot;' value='-86.3049611' />
              </semantic-values>
            </column>
            <column-instance column='[Calculation_1192890997300523009]' derivation='None' name='[none:Calculation_1192890997300523009:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ESRI_County]' derivation='None' name='[none:ESRI_County:nk]' pivot='key' type='nominal' />
            <column-instance column='[ESRI_State]' derivation='None' name='[none:ESRI_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[countyFIPS]' derivation='None' name='[none:countyFIPS:ok]' pivot='key' type='nominal' />
            <column caption='US Pop County 2010' datatype='integer' name='[value (US_Population_by_county_2010.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]'>
            <groupfilter function='member' level='[none:Calculation_1192890997300523009:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]' value='Total'>
              <formatted-text>
                <run fontalignment='1'>Total</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]' />
              <text column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:value (US_Population_by_county_2010.csv):qk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:countyFIPS:ok]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:ESRI_State:nk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:JOIE001:qk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:JOIM001:qk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:value (US_Population_by_county_2010.csv):qk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:ESRI_County:nk]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' indent='3780'>County FIPS:&#9;</run>
                <run bold='true' indent='3780'><![CDATA[<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:countyFIPS:ok]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>County:&#9;</run>
                <run bold='true' fontcolor='#000000' indent='3780'><![CDATA[<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:ESRI_County:nk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>State:&#9;</run>
                <run bold='true' fontcolor='#000000' indent='3780'><![CDATA[<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:ESRI_State:nk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>Avgerage Poultry Home Expenditure:	</run>
                <run bold='true' fontcolor='#000000' indent='3780'>$</run>
                <run bold='true' indent='3780'><![CDATA[<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>Avgerage Median Household Income:	</run>
                <run bold='true' fontcolor='#000000' indent='3780'><![CDATA[$<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:JOIE001:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>Avgerage Margin of Error:&#9;</run>
                <run bold='true' fontcolor='#000000' indent='3780'><![CDATA[$<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:JOIM001:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>Population:&#9;</run>
                <run bold='true' indent='3780'><![CDATA[<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:value (US_Population_by_county_2010.csv):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='18' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{40C01E9A-5672-43A0-BFAF-4557C57DE9A2}' />
    </worksheet>
    <worksheet name='(State Map) Average Poultry Home Expenditure 2000'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>2000</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='County' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2'>
              <calculation class='tableau' formula='2' />
              <aliases>
                <alias key='1' value='State' />
                <alias key='2' value='County' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='Map State or County Level' datatype='integer' name='[Calculation_1192890997300523009]' role='dimension' semantic-role='[State].[Name]' type='ordinal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='string' name='[ESRI_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Median Household Income Adjusted' datatype='real' name='[Median_Household_Income_Adjusted]' role='measure' type='quantitative' />
            <column-instance column='[Median_Household_Income_Adjusted]' derivation='Avg' name='[avg:Median_Household_Income_Adjusted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avgPoultryHomeExpenditure_2000]' derivation='Avg' name='[avg:avgPoultryHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value (US_Population_by_state_2000.csv)]' derivation='Avg' name='[avg:value (US_Population_by_state_2000.csv):qk]' pivot='key' type='quantitative' />
            <column caption='avgPoultryHomeExpenditure 2000' datatype='real' name='[avgPoultryHomeExpenditure_2000]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1192890997300523009]' derivation='None' name='[none:Calculation_1192890997300523009:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ESRI_State]' derivation='None' name='[none:ESRI_State:nk]' pivot='key' type='nominal' />
            <column caption='value (US Population by state 2000.csv)' datatype='integer' name='[value (US_Population_by_state_2000.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]'>
            <groupfilter function='member' level='[none:Calculation_1192890997300523009:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='true' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk]' value='Total'>
              <formatted-text>
                <run fontalignment='1'>Total</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk]' />
              <tooltip column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:Median_Household_Income_Adjusted:qk]' />
              <tooltip column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:value (US_Population_by_state_2000.csv):qk]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:ESRI_State:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' indent='3780'>State:&#9;</run>
                <run bold='true' fontcolor='#000000' indent='3780'><![CDATA[<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:ESRI_State:nk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>Avgerage Poultry Home Expenditure:	</run>
                <run fontcolor='#000000' indent='3780'>$</run>
                <run bold='true' indent='3780'><![CDATA[<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>Median Household Income:&#9;</run>
                <run bold='true' fontcolor='#000000' indent='3780'><![CDATA[$<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:Median_Household_Income_Adjusted:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>Total Population:&#9;</run>
                <run bold='true' fontcolor='#000000' indent='3780'><![CDATA[<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:value (US_Population_by_state_2000.csv):qk]>]]></run>
                <run fontcolor='#787878' indent='3780'>Æ&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='18' />
                <format attr='color' value='#000000' />
                <format attr='text-decoration' value='none' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3BFD2B26-2903-4197-97AC-D2F9564BB4D3}' />
    </worksheet>
    <worksheet name='(State Map) Average Poultry Home Expenditure 2000 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>2000</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='County FIPS' datatype='string' name='[countyFIPS]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[County].[Name]'>
                <semantic-value key='1001' value='&quot;Autauga&quot;' />
                <semantic-value key='1003' value='&quot;Baldwin&quot;' />
                <semantic-value key='1005' value='&quot;Barbour&quot;' />
                <semantic-value key='1007' value='&quot;Bibb&quot;' />
                <semantic-value key='1009' value='&quot;Blount&quot;' />
                <semantic-value key='1011' value='&quot;Bullock&quot;' />
                <semantic-value key='1013' value='&quot;Butler&quot;' />
                <semantic-value key='1015' value='&quot;Calhoun&quot;' />
                <semantic-value key='1017' value='&quot;Chambers&quot;' />
                <semantic-value key='1019' value='&quot;Cherokee&quot;' />
                <semantic-value key='1021' value='&quot;Chilton&quot;' />
                <semantic-value key='1023' value='&quot;Choctaw&quot;' />
                <semantic-value key='1025' value='&quot;Clarke&quot;' />
                <semantic-value key='1027' value='&quot;Clay&quot;' />
                <semantic-value key='1029' value='&quot;Cleburne&quot;' />
                <semantic-value key='1031' value='&quot;Coffee&quot;' />
                <semantic-value key='1033' value='&quot;Colbert&quot;' />
                <semantic-value key='1035' value='&quot;Conecuh&quot;' />
                <semantic-value key='1037' value='&quot;Coosa&quot;' />
                <semantic-value key='1039' value='&quot;Covington&quot;' />
                <semantic-value key='1041' value='&quot;Crenshaw&quot;' />
                <semantic-value key='1043' value='&quot;Cullman&quot;' />
                <semantic-value key='1045' value='&quot;Dale&quot;' />
                <semantic-value key='1047' value='&quot;Dallas&quot;' />
                <semantic-value key='1049' value='&quot;DeKalb&quot;' />
                <semantic-value key='1051' value='&quot;Elmore&quot;' />
                <semantic-value key='1053' value='&quot;Escambia&quot;' />
                <semantic-value key='1055' value='&quot;Etowah&quot;' />
                <semantic-value key='1057' value='&quot;Fayette&quot;' />
                <semantic-value key='1059' value='&quot;Franklin&quot;' />
                <semantic-value key='1061' value='&quot;Geneva&quot;' />
                <semantic-value key='1063' value='&quot;Greene&quot;' />
                <semantic-value key='1065' value='&quot;Hale&quot;' />
                <semantic-value key='1067' value='&quot;Henry&quot;' />
                <semantic-value key='1069' value='&quot;Houston&quot;' />
                <semantic-value key='1071' value='&quot;Jackson&quot;' />
                <semantic-value key='1073' value='&quot;Jefferson&quot;' />
                <semantic-value key='1075' value='&quot;Lamar&quot;' />
                <semantic-value key='1077' value='&quot;Lauderdale&quot;' />
                <semantic-value key='1079' value='&quot;Lawrence&quot;' />
                <semantic-value key='1081' value='&quot;Lee&quot;' />
                <semantic-value key='1083' value='&quot;Limestone&quot;' />
                <semantic-value key='1085' value='&quot;Lowndes&quot;' />
                <semantic-value key='1087' value='&quot;Macon&quot;' />
                <semantic-value key='1089' value='&quot;Madison&quot;' />
                <semantic-value key='1091' value='&quot;Marengo&quot;' />
                <semantic-value key='1093' value='&quot;Marion&quot;' />
                <semantic-value key='1095' value='&quot;Marshall&quot;' />
                <semantic-value key='1097' value='&quot;Mobile&quot;' />
                <semantic-value key='1099' value='&quot;Monroe&quot;' />
                <semantic-value key='1101' value='&quot;Montgomery&quot;' />
                <semantic-value key='1103' value='&quot;Morgan&quot;' />
                <semantic-value key='1105' value='&quot;Perry&quot;' />
                <semantic-value key='1107' value='&quot;Pickens&quot;' />
                <semantic-value key='1109' value='&quot;Pike&quot;' />
                <semantic-value key='1111' value='&quot;Randolph&quot;' />
                <semantic-value key='1113' value='&quot;Russell&quot;' />
                <semantic-value key='1115' value='&quot;St. Clair&quot;' />
                <semantic-value key='1117' value='&quot;Shelby&quot;' />
                <semantic-value key='1119' value='&quot;Sumter&quot;' />
                <semantic-value key='1121' value='&quot;Talladega&quot;' />
                <semantic-value key='1123' value='&quot;Tallapoosa&quot;' />
                <semantic-value key='1125' value='&quot;Tuscaloosa&quot;' />
                <semantic-value key='1127' value='&quot;Walker&quot;' />
                <semantic-value key='1129' value='&quot;Washington&quot;' />
                <semantic-value key='1131' value='&quot;Wilcox&quot;' />
                <semantic-value key='1133' value='&quot;Winston&quot;' />
                <semantic-value key='4001' value='&quot;Apache&quot;' />
                <semantic-value key='4003' value='&quot;Cochise&quot;' />
                <semantic-value key='4005' value='&quot;Coconino&quot;' />
                <semantic-value key='4007' value='&quot;Gila&quot;' />
                <semantic-value key='4009' value='&quot;Graham&quot;' />
                <semantic-value key='4011' value='&quot;Greenlee&quot;' />
                <semantic-value key='4012' value='&quot;La Paz&quot;' />
                <semantic-value key='4013' value='&quot;Maricopa&quot;' />
                <semantic-value key='4015' value='&quot;Mohave&quot;' />
                <semantic-value key='4017' value='&quot;Navajo&quot;' />
                <semantic-value key='4019' value='&quot;Pima&quot;' />
                <semantic-value key='4021' value='&quot;Pinal&quot;' />
                <semantic-value key='4023' value='&quot;Santa Cruz&quot;' />
                <semantic-value key='4025' value='&quot;Yavapai&quot;' />
                <semantic-value key='4027' value='&quot;Yuma&quot;' />
                <semantic-value key='5001' value='&quot;Arkansas&quot;' />
                <semantic-value key='5003' value='&quot;Ashley&quot;' />
                <semantic-value key='5005' value='&quot;Baxter&quot;' />
                <semantic-value key='5007' value='&quot;Benton&quot;' />
                <semantic-value key='5009' value='&quot;Boone&quot;' />
                <semantic-value key='5011' value='&quot;Bradley&quot;' />
                <semantic-value key='5013' value='&quot;Calhoun&quot;' />
                <semantic-value key='5015' value='&quot;Carroll&quot;' />
                <semantic-value key='5017' value='&quot;Chicot&quot;' />
                <semantic-value key='5019' value='&quot;Clark&quot;' />
                <semantic-value key='5021' value='&quot;Clay&quot;' />
                <semantic-value key='5023' value='&quot;Cleburne&quot;' />
                <semantic-value key='5025' value='&quot;Cleveland&quot;' />
                <semantic-value key='5027' value='&quot;Columbia&quot;' />
                <semantic-value key='5029' value='&quot;Conway&quot;' />
                <semantic-value key='5031' value='&quot;Craighead&quot;' />
                <semantic-value key='5033' value='&quot;Crawford&quot;' />
                <semantic-value key='5035' value='&quot;Crittenden&quot;' />
                <semantic-value key='5037' value='&quot;Cross&quot;' />
                <semantic-value key='5039' value='&quot;Dallas&quot;' />
                <semantic-value key='5041' value='&quot;Desha&quot;' />
                <semantic-value key='5043' value='&quot;Drew&quot;' />
                <semantic-value key='5045' value='&quot;Faulkner&quot;' />
                <semantic-value key='5047' value='&quot;Franklin&quot;' />
                <semantic-value key='5049' value='&quot;Fulton&quot;' />
                <semantic-value key='5051' value='&quot;Garland&quot;' />
                <semantic-value key='5053' value='&quot;Grant&quot;' />
                <semantic-value key='5055' value='&quot;Greene&quot;' />
                <semantic-value key='5057' value='&quot;Hempstead&quot;' />
                <semantic-value key='5059' value='&quot;Hot Spring&quot;' />
                <semantic-value key='5061' value='&quot;Howard&quot;' />
                <semantic-value key='5063' value='&quot;Independence&quot;' />
                <semantic-value key='5065' value='&quot;Izard&quot;' />
                <semantic-value key='5067' value='&quot;Jackson&quot;' />
                <semantic-value key='5069' value='&quot;Jefferson&quot;' />
                <semantic-value key='5071' value='&quot;Johnson&quot;' />
                <semantic-value key='5073' value='&quot;Lafayette&quot;' />
                <semantic-value key='5075' value='&quot;Lawrence&quot;' />
                <semantic-value key='5077' value='&quot;Lee&quot;' />
                <semantic-value key='5079' value='&quot;Lincoln&quot;' />
                <semantic-value key='5081' value='&quot;Little River&quot;' />
                <semantic-value key='5083' value='&quot;Logan&quot;' />
                <semantic-value key='5085' value='&quot;Lonoke&quot;' />
                <semantic-value key='5087' value='&quot;Madison&quot;' />
                <semantic-value key='5089' value='&quot;Marion&quot;' />
                <semantic-value key='5091' value='&quot;Miller&quot;' />
                <semantic-value key='5093' value='&quot;Mississippi&quot;' />
                <semantic-value key='5095' value='&quot;Monroe&quot;' />
                <semantic-value key='5097' value='&quot;Montgomery&quot;' />
                <semantic-value key='5099' value='&quot;Nevada&quot;' />
                <semantic-value key='5101' value='&quot;Newton&quot;' />
                <semantic-value key='5103' value='&quot;Ouachita&quot;' />
                <semantic-value key='5105' value='&quot;Perry&quot;' />
                <semantic-value key='5107' value='&quot;Phillips&quot;' />
                <semantic-value key='5109' value='&quot;Pike&quot;' />
                <semantic-value key='5111' value='&quot;Poinsett&quot;' />
                <semantic-value key='5113' value='&quot;Polk&quot;' />
                <semantic-value key='5115' value='&quot;Pope&quot;' />
                <semantic-value key='5117' value='&quot;Prairie&quot;' />
                <semantic-value key='5119' value='&quot;Pulaski&quot;' />
                <semantic-value key='5121' value='&quot;Randolph&quot;' />
                <semantic-value key='5123' value='&quot;St. Francis&quot;' />
                <semantic-value key='5125' value='&quot;Saline&quot;' />
                <semantic-value key='5127' value='&quot;Scott&quot;' />
                <semantic-value key='5129' value='&quot;Searcy&quot;' />
                <semantic-value key='5131' value='&quot;Sebastian&quot;' />
                <semantic-value key='5133' value='&quot;Sevier&quot;' />
                <semantic-value key='5135' value='&quot;Sharp&quot;' />
                <semantic-value key='5137' value='&quot;Stone&quot;' />
                <semantic-value key='5139' value='&quot;Union&quot;' />
                <semantic-value key='5141' value='&quot;Van Buren&quot;' />
                <semantic-value key='5143' value='&quot;Washington&quot;' />
                <semantic-value key='5145' value='&quot;White&quot;' />
                <semantic-value key='5147' value='&quot;Woodruff&quot;' />
                <semantic-value key='5149' value='&quot;Yell&quot;' />
                <semantic-value key='6001' value='&quot;Alameda&quot;' />
                <semantic-value key='6003' value='&quot;Alpine&quot;' />
                <semantic-value key='6005' value='&quot;Amador&quot;' />
                <semantic-value key='6007' value='&quot;Butte&quot;' />
                <semantic-value key='6009' value='&quot;Calaveras&quot;' />
                <semantic-value key='6011' value='&quot;Colusa&quot;' />
                <semantic-value key='6013' value='&quot;Contra Costa&quot;' />
                <semantic-value key='6015' value='&quot;Del Norte&quot;' />
                <semantic-value key='6017' value='&quot;El Dorado&quot;' />
                <semantic-value key='6019' value='&quot;Fresno&quot;' />
                <semantic-value key='6021' value='&quot;Glenn&quot;' />
                <semantic-value key='6023' value='&quot;Humboldt&quot;' />
                <semantic-value key='6025' value='&quot;Imperial&quot;' />
                <semantic-value key='6027' value='&quot;Inyo&quot;' />
                <semantic-value key='6029' value='&quot;Kern&quot;' />
                <semantic-value key='6031' value='&quot;Kings&quot;' />
                <semantic-value key='6033' value='&quot;Lake&quot;' />
                <semantic-value key='6035' value='&quot;Lassen&quot;' />
                <semantic-value key='6037' value='&quot;Los Angeles&quot;' />
                <semantic-value key='6039' value='&quot;Madera&quot;' />
                <semantic-value key='6041' value='&quot;Marin&quot;' />
                <semantic-value key='6043' value='&quot;Mariposa&quot;' />
                <semantic-value key='6045' value='&quot;Mendocino&quot;' />
                <semantic-value key='6047' value='&quot;Merced&quot;' />
                <semantic-value key='6049' value='&quot;Modoc&quot;' />
                <semantic-value key='6051' value='&quot;Mono&quot;' />
                <semantic-value key='6053' value='&quot;Monterey&quot;' />
                <semantic-value key='6055' value='&quot;Napa&quot;' />
                <semantic-value key='6057' value='&quot;Nevada&quot;' />
                <semantic-value key='6059' value='&quot;Orange&quot;' />
                <semantic-value key='6061' value='&quot;Placer&quot;' />
                <semantic-value key='6063' value='&quot;Plumas&quot;' />
                <semantic-value key='6065' value='&quot;Riverside&quot;' />
                <semantic-value key='6067' value='&quot;Sacramento&quot;' />
                <semantic-value key='6069' value='&quot;San Benito&quot;' />
                <semantic-value key='6071' value='&quot;San Bernardino&quot;' />
                <semantic-value key='6073' value='&quot;San Diego&quot;' />
                <semantic-value key='6075' value='&quot;San Francisco&quot;' />
                <semantic-value key='6077' value='&quot;San Joaquin&quot;' />
                <semantic-value key='6079' value='&quot;San Luis Obispo&quot;' />
                <semantic-value key='6081' value='&quot;San Mateo&quot;' />
                <semantic-value key='6083' value='&quot;Santa Barbara&quot;' />
                <semantic-value key='6085' value='&quot;Santa Clara&quot;' />
                <semantic-value key='6087' value='&quot;Santa Cruz&quot;' />
                <semantic-value key='6089' value='&quot;Shasta&quot;' />
                <semantic-value key='6091' value='&quot;Sierra&quot;' />
                <semantic-value key='6093' value='&quot;Siskiyou&quot;' />
                <semantic-value key='6095' value='&quot;Solano&quot;' />
                <semantic-value key='6097' value='&quot;Sonoma&quot;' />
                <semantic-value key='6099' value='&quot;Stanislaus&quot;' />
                <semantic-value key='6101' value='&quot;Sutter&quot;' />
                <semantic-value key='6103' value='&quot;Tehama&quot;' />
                <semantic-value key='6105' value='&quot;Trinity&quot;' />
                <semantic-value key='6107' value='&quot;Tulare&quot;' />
                <semantic-value key='6109' value='&quot;Tuolumne&quot;' />
                <semantic-value key='6111' value='&quot;Ventura&quot;' />
                <semantic-value key='6113' value='&quot;Yolo&quot;' />
                <semantic-value key='6115' value='&quot;Yuba&quot;' />
                <semantic-value key='8001' value='&quot;Adams&quot;' />
                <semantic-value key='8003' value='&quot;Alamosa&quot;' />
                <semantic-value key='8005' value='&quot;Arapahoe&quot;' />
                <semantic-value key='8007' value='&quot;Archuleta&quot;' />
                <semantic-value key='8009' value='&quot;Baca&quot;' />
                <semantic-value key='8011' value='&quot;Bent&quot;' />
                <semantic-value key='8013' value='&quot;Boulder&quot;' />
                <semantic-value key='8015' value='&quot;Chaffee&quot;' />
                <semantic-value key='8017' value='&quot;Cheyenne&quot;' />
                <semantic-value key='8019' value='&quot;Clear Creek&quot;' />
                <semantic-value key='8021' value='&quot;Conejos&quot;' />
                <semantic-value key='8023' value='&quot;Costilla&quot;' />
                <semantic-value key='8025' value='&quot;Crowley&quot;' />
                <semantic-value key='8027' value='&quot;Custer&quot;' />
                <semantic-value key='8029' value='&quot;Delta&quot;' />
                <semantic-value key='8031' value='&quot;Denver&quot;' />
                <semantic-value key='8033' value='&quot;Dolores&quot;' />
                <semantic-value key='8035' value='&quot;Douglas&quot;' />
                <semantic-value key='8037' value='&quot;Eagle&quot;' />
                <semantic-value key='8039' value='&quot;Elbert&quot;' />
                <semantic-value key='8041' value='&quot;El Paso&quot;' />
                <semantic-value key='8043' value='&quot;Fremont&quot;' />
                <semantic-value key='8045' value='&quot;Garfield&quot;' />
                <semantic-value key='8047' value='&quot;Gilpin&quot;' />
                <semantic-value key='8049' value='&quot;Grand&quot;' />
                <semantic-value key='8051' value='&quot;Gunnison&quot;' />
                <semantic-value key='8053' value='&quot;Hinsdale&quot;' />
                <semantic-value key='8055' value='&quot;Huerfano&quot;' />
                <semantic-value key='8057' value='&quot;Jackson&quot;' />
                <semantic-value key='8059' value='&quot;Jefferson&quot;' />
                <semantic-value key='8061' value='&quot;Kiowa&quot;' />
                <semantic-value key='8063' value='&quot;Kit Carson&quot;' />
                <semantic-value key='8065' value='&quot;Lake&quot;' />
                <semantic-value key='8067' value='&quot;La Plata&quot;' />
                <semantic-value key='8069' value='&quot;Larimer&quot;' />
                <semantic-value key='8071' value='&quot;Las Animas&quot;' />
                <semantic-value key='8073' value='&quot;Lincoln&quot;' />
                <semantic-value key='8075' value='&quot;Logan&quot;' />
                <semantic-value key='8077' value='&quot;Mesa&quot;' />
                <semantic-value key='8079' value='&quot;Mineral&quot;' />
                <semantic-value key='8081' value='&quot;Moffat&quot;' />
                <semantic-value key='8083' value='&quot;Montezuma&quot;' />
                <semantic-value key='8085' value='&quot;Montrose&quot;' />
                <semantic-value key='8087' value='&quot;Morgan&quot;' />
                <semantic-value key='8089' value='&quot;Otero&quot;' />
                <semantic-value key='8091' value='&quot;Ouray&quot;' />
                <semantic-value key='8093' value='&quot;Park&quot;' />
                <semantic-value key='8095' value='&quot;Phillips&quot;' />
                <semantic-value key='8097' value='&quot;Pitkin&quot;' />
                <semantic-value key='8099' value='&quot;Prowers&quot;' />
                <semantic-value key='8101' value='&quot;Pueblo&quot;' />
                <semantic-value key='8103' value='&quot;Rio Blanco&quot;' />
                <semantic-value key='8107' value='&quot;Routt&quot;' />
                <semantic-value key='8109' value='&quot;Saguache&quot;' />
                <semantic-value key='8111' value='&quot;San Juan&quot;' />
                <semantic-value key='8113' value='&quot;San Miguel&quot;' />
                <semantic-value key='8115' value='&quot;Sedgwick&quot;' />
                <semantic-value key='8117' value='&quot;Summit&quot;' />
                <semantic-value key='8119' value='&quot;Teller&quot;' />
                <semantic-value key='8121' value='&quot;Washington&quot;' />
                <semantic-value key='8123' value='&quot;Weld&quot;' />
                <semantic-value key='8125' value='&quot;Yuma&quot;' />
                <semantic-value key='9001' value='&quot;Fairfield&quot;' />
                <semantic-value key='9003' value='&quot;Hartford&quot;' />
                <semantic-value key='9005' value='&quot;Litchfield&quot;' />
                <semantic-value key='9007' value='&quot;Middlesex&quot;' />
                <semantic-value key='9009' value='&quot;New Haven&quot;' />
                <semantic-value key='9011' value='&quot;New London&quot;' />
                <semantic-value key='9013' value='&quot;Tolland&quot;' />
                <semantic-value key='9015' value='&quot;Windham&quot;' />
                <semantic-value key='&quot;51515&quot;' value='&quot;Bedford&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;46113&quot;' value='39.645545200000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;46113&quot;' value='-86.3049611' />
              </semantic-values>
            </column>
            <column-instance column='[countyFIPS]' derivation='None' name='[none:countyFIPS:ok]' pivot='key' type='nominal' />
            <column-instance column='[stateFIPS]' derivation='None' name='[none:stateFIPS:ok]' pivot='key' type='ordinal' />
            <column caption='State FIPS' datatype='integer' name='[stateFIPS]' role='dimension' semantic-role='[State].[Name]' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='18' />
                <format attr='color' value='#000000' />
                <format attr='text-decoration' value='none' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:ok]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='18' />
                <format attr='color' value='#000000' />
                <format attr='text-decoration' value='none' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:countyFIPS:ok]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='18' />
                <format attr='color' value='#000000' />
                <format attr='text-decoration' value='none' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)] + [federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)])</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DC0E1AD8-02F5-4E3E-80B3-03631F9A6E63}' />
    </worksheet>
    <worksheet name='(State Map) Average Poultry Home Expenditure 2010'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>2010</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='County' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2'>
              <calculation class='tableau' formula='2' />
              <aliases>
                <alias key='1' value='State' />
                <alias key='2' value='County' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='Map State or County Level' datatype='integer' name='[Calculation_1192890997300523009]' role='dimension' semantic-role='[State].[Name]' type='ordinal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='string' name='[ESRI_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Joiestimate001' datatype='integer' name='[JOIE001]' role='measure' type='quantitative' />
            <column caption='Joimargin001' datatype='integer' name='[JOIM001]' role='measure' type='quantitative' />
            <column-instance column='[JOIE001]' derivation='Avg' name='[avg:JOIE001:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOIM001]' derivation='Avg' name='[avg:JOIM001:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avgPoultryHomeExpenditure_2010]' derivation='Avg' name='[avg:avgPoultryHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value (US_Population_by_state_2010.csv)]' derivation='Avg' name='[avg:value (US_Population_by_state_2010.csv):qk]' pivot='key' type='quantitative' />
            <column caption='avgPoultryHomeExpenditure 2010' datatype='real' name='[avgPoultryHomeExpenditure_2010]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1192890997300523009]' derivation='None' name='[none:Calculation_1192890997300523009:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ESRI_State]' derivation='None' name='[none:ESRI_State:nk]' pivot='key' type='nominal' />
            <column caption='value (US Population by state 2010.csv)' datatype='integer' name='[value (US_Population_by_state_2010.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]'>
            <groupfilter function='member' level='[none:Calculation_1192890997300523009:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]' value='Total'>
              <formatted-text>
                <run fontalignment='1'>Total</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]' />
              <tooltip column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:value (US_Population_by_state_2010.csv):qk]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:ESRI_State:nk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:JOIE001:qk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:JOIM001:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' indent='3780'>State:&#9;</run>
                <run bold='true' fontcolor='#000000' indent='3780'><![CDATA[<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:ESRI_State:nk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>Avgerage Poultry Home Expenditure:	</run>
                <run bold='true' fontcolor='#000000' indent='3780'><![CDATA[$<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>Average Median Household Income:	</run>
                <run bold='true' fontcolor='#000000' indent='3780'><![CDATA[$<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:JOIE001:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>Average Margin of Error:&#9;</run>
                <run bold='true' fontcolor='#000000' indent='3780'><![CDATA[$<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:JOIM001:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run fontcolor='#787878' indent='3780'>Total Population:&#9;</run>
                <run bold='true' fontcolor='#000000' indent='3780'><![CDATA[<[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:value (US_Population_by_state_2010.csv):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='18' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{87F8D125-17FA-464E-8059-2D850364B898}' />
    </worksheet>
    <worksheet name='Population by State 2000'>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='NAME (US Population by state 2000.csv)' datatype='string' name='[NAME (US_Population_by_state_2000.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[NAME (US_Population_by_state_2000.csv)]' derivation='None' name='[none:NAME (US_Population_by_state_2000.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[value (US_Population_by_state_2000.csv)]' derivation='Sum' name='[sum:value (US_Population_by_state_2000.csv):qk]' pivot='key' type='quantitative' />
            <column caption='value (US Population by state 2000.csv)' datatype='integer' name='[value (US_Population_by_state_2000.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:NAME (US_Population_by_state_2000.csv):nk]' />
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_state_2000.csv):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9E2BEA10-4903-4775-A4D8-D745BEADDA19}' />
    </worksheet>
    <worksheet name='Population by State 2010'>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='NAME (US Population by state 2010.csv)' datatype='string' name='[NAME (US_Population_by_state_2010.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[NAME (US_Population_by_state_2010.csv)]' derivation='None' name='[none:NAME (US_Population_by_state_2010.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[value (US_Population_by_state_2010.csv)]' derivation='Sum' name='[sum:value (US_Population_by_state_2010.csv):qk]' pivot='key' type='quantitative' />
            <column caption='value (US Population by state 2010.csv)' datatype='integer' name='[value (US_Population_by_state_2010.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:NAME (US_Population_by_state_2010.csv):nk]' />
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_state_2010.csv):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FD533162-FB19-4788-ADC5-930BA714E96B}' />
    </worksheet>
    <worksheet name='Population by county 2000'>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='GEOID (US Population by county 2010.csv)' datatype='string' name='[GEOID (US_Population_by_county_2010.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[GEOID (US_Population_by_county_2010.csv)]' derivation='None' name='[none:GEOID (US_Population_by_county_2010.csv):ok]' pivot='key' type='nominal' />
            <column-instance column='[value (US_Population_by_county_2010.csv)]' derivation='Sum' name='[sum:value (US_Population_by_county_2010.csv):qk]' pivot='key' type='quantitative' />
            <column caption='US Pop County 2010' datatype='integer' name='[value (US_Population_by_county_2010.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:GEOID (US_Population_by_county_2010.csv):ok]' />
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_county_2010.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{02525A6E-5567-453C-9E04-C88CC9DDD360}' />
    </worksheet>
    <worksheet name='Population by county 2010'>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='GEOID (US Population by county 2010.csv)' datatype='string' name='[GEOID (US_Population_by_county_2010.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[GEOID (US_Population_by_county_2010.csv)]' derivation='None' name='[none:GEOID (US_Population_by_county_2010.csv):ok]' pivot='key' type='nominal' />
            <column-instance column='[value (US_Population_by_county_2010.csv)]' derivation='Sum' name='[sum:value (US_Population_by_county_2010.csv):qk]' pivot='key' type='quantitative' />
            <column caption='US Pop County 2010' datatype='integer' name='[value (US_Population_by_county_2010.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:GEOID (US_Population_by_county_2010.csv):ok]' />
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_county_2010.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CE37815A-29AB-4491-B79F-B8E22B67887B}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
          </datasources>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='Median Household Income Adjusted' datatype='real' name='[Median_Household_Income_Adjusted]' role='measure' type='quantitative' />
            <column-instance column='[Median_Household_Income_Adjusted]' derivation='Avg' name='[avg:Median_Household_Income_Adjusted:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:Median_Household_Income_Adjusted:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{00B3B94E-A543-4A09-8628-1D9BED3B80B3}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='County FIPS' datatype='string' name='[countyFIPS]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[County].[Name]'>
                <semantic-value key='1001' value='&quot;Autauga&quot;' />
                <semantic-value key='1003' value='&quot;Baldwin&quot;' />
                <semantic-value key='1005' value='&quot;Barbour&quot;' />
                <semantic-value key='1007' value='&quot;Bibb&quot;' />
                <semantic-value key='1009' value='&quot;Blount&quot;' />
                <semantic-value key='1011' value='&quot;Bullock&quot;' />
                <semantic-value key='1013' value='&quot;Butler&quot;' />
                <semantic-value key='1015' value='&quot;Calhoun&quot;' />
                <semantic-value key='1017' value='&quot;Chambers&quot;' />
                <semantic-value key='1019' value='&quot;Cherokee&quot;' />
                <semantic-value key='1021' value='&quot;Chilton&quot;' />
                <semantic-value key='1023' value='&quot;Choctaw&quot;' />
                <semantic-value key='1025' value='&quot;Clarke&quot;' />
                <semantic-value key='1027' value='&quot;Clay&quot;' />
                <semantic-value key='1029' value='&quot;Cleburne&quot;' />
                <semantic-value key='1031' value='&quot;Coffee&quot;' />
                <semantic-value key='1033' value='&quot;Colbert&quot;' />
                <semantic-value key='1035' value='&quot;Conecuh&quot;' />
                <semantic-value key='1037' value='&quot;Coosa&quot;' />
                <semantic-value key='1039' value='&quot;Covington&quot;' />
                <semantic-value key='1041' value='&quot;Crenshaw&quot;' />
                <semantic-value key='1043' value='&quot;Cullman&quot;' />
                <semantic-value key='1045' value='&quot;Dale&quot;' />
                <semantic-value key='1047' value='&quot;Dallas&quot;' />
                <semantic-value key='1049' value='&quot;DeKalb&quot;' />
                <semantic-value key='1051' value='&quot;Elmore&quot;' />
                <semantic-value key='1053' value='&quot;Escambia&quot;' />
                <semantic-value key='1055' value='&quot;Etowah&quot;' />
                <semantic-value key='1057' value='&quot;Fayette&quot;' />
                <semantic-value key='1059' value='&quot;Franklin&quot;' />
                <semantic-value key='1061' value='&quot;Geneva&quot;' />
                <semantic-value key='1063' value='&quot;Greene&quot;' />
                <semantic-value key='1065' value='&quot;Hale&quot;' />
                <semantic-value key='1067' value='&quot;Henry&quot;' />
                <semantic-value key='1069' value='&quot;Houston&quot;' />
                <semantic-value key='1071' value='&quot;Jackson&quot;' />
                <semantic-value key='1073' value='&quot;Jefferson&quot;' />
                <semantic-value key='1075' value='&quot;Lamar&quot;' />
                <semantic-value key='1077' value='&quot;Lauderdale&quot;' />
                <semantic-value key='1079' value='&quot;Lawrence&quot;' />
                <semantic-value key='1081' value='&quot;Lee&quot;' />
                <semantic-value key='1083' value='&quot;Limestone&quot;' />
                <semantic-value key='1085' value='&quot;Lowndes&quot;' />
                <semantic-value key='1087' value='&quot;Macon&quot;' />
                <semantic-value key='1089' value='&quot;Madison&quot;' />
                <semantic-value key='1091' value='&quot;Marengo&quot;' />
                <semantic-value key='1093' value='&quot;Marion&quot;' />
                <semantic-value key='1095' value='&quot;Marshall&quot;' />
                <semantic-value key='1097' value='&quot;Mobile&quot;' />
                <semantic-value key='1099' value='&quot;Monroe&quot;' />
                <semantic-value key='1101' value='&quot;Montgomery&quot;' />
                <semantic-value key='1103' value='&quot;Morgan&quot;' />
                <semantic-value key='1105' value='&quot;Perry&quot;' />
                <semantic-value key='1107' value='&quot;Pickens&quot;' />
                <semantic-value key='1109' value='&quot;Pike&quot;' />
                <semantic-value key='1111' value='&quot;Randolph&quot;' />
                <semantic-value key='1113' value='&quot;Russell&quot;' />
                <semantic-value key='1115' value='&quot;St. Clair&quot;' />
                <semantic-value key='1117' value='&quot;Shelby&quot;' />
                <semantic-value key='1119' value='&quot;Sumter&quot;' />
                <semantic-value key='1121' value='&quot;Talladega&quot;' />
                <semantic-value key='1123' value='&quot;Tallapoosa&quot;' />
                <semantic-value key='1125' value='&quot;Tuscaloosa&quot;' />
                <semantic-value key='1127' value='&quot;Walker&quot;' />
                <semantic-value key='1129' value='&quot;Washington&quot;' />
                <semantic-value key='1131' value='&quot;Wilcox&quot;' />
                <semantic-value key='1133' value='&quot;Winston&quot;' />
                <semantic-value key='4001' value='&quot;Apache&quot;' />
                <semantic-value key='4003' value='&quot;Cochise&quot;' />
                <semantic-value key='4005' value='&quot;Coconino&quot;' />
                <semantic-value key='4007' value='&quot;Gila&quot;' />
                <semantic-value key='4009' value='&quot;Graham&quot;' />
                <semantic-value key='4011' value='&quot;Greenlee&quot;' />
                <semantic-value key='4012' value='&quot;La Paz&quot;' />
                <semantic-value key='4013' value='&quot;Maricopa&quot;' />
                <semantic-value key='4015' value='&quot;Mohave&quot;' />
                <semantic-value key='4017' value='&quot;Navajo&quot;' />
                <semantic-value key='4019' value='&quot;Pima&quot;' />
                <semantic-value key='4021' value='&quot;Pinal&quot;' />
                <semantic-value key='4023' value='&quot;Santa Cruz&quot;' />
                <semantic-value key='4025' value='&quot;Yavapai&quot;' />
                <semantic-value key='4027' value='&quot;Yuma&quot;' />
                <semantic-value key='5001' value='&quot;Arkansas&quot;' />
                <semantic-value key='5003' value='&quot;Ashley&quot;' />
                <semantic-value key='5005' value='&quot;Baxter&quot;' />
                <semantic-value key='5007' value='&quot;Benton&quot;' />
                <semantic-value key='5009' value='&quot;Boone&quot;' />
                <semantic-value key='5011' value='&quot;Bradley&quot;' />
                <semantic-value key='5013' value='&quot;Calhoun&quot;' />
                <semantic-value key='5015' value='&quot;Carroll&quot;' />
                <semantic-value key='5017' value='&quot;Chicot&quot;' />
                <semantic-value key='5019' value='&quot;Clark&quot;' />
                <semantic-value key='5021' value='&quot;Clay&quot;' />
                <semantic-value key='5023' value='&quot;Cleburne&quot;' />
                <semantic-value key='5025' value='&quot;Cleveland&quot;' />
                <semantic-value key='5027' value='&quot;Columbia&quot;' />
                <semantic-value key='5029' value='&quot;Conway&quot;' />
                <semantic-value key='5031' value='&quot;Craighead&quot;' />
                <semantic-value key='5033' value='&quot;Crawford&quot;' />
                <semantic-value key='5035' value='&quot;Crittenden&quot;' />
                <semantic-value key='5037' value='&quot;Cross&quot;' />
                <semantic-value key='5039' value='&quot;Dallas&quot;' />
                <semantic-value key='5041' value='&quot;Desha&quot;' />
                <semantic-value key='5043' value='&quot;Drew&quot;' />
                <semantic-value key='5045' value='&quot;Faulkner&quot;' />
                <semantic-value key='5047' value='&quot;Franklin&quot;' />
                <semantic-value key='5049' value='&quot;Fulton&quot;' />
                <semantic-value key='5051' value='&quot;Garland&quot;' />
                <semantic-value key='5053' value='&quot;Grant&quot;' />
                <semantic-value key='5055' value='&quot;Greene&quot;' />
                <semantic-value key='5057' value='&quot;Hempstead&quot;' />
                <semantic-value key='5059' value='&quot;Hot Spring&quot;' />
                <semantic-value key='5061' value='&quot;Howard&quot;' />
                <semantic-value key='5063' value='&quot;Independence&quot;' />
                <semantic-value key='5065' value='&quot;Izard&quot;' />
                <semantic-value key='5067' value='&quot;Jackson&quot;' />
                <semantic-value key='5069' value='&quot;Jefferson&quot;' />
                <semantic-value key='5071' value='&quot;Johnson&quot;' />
                <semantic-value key='5073' value='&quot;Lafayette&quot;' />
                <semantic-value key='5075' value='&quot;Lawrence&quot;' />
                <semantic-value key='5077' value='&quot;Lee&quot;' />
                <semantic-value key='5079' value='&quot;Lincoln&quot;' />
                <semantic-value key='5081' value='&quot;Little River&quot;' />
                <semantic-value key='5083' value='&quot;Logan&quot;' />
                <semantic-value key='5085' value='&quot;Lonoke&quot;' />
                <semantic-value key='5087' value='&quot;Madison&quot;' />
                <semantic-value key='5089' value='&quot;Marion&quot;' />
                <semantic-value key='5091' value='&quot;Miller&quot;' />
                <semantic-value key='5093' value='&quot;Mississippi&quot;' />
                <semantic-value key='5095' value='&quot;Monroe&quot;' />
                <semantic-value key='5097' value='&quot;Montgomery&quot;' />
                <semantic-value key='5099' value='&quot;Nevada&quot;' />
                <semantic-value key='5101' value='&quot;Newton&quot;' />
                <semantic-value key='5103' value='&quot;Ouachita&quot;' />
                <semantic-value key='5105' value='&quot;Perry&quot;' />
                <semantic-value key='5107' value='&quot;Phillips&quot;' />
                <semantic-value key='5109' value='&quot;Pike&quot;' />
                <semantic-value key='5111' value='&quot;Poinsett&quot;' />
                <semantic-value key='5113' value='&quot;Polk&quot;' />
                <semantic-value key='5115' value='&quot;Pope&quot;' />
                <semantic-value key='5117' value='&quot;Prairie&quot;' />
                <semantic-value key='5119' value='&quot;Pulaski&quot;' />
                <semantic-value key='5121' value='&quot;Randolph&quot;' />
                <semantic-value key='5123' value='&quot;St. Francis&quot;' />
                <semantic-value key='5125' value='&quot;Saline&quot;' />
                <semantic-value key='5127' value='&quot;Scott&quot;' />
                <semantic-value key='5129' value='&quot;Searcy&quot;' />
                <semantic-value key='5131' value='&quot;Sebastian&quot;' />
                <semantic-value key='5133' value='&quot;Sevier&quot;' />
                <semantic-value key='5135' value='&quot;Sharp&quot;' />
                <semantic-value key='5137' value='&quot;Stone&quot;' />
                <semantic-value key='5139' value='&quot;Union&quot;' />
                <semantic-value key='5141' value='&quot;Van Buren&quot;' />
                <semantic-value key='5143' value='&quot;Washington&quot;' />
                <semantic-value key='5145' value='&quot;White&quot;' />
                <semantic-value key='5147' value='&quot;Woodruff&quot;' />
                <semantic-value key='5149' value='&quot;Yell&quot;' />
                <semantic-value key='6001' value='&quot;Alameda&quot;' />
                <semantic-value key='6003' value='&quot;Alpine&quot;' />
                <semantic-value key='6005' value='&quot;Amador&quot;' />
                <semantic-value key='6007' value='&quot;Butte&quot;' />
                <semantic-value key='6009' value='&quot;Calaveras&quot;' />
                <semantic-value key='6011' value='&quot;Colusa&quot;' />
                <semantic-value key='6013' value='&quot;Contra Costa&quot;' />
                <semantic-value key='6015' value='&quot;Del Norte&quot;' />
                <semantic-value key='6017' value='&quot;El Dorado&quot;' />
                <semantic-value key='6019' value='&quot;Fresno&quot;' />
                <semantic-value key='6021' value='&quot;Glenn&quot;' />
                <semantic-value key='6023' value='&quot;Humboldt&quot;' />
                <semantic-value key='6025' value='&quot;Imperial&quot;' />
                <semantic-value key='6027' value='&quot;Inyo&quot;' />
                <semantic-value key='6029' value='&quot;Kern&quot;' />
                <semantic-value key='6031' value='&quot;Kings&quot;' />
                <semantic-value key='6033' value='&quot;Lake&quot;' />
                <semantic-value key='6035' value='&quot;Lassen&quot;' />
                <semantic-value key='6037' value='&quot;Los Angeles&quot;' />
                <semantic-value key='6039' value='&quot;Madera&quot;' />
                <semantic-value key='6041' value='&quot;Marin&quot;' />
                <semantic-value key='6043' value='&quot;Mariposa&quot;' />
                <semantic-value key='6045' value='&quot;Mendocino&quot;' />
                <semantic-value key='6047' value='&quot;Merced&quot;' />
                <semantic-value key='6049' value='&quot;Modoc&quot;' />
                <semantic-value key='6051' value='&quot;Mono&quot;' />
                <semantic-value key='6053' value='&quot;Monterey&quot;' />
                <semantic-value key='6055' value='&quot;Napa&quot;' />
                <semantic-value key='6057' value='&quot;Nevada&quot;' />
                <semantic-value key='6059' value='&quot;Orange&quot;' />
                <semantic-value key='6061' value='&quot;Placer&quot;' />
                <semantic-value key='6063' value='&quot;Plumas&quot;' />
                <semantic-value key='6065' value='&quot;Riverside&quot;' />
                <semantic-value key='6067' value='&quot;Sacramento&quot;' />
                <semantic-value key='6069' value='&quot;San Benito&quot;' />
                <semantic-value key='6071' value='&quot;San Bernardino&quot;' />
                <semantic-value key='6073' value='&quot;San Diego&quot;' />
                <semantic-value key='6075' value='&quot;San Francisco&quot;' />
                <semantic-value key='6077' value='&quot;San Joaquin&quot;' />
                <semantic-value key='6079' value='&quot;San Luis Obispo&quot;' />
                <semantic-value key='6081' value='&quot;San Mateo&quot;' />
                <semantic-value key='6083' value='&quot;Santa Barbara&quot;' />
                <semantic-value key='6085' value='&quot;Santa Clara&quot;' />
                <semantic-value key='6087' value='&quot;Santa Cruz&quot;' />
                <semantic-value key='6089' value='&quot;Shasta&quot;' />
                <semantic-value key='6091' value='&quot;Sierra&quot;' />
                <semantic-value key='6093' value='&quot;Siskiyou&quot;' />
                <semantic-value key='6095' value='&quot;Solano&quot;' />
                <semantic-value key='6097' value='&quot;Sonoma&quot;' />
                <semantic-value key='6099' value='&quot;Stanislaus&quot;' />
                <semantic-value key='6101' value='&quot;Sutter&quot;' />
                <semantic-value key='6103' value='&quot;Tehama&quot;' />
                <semantic-value key='6105' value='&quot;Trinity&quot;' />
                <semantic-value key='6107' value='&quot;Tulare&quot;' />
                <semantic-value key='6109' value='&quot;Tuolumne&quot;' />
                <semantic-value key='6111' value='&quot;Ventura&quot;' />
                <semantic-value key='6113' value='&quot;Yolo&quot;' />
                <semantic-value key='6115' value='&quot;Yuba&quot;' />
                <semantic-value key='8001' value='&quot;Adams&quot;' />
                <semantic-value key='8003' value='&quot;Alamosa&quot;' />
                <semantic-value key='8005' value='&quot;Arapahoe&quot;' />
                <semantic-value key='8007' value='&quot;Archuleta&quot;' />
                <semantic-value key='8009' value='&quot;Baca&quot;' />
                <semantic-value key='8011' value='&quot;Bent&quot;' />
                <semantic-value key='8013' value='&quot;Boulder&quot;' />
                <semantic-value key='8015' value='&quot;Chaffee&quot;' />
                <semantic-value key='8017' value='&quot;Cheyenne&quot;' />
                <semantic-value key='8019' value='&quot;Clear Creek&quot;' />
                <semantic-value key='8021' value='&quot;Conejos&quot;' />
                <semantic-value key='8023' value='&quot;Costilla&quot;' />
                <semantic-value key='8025' value='&quot;Crowley&quot;' />
                <semantic-value key='8027' value='&quot;Custer&quot;' />
                <semantic-value key='8029' value='&quot;Delta&quot;' />
                <semantic-value key='8031' value='&quot;Denver&quot;' />
                <semantic-value key='8033' value='&quot;Dolores&quot;' />
                <semantic-value key='8035' value='&quot;Douglas&quot;' />
                <semantic-value key='8037' value='&quot;Eagle&quot;' />
                <semantic-value key='8039' value='&quot;Elbert&quot;' />
                <semantic-value key='8041' value='&quot;El Paso&quot;' />
                <semantic-value key='8043' value='&quot;Fremont&quot;' />
                <semantic-value key='8045' value='&quot;Garfield&quot;' />
                <semantic-value key='8047' value='&quot;Gilpin&quot;' />
                <semantic-value key='8049' value='&quot;Grand&quot;' />
                <semantic-value key='8051' value='&quot;Gunnison&quot;' />
                <semantic-value key='8053' value='&quot;Hinsdale&quot;' />
                <semantic-value key='8055' value='&quot;Huerfano&quot;' />
                <semantic-value key='8057' value='&quot;Jackson&quot;' />
                <semantic-value key='8059' value='&quot;Jefferson&quot;' />
                <semantic-value key='8061' value='&quot;Kiowa&quot;' />
                <semantic-value key='8063' value='&quot;Kit Carson&quot;' />
                <semantic-value key='8065' value='&quot;Lake&quot;' />
                <semantic-value key='8067' value='&quot;La Plata&quot;' />
                <semantic-value key='8069' value='&quot;Larimer&quot;' />
                <semantic-value key='8071' value='&quot;Las Animas&quot;' />
                <semantic-value key='8073' value='&quot;Lincoln&quot;' />
                <semantic-value key='8075' value='&quot;Logan&quot;' />
                <semantic-value key='8077' value='&quot;Mesa&quot;' />
                <semantic-value key='8079' value='&quot;Mineral&quot;' />
                <semantic-value key='8081' value='&quot;Moffat&quot;' />
                <semantic-value key='8083' value='&quot;Montezuma&quot;' />
                <semantic-value key='8085' value='&quot;Montrose&quot;' />
                <semantic-value key='8087' value='&quot;Morgan&quot;' />
                <semantic-value key='8089' value='&quot;Otero&quot;' />
                <semantic-value key='8091' value='&quot;Ouray&quot;' />
                <semantic-value key='8093' value='&quot;Park&quot;' />
                <semantic-value key='8095' value='&quot;Phillips&quot;' />
                <semantic-value key='8097' value='&quot;Pitkin&quot;' />
                <semantic-value key='8099' value='&quot;Prowers&quot;' />
                <semantic-value key='8101' value='&quot;Pueblo&quot;' />
                <semantic-value key='8103' value='&quot;Rio Blanco&quot;' />
                <semantic-value key='8107' value='&quot;Routt&quot;' />
                <semantic-value key='8109' value='&quot;Saguache&quot;' />
                <semantic-value key='8111' value='&quot;San Juan&quot;' />
                <semantic-value key='8113' value='&quot;San Miguel&quot;' />
                <semantic-value key='8115' value='&quot;Sedgwick&quot;' />
                <semantic-value key='8117' value='&quot;Summit&quot;' />
                <semantic-value key='8119' value='&quot;Teller&quot;' />
                <semantic-value key='8121' value='&quot;Washington&quot;' />
                <semantic-value key='8123' value='&quot;Weld&quot;' />
                <semantic-value key='8125' value='&quot;Yuma&quot;' />
                <semantic-value key='9001' value='&quot;Fairfield&quot;' />
                <semantic-value key='9003' value='&quot;Hartford&quot;' />
                <semantic-value key='9005' value='&quot;Litchfield&quot;' />
                <semantic-value key='9007' value='&quot;Middlesex&quot;' />
                <semantic-value key='9009' value='&quot;New Haven&quot;' />
                <semantic-value key='9011' value='&quot;New London&quot;' />
                <semantic-value key='9013' value='&quot;Tolland&quot;' />
                <semantic-value key='9015' value='&quot;Windham&quot;' />
                <semantic-value key='&quot;51515&quot;' value='&quot;Bedford&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;46113&quot;' value='39.645545200000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;46113&quot;' value='-86.3049611' />
              </semantic-values>
            </column>
            <column-instance column='[countyFIPS]' derivation='None' name='[none:countyFIPS:ok]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:countyFIPS:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B7F41455-3AF4-44FB-A2E3-8AF9F484976E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>National Average Poultry Home Expenditure</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='County' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2'>
          <calculation class='tableau' formula='2' />
          <aliases>
            <alias key='1' value='State' />
            <alias key='2' value='County' />
          </aliases>
          <members>
            <member alias='State' value='1' />
            <member alias='County' value='2' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='94643' id='37' param='vert' type-v2='layout-flow' w='99050' x='475' y='893'>
            <zone h='4576' id='38' type-v2='title' w='99050' x='475' y='893'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90067' id='35' type-v2='layout-basic' w='99050' x='475' y='5469'>
              <zone h='45037' id='26' param='vert' type-v2='layout-flow' w='90969' x='475' y='50499'>
                <zone h='45037' id='24' type-v2='layout-basic' w='90969' x='475' y='50499'>
                  <zone h='45037' id='19' param='horz' type-v2='layout-flow' w='90969' x='475' y='50499'>
                    <zone h='45037' id='13' type-v2='layout-basic' w='90969' x='475' y='50499'>
                      <zone h='45037' id='7' param='horz' type-v2='layout-flow' w='45477' x='475' y='50499'>
                        <zone h='45037' id='3' param='vert' type-v2='layout-flow' w='45477' x='475' y='50499'>
                          <zone h='44925' id='10' name='(County Map) Average Poultry Home Expenditure 2000' show-title='false' w='45477' x='475' y='50499'>
                            <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='112' id='5' name='(State Map) Average Poultry Home Expenditure 2000' show-title='false' w='45477' x='475' y='95424'>
                            <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                      <zone h='45037' id='11' param='vert' type-v2='layout-flow' w='45492' x='45952' y='50499'>
                        <zone h='44925' id='17' name='(County Map) Average Poultry Home Expenditure 2010' show-title='false' w='45492' x='45952' y='50499'>
                          <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='112' id='12' name='(State Map) Average Poultry Home Expenditure 2010' show-title='false' w='45492' x='45952' y='95424'>
                          <layout-cache has-max-size-h='true' maxheight='1' minheight='1' minwidth='202' type-h='scalable' type-w='scalable' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='45037' id='28' type-v2='text' w='8081' x='91444' y='50499'>
                <formatted-text>
                  <run>These graphs explore the data at the state and county level for both 2000 and 2010.
The state with the largest average poultry expenditure in 2000 was Connecticut whereas in 2010 it is New Jersey.
The state with the lowest average poultry expenditure was Mississippi in 2000 and Montana in 2010.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3278' id='29' type-v2='text' w='45509' x='475' y='47221'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>2000</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3278' id='30' type-v2='text' w='53541' x='45984' y='47221'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>2010</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='34384' id='31' name='(Bar) Average Poultry Home Expenditure' show-title='false' w='85467' x='475' y='5469'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3274' id='33' type-v2='text' w='99050' x='475' y='43947'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000' fontsize='12'>State and County Exploration</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4094' id='34' type-v2='empty' w='99050' x='475' y='39853'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='34384' id='39' type-v2='text' w='13583' x='85942' y='5469'>
                <formatted-text>
                  <run>This graph shows the average poultry home expenditure for the United States by 2000 and 2010.
From this graph we can see that the U.S. saw a decrease in the average poultry home expenditure.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='3571' id='56' type-v2='text' w='99050' x='475' y='95536'>
            <formatted-text>
              <run fontsize='8'>Note: Income values adjusted to 2010 dollars.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='3460' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='23932' x='34933' y='46540'>
          <formatted-text>
            <run fontalignment='1'>Level</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true'>National Average Poultry Home Expenditure</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2000' minheight='2000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='62' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98214' id='61' param='vert' type-v2='layout-flow' w='99050' x='475' y='893'>
                <zone h='4576' id='38' type-v2='title' w='99050' x='475' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='267' h='34384' id='31' is-fixed='true' name='(Bar) Average Poultry Home Expenditure' show-title='false' w='85467' x='475' y='5469'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='34384' id='39' type-v2='text' w='13583' x='85942' y='5469'>
                  <formatted-text>
                    <run>This graph shows the average poultry home expenditure for the United States by 2000 and 2010.
From this graph we can see that the U.S. saw a decrease in the average poultry home expenditure.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3274' id='33' type-v2='text' w='99050' x='475' y='43947'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='12'>State and County Exploration</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='3460' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='23932' x='34933' y='46540'>
                  <formatted-text>
                    <run fontalignment='1'>Level</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3278' id='29' type-v2='text' w='45509' x='475' y='47221'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>2000</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3278' id='30' type-v2='text' w='53541' x='45984' y='47221'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>2010</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44925' id='10' is-fixed='true' name='(County Map) Average Poultry Home Expenditure 2000' show-title='false' w='45477' x='475' y='50499'>
                  <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44925' id='17' is-fixed='true' name='(County Map) Average Poultry Home Expenditure 2010' show-title='false' w='45492' x='45952' y='50499'>
                  <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='45037' id='28' type-v2='text' w='8081' x='91444' y='50499'>
                  <formatted-text>
                    <run>These graphs explore the data at the state and county level for both 2000 and 2010.
The state with the largest average poultry expenditure in 2000 was Connecticut whereas in 2010 it is New Jersey.
The state with the lowest average poultry expenditure was Mississippi in 2000 and Montana in 2010.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='112' id='5' is-fixed='true' name='(State Map) Average Poultry Home Expenditure 2000' show-title='false' w='45477' x='475' y='95424'>
                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='112' id='12' is-fixed='true' name='(State Map) Average Poultry Home Expenditure 2010' show-title='false' w='45492' x='45952' y='95424'>
                  <layout-cache has-max-size-h='true' maxheight='1' minheight='1' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3571' id='56' type-v2='text' w='99050' x='475' y='95536'>
                  <formatted-text>
                    <run fontsize='8'>Note: Income values adjusted to 2010 dollars.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{89EB4396-0315-4C52-9EEB-74A9A15BDEBA}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='(Bar) Average Poultry Home Expenditure'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95160733-32F0-4FBE-925B-C00F8E7AC148}' />
    </window>
    <window class='worksheet' name='(State Map) Average Poultry Home Expenditure 2000 (2)'>
      <cards>
        <edge name='left'>
          <strip size='222'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:countyFIPS:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A8275EDC-7E9A-4EA6-894E-EEE2D950E962}' />
    </window>
    <window class='worksheet' name='(State Map) Average Poultry Home Expenditure 2000'>
      <cards>
        <edge name='left'>
          <strip size='222'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:NAME (US_Household_Income_2010.csv) - Split 2:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:NAME (US_Population_by_county_2010.csv) - Split 2:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:NAME (US_Population_by_state_2000.csv):nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:STATE:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:State:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{656926F4-B0D4-43E9-8A5E-1F8B10A03E3C}' />
    </window>
    <window class='worksheet' name='(State Map) Average Poultry Home Expenditure 2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:NAME (US_Household_Income_2010.csv) - Split 2:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{92DBE758-A21C-42B3-9047-F824048515CB}' />
    </window>
    <window class='worksheet' name='(County Map) Average Poultry Home Expenditure 2000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2000:qk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:ESRI_County:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:ESRI_State:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:NAME (US_Household_Income_2010.csv) - Split 1:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:NAME (US_Household_Income_2010.csv) - Split 2:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{12B61712-AA97-45E4-9356-64EFB0904849}' />
    </window>
    <window class='worksheet' name='(County Map) Average Poultry Home Expenditure 2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[attr:NAME (US_Household_Income_2010.csv) - Split 1:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:avgPoultryHomeExpenditure_2010:qk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:ESRI_County:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:ESRI_State:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:NAME (US_Household_Income_2010.csv) - Split 1:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:NAME (US_Household_Income_2010.csv) - Split 2:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3A806237-755E-473C-A207-0B2BC23AD302}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='(Bar) Average Poultry Home Expenditure'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(County Map) Average Poultry Home Expenditure 2000'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='(County Map) Average Poultry Home Expenditure 2010'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='(State Map) Average Poultry Home Expenditure 2000'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='(State Map) Average Poultry Home Expenditure 2010'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{56C5D85B-FF29-4BC0-9A3F-2C3F1E7E837A}' />
    </window>
    <window class='worksheet' name='Population by county 2000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_county_2010.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B8028DF8-177B-40E4-B9F5-082D9A83D1D6}' />
    </window>
    <window class='worksheet' name='Population by county 2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_county_2010.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BA48D3E3-54FF-4BA2-A6FB-FD5C0F505211}' />
    </window>
    <window class='worksheet' name='Population by State 2000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_state_2000.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{574B6EF4-1A4F-44FD-B2AB-3F5918C14DB0}' />
    </window>
    <window class='worksheet' name='Population by State 2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_state_2010.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D7F09E8D-D46D-4ABF-9226-93F37C6E2EC5}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:NAME - Split 2:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{861FA1B7-387D-476E-B954-D2878438A987}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E34C3D5E-A76F-4BB1-B1CE-682FC48D32BA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='(Bar) Average Poultry Home Expenditure' width='192'>
      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
      dJ+IH1VcwgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='(County Map) Average Poultry Home Expenditure 2000' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(County Map) Average Poultry Home Expenditure 2010' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(State Map) Average Poultry Home Expenditure 2000 (2)' width='192'>
      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
      O9ZVzAX+C1Q2SD698ngPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='(State Map) Average Poultry Home Expenditure 2010' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Population by State 2000' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d+XMkR3bfv1lXV98HbmAGM8M5wOFwyBkeIlc8RHLFDWlX14YOS6GQ5QiH
      f3CEf/M/4T/BP/sXhyzL9kqyjt0VvUvurnhfM+BwLmBw340+qquqq7oq/UMja7ILVX3gGKCB
      +gRBDLqrs45+L/Pley9fEk3TqCRJiIg4rui6Dtu2QSn1XiOE7DpOEAQAQCKRgCiKMAwDjUYD
      ruuCEOJ9hrUjSRIkSZIQi8WewG1ERPSOZVlwHKdF4Jmg8/ACzuSZCb7/eHac4zjY3VJExDHC
      NM1dr/EjAY8oiojH4xAEAaIoIpFItG2bEILI9ok4tlBKYdt2V8cSQpBMJsHM+Xq9Dl3X25pN
      hJBoBIg4vlBKoarqLsH1CzUhBKIoQhRFAE3Tp1aree+HfQ5ApAARxxdBEJBMJpFOpyGKoifs
      THj5v/nX+VEjSHnYDxApQEQfoCgK8vm8Nxr4BR7Y3bvLsuyNCIIgBHqNKKUnew5AKYVpmnAc
      B5RSiKIIVVUDvQgRxxtm41uWFTgJ5j2ZiqJAURRYlgXDMDwvUiwWgyiK0HUdhJCTrQCu66JS
      qaBer3sPjN10IpEI7BGOG5RSlEol5PP5o76UY4EgCIjFYp5nSFEUxONxAPB6ez+8V6jRaKBW
      q7V89ydSAZjwW5a1a6is1WreSHDcuTvzEAtGGdK3Jq5evITR4ZGjvqQjR1VVWJYFRVGQSCTa
      juaKosB1XU/wHcdpeZ8QAmKaJo3FYi2TA8dxPLOBCY8kSRBFsS/MB9M0UalUAt+TZRmZTCa0
      xzguaLUa/vXhHSQH883vZG0bxfUN3HzueZwbnzjqyztSbNuGJEkdR3Fd1wPjCDwSpRSNRgOO
      48A0TS/yxsNOxAINbFgBmr3tcVMKNuTJsoxEIgHTNCEIAmRZ7urBHQWmaYIQAkVRsFXcwu2V
      eSQHm6bPxv1ZJCAhd/kc7j+aQSGdwYP5R7CpC9UluHz5smcKnAZkWe7qOL8cB0FWV1e9GUVY
      hM07eMecUBQF2WzWs6n538eB43Qt3bC8uoL3v/oMjuMiN5CHnE4ilct6728uLiOeTiGZzaBW
      qsDWDeQnRkEpxfr8Iq4Nn8Xlp546wjs4nriuC03T0Gg0At8nhEBi+RLdwATLsixomoZUKtXi
      kz0uHKdr6cR2qYSf/PIDXHzlZuhIOnhm3Pt3MpeBUMh5nY4givjmm2kUslkMDAx4nRgzE47b
      6BwG76g4KFgcwbZtiKLomffMQhBFce+TYMMwvKy7iL1RrVbxxeIMTMNAeX0T+dHhrj7HOi1K
      KQbGR+EMD+Hjb28jraj4+vYtnD9/ATSbgGvZOJPK4dqVp6EoyiHfzf5wHAeapnlBr4OCjxAH
      0bMC8OaF67qRAvSI67r4yXvvIT88iLLgIJHLQkrEkRse6qkdvseUZAnZC2dAKcWo9RRyF855
      x9UcBz/5/CPkiIxnrz4DeWdUiMViRz5S8rIkiiIkSUKlUkEulzuUa3Mcx/MKsfkBWV5epr2c
      jA2phBAMDAzsa4gNys2glMKyLM/j1C9DeDc4joNfffIxtoiN4bOPPTlOoxmoEcTDu1en4aBW
      LsNtNIVAarh44eIUhgYGUSqV8M39e7BcB4OZLK5emcJhrhFhuf2WZXmuzHq9jmq1Ctd1kcvl
      WkYsJrR7HcUsy4Ku6y1p1Z53s5eG2LALYN89CIvS6roOVVWhqipEUYTjOCiVSgDgeW0URYEs
      y7t8+vyN9AOapkFTgOHRpvB7+SiHKPgMURKRGSi0vPb1xiIw9xA0HkNiYgAxQlB2Xfzyq8/x
      2vMvHLgSMKHXNA2UUsTjcRBC4Lpui/exXq+3CLtlWfs6b7lcRqPRgCAILXlAPUeC+WHXcRw0
      Go1AtyI7jrlIg4TUdV1vpY9t2xAEAfF43Is/AM0bZ+FsRVHQaDR2eapisRhSqVToeY4LlFJ8
      +fAesm3s/MP0XgV5+OKZNJBJ7zq/OJzDT7/4GNcmzuPM2Ni+r4m52tn3TQhBKpWC4zioVCoQ
      BKEldZl9z6zDNU0Tqqp6r7F2gGYnyRQpjGQyic3NTaRSqV3v7VnFG40GSqUSZFlGKpXyhimW
      e8M0O5lMepl8fCCtWq2CEIJMJoN6vQ5JkrwHxY807AHW6/XA6zAMA5ZlIRaLQVVVb6Q4bliW
      BZ02kEV7d3MnV3QQne43rE3/EkGGIIrITIzgTnEF39y/izdefgWUUi/fpt3IwDwttm17VoKm
      aajX615sJhaLoV6ve98p3ysDTRPJMAzE43HYtu0pDwvY2raNer0OQRDQaDRQr9eRSCRCVzbG
      YjHk8/nAtQWhd+IXQv9NMlgPDWDXAgSgKeh8m6ynZoKezWZbVu4kEgnYtt0xgsfjOA50XYdh
      GIjFYl6OyHFSBF3XQRRpTwLeCb8LsZtz8M8m7DmlCjlo5RpqtRoopdB1HfF4HMlkMjS7slar
      wXVdT0BZDy5JEhKJhJecxnK0gq6V+e95B4uiKF4HySsO+12tVkPNZLY6jM0x+OsNVYBOvQYP
      nzrRDtY78H8z24yfnCiK0pMC8O2ZpgnTNGHbNjKZzLFQAkop7i08QqqQO/TztGNPz4I8DoAy
      JQCwKw/HdV1Uq9WWkbpcLgNomimqqkLTtK47N0opyuWyp0RspA8KarHvfXt72xtl2JySIYoi
      stksbNtuyV7o2QQK0/xuws5BbG9vQ1EUpNNpL8R9EJMvwzAgCEJLsO5Jw3q42YV5GAkZ8hEq
      456fAd09N9F1Ha7renMvAN5cLui8siyjWq32NPqxZ8dXdAgTfgCeoti2DcuyYJqmJ1P+zpWn
      Z0kLKjFh2/aee22gaUYxG5Flch4EzCRjZtGTUISV1VVsFYsAKPSGjZpdB80kEEv0b65OkOCy
      vDFmarKAE29iAEA6nUa9Xm9rUu/3uoLMOcdxUC6XwaqesM6VTai9ztbfqN9VFAS7Gb6+yn5d
      VbxHyP8Q9wobsnVdRyqVCrVdD5KlzTVYhdTO+WNQsNvz8KTZyz37v/8wW71Wq8GyLM+VDaDF
      W8fSkDvJFH+tQedmo1CYBRL2OptE859lTpNkMtmqAN0+KL+ABrkne4VNnPZKpx6GTeQO2ySq
      Nxo4+lnHwdHN98pMFbbSis8UYC7uTu2weSDzHoYpTDthZwR5EXkFIoR4k3QhrJFeOAzPxl6u
      wT+Z9ptquq57QZjDYG5uDivFzY7HHZYC+k2BsB4TaF0cHvTT63nb3VMvk3PWufb6jHih78YZ
      wybWgXOAw7DXDhveI+FlSnKvsZtmXox4PH7gkc7JyUnUnQYWtRpiyfCiTIfh6+/1uO5P3N1h
      3Qh5px69k9nNH8PfZzfKy5vtbF2LLMvBVSGOm/B3+lLbRaLZcMq/V6vVsL29DcMwDvReCSG4
      8tRFXEkNwFovHli7wP6+E79wHERbPPwI4B91+c+1azOIICEPu4agawxTDFVVwxXALzDHgaDr
      YUE1fwpEp+GYwcLwmqbt2YUbxpnxCbxx/QW46yW4zsFM6IMI+5LbCchevtug9sPkhHU6/Kqt
      boR1L3LHfy5s4hx2jV48oKczHjK9DN/deKo6ZZIyO7BcLh+Y54khSRJee/4FxMo6Gnv0kAUp
      c6ehPmjydxAEnZf9m6UkMHoR5nbfeTfzCt60YkUQmEs2bB5kGAZKpRKKxeLxUwD/RLYTQYLb
      7SjAPs+ikwc98gmCgBefuQ5rq7ynzwe5/554UI+278FZVJVXAEqp52XhYYLpn6+FCWo716f/
      8ywCXK/X206k+XtxXfd4lUXxC3M3s/mw2X+vownLczloRFFENpZAdyVegzlKk5SZGZ08Sv7Y
      ELAjYDuOBkKIFylmSxK9RSkdJrjtrs1/jKIoXsZpkGOE/ew5FeK4cVC2riAILauF2FoExn56
      3jNDw5hefATDsRHPpKFXNRRGhyH0w2o60t2I6rrurnww/8jAH6soyq68MKD35+w/H6UUkiS1
      xCD8VST4c/S9AvRKmMuN7STiOI6Xqs0m2SzVdq9KMD46hvHRMZTKZfz4g5/h2qUrWLcbUPpA
      AQi6MydjsZg3UgCPC9SyhDQ+oc5P0LylF1c8S35jawZYUh7LA7Isq8Vhwo8Ox2oOcNi0m1+w
      B85+s9HAsixUq9UD8RSlUylMjE/gyzvTkGQZ26vrqO+kkp8EeFve38P7vXZsMVUQ7Pl3QhRF
      JJNJ5HI5JBIJUEq9TGB2PlEUvQQ4lrHAj1anYgTgQ/NhsBx15j3gex9WsSCTyXS9Rnl5eRm3
      7n0LKy6jsrqOP/vdH0IURfz6zRdhazpmPvocb7z0CkrlMkrU6MtkOb/Z0qnXZhNmdgwzj8Ly
      f/i2GUygWYIbUyjW87ORh5DHq84Mw/BGItu2IcuypwgnXgH8nqWwIkkAWoZN/xfCVrrlcrm2
      lTAcx8EvPvkItZiA1PkxpGQZBTXZIiRxVcXZ0THcXp6DoshIqr1VhHjSdDsp9eNffAJg16jA
      Rt12nROrGMFWk4WZZMlk0uvlBUGAoihefhnzFDGTiC2wOfEKwIojybKMWq3mZQYCwfOAdgpi
      2zZKpRLS6XRghYLV9TV8+s1tEEqRGT8LQRRh1nTUyyV8e+8uQAjiMRUDAwPYKK7CadhIj/dH
      wduwZ9atQoQFMwHsmjz73aLpdNoTbH5FGftuWbVvVhadwY7zt8tKp0uSdPIVQJIkqKrakm3a
      Te5JEGyBjd+r4LouPv3sM8zVtjF+ubVEoZpMQL04iSIAUKDR0KFVysj3ieAD4RmYnSbHrAe2
      bRvxeHzXyNkpkMlgHRd/fDwe96o/h10zqzThN73YtTUajZOvAMytyRSBLc4A0PJQgr4M/n1W
      ZtC/sGZrawt/9+N/wtkXnsXExMX2SkUASZaRGx48wDs8XCh8C+Z33MWMTkogyzJkWfa+AwYf
      LQ7L5fJ7lHjq9bq3KR4ff9B1HY1Gw1tAz1fR4xWZuUtPvAKwIFc2m4Usy2g0Gp73gFUfCFvP
      zPYRYBXwAu1PQjB2+QLUVHLnz/7LpG0HCUgH9U96w+6XL6LGniETfF4Q/QIfNuIwRFH0Sty7
      rut9h6qqegWwWEcny3LLJtv+az3xCgDAW6kUj8dbKlCwYFepVAoU3Eaj4fVgYV/IQKGAd9Iv
      4/7DhyibOpa2NzFy6fyJqmgHPBbUoORD/hj+dTaCOo7jdR68D96frcvaZx1VGPxIXKvVoGma
      t38YG23YOZjp5E+rYOc6Ed9Su96CXw8adByfNMX7qdnvbqpny7KMK5cuoby5hczI4IkTfiA4
      7YAfCXgvi19BePs96DnzZTCZwoQ9Q0mSvDpUjuPAsizPO1StVr116XylwbAJOKW0VQGC8ueP
      O3yww//QYrEY0ul0W4FkvQkP+xJ55QlD0zQv5+X5689B6CJySl0XRkWDUTqYxf9PCr9wB5k/
      /pqurFcOyiTlOxpeEYICYUwuWUG2ra0tlMtlUEqhKEqL8APwirP5f/wErgneT97Lk4avAc9v
      oBaPx7vaEZIQgnQ6jWQy6dUqZa/H4/GOnQFfbm8gn0djaTbwM8wTYRkmsFnBhdExVKpV1DrY
      u8eFoGv02+9BtjwTdD466xduvm2/tyYos5O1ywoxBO0caRhGV1UC97Qo/ijxuzAbjYZXRqVQ
      KLTY+N3eD+uxWNUIXdchCIJXW6ZbFEXBzTMXMLOyhIplwHVcjKSykAQRD+cfwSIUVybO4cYr
      38GHn32KMmykSfjSyeNEkMcmaETgf/PHxWIxTwmCTFJ/++2UJOza/PAxn6BjCSG9l0c/zqiq
      ikQisa+dUZgNykp97KcdoDXYs7a+juGhIYiiiOL2Nj6bu4/k8MCe2n9SaLNLeP7SVMtrfkuh
      neDzz4Ht1CIIwq6iyrzAM1O8HUEjD39N/N9h5wFOWDKcaZooFov7Lq/C6ljuZzLrf/CiKGJ8
      bMz74gv5PGK0PzseZoLwc8ZusjzZPM1fQK1dlBgIXmHmN7+CbPwwu5/nRCkAYz8K4IfS8MrU
      +4EQgryafGIOh8Me5YMmuUEFCYCmqVir1ULbYiYpP5EOOof//GHX1G6EOJFxgIMUKl3X8dNf
      vI+nn7qEbbOGfCqNqQsX99zW0soyLl+8BEopNLsOQoJLeh8kYSbLfmHmBJu4BsUH/KYKHx9g
      JpEfv+D6FaDdaOO/hqAcI/74E6kAfP7HftENA8roAGaKaxATKjS9BH36FiZHx5HNZnuqLRSL
      xXBvbhYPV5cgxRSI+TQOY+u6Tr19u4nh7oPbt+OPCvvbD0pDAJpeunq93hJd7zTRDZpjhN0T
      K32oaZrnJeKV70QrQKPRQLVaPZDy6EODg3iZAIV8AZqm4ee3v0BlbBj/8vlHuDA0hpdv3Az9
      rOM4+Pj2V2g0Gnj52nOYX1lG/MxI26JZ+yXMXcm/H9Qr7mVUCHJ3Br0fNPKwlBT2etB1t7uu
      oIAb8Dj9gjkyEolES/l+f2DzRHmBeERRRKFQOPBdLF3XxU/f/xne/Y23OyrX/dkZ3Fp6hEQ2
      jeraJgYmJ56Y8B+UmaM9WsLzF6faHsOnSfgT5YJSEAB4k2GWwsBeC2o3aKLd7aSXENKy+N5/
      LYc+Auy1d+n1HISQXa40Vr77IBEEAd97652Ox1FKsVLcxMCZMciKgnQhf6DX4ecwhL/ZWHfn
      9vf2QYErXvBY9Ny/j5zflGo3ge2UNMcf4+X+CEJLlPhQvECENJejDQwMIJ/PH+qWmwC8Wo/J
      ZNKzKdkqoqOiXKlg9uEMpJ00gMOCN2HaeUn2036vr4eZM/wPE0i2VRIQ7g4NMqGC7jfIVepP
      tuO3eBIE4XBGAOZHp5R6+RqHhaqqyGazLb0FmwQflQK4rovPH97F2ZvXuuql9kK3PX6vnh9/
      rxv0qTChDGuv3f3zATG/jc6PHF6PzZVa6XXSzDZfyWaz3nZJh6YAwONtTg8DRVG81Vn+Yfco
      e37HcfDF7VuQB7MQd67jSfXKB9VeyyQRwWZsNz75MG+T/3Pe8kRJajkmbHRj87p2mbpBZjGj
      Vqshn88jHo93bwLxWZdsbyiWZ++HLVTYT73NsBuTJMkrhfGktj3qhbplYbNUbCl6ddyu0U8v
      blDWC/tfY+10G6xin2GpzLy8MLOFf42v/sBSoYHH5Rb56+Inz0Hwa4U7dpWCICCTyXjCxi4i
      FovBcZyWsDYhxDN9CCGBS9m6xf8Q2S5/bMg8rkK1ubkJjbjIPMHrC3M0NCwbkrJ769CwQFLw
      Mw1YRMK5Gv2uyKAktqBJLfvNJsGSJHl7zbVzffrb5T083cyB4vE40um090zaKgCbzPqXAhLS
      zJfxh7MzmUzLqNBuVU8vKIqCRCIRWInhuDFQKCC9dPjR3TAqW9tIZtNYnL4HSCImn7kSaOK0
      E0r/dx2Uox8UVAqik+uSP0aSJJim6fXo/LW08yqx1/h6o8yksm27RVHj8XjLCNbWBJJlua2Z
      wRchyuVynk+X9QQHUXJclmUkk8lQc+u4kUwmcXFoHHf/9VNUt0uBx+x39AoTOqNSxYSUQO3+
      AlKDeZx/9mkIgoBauYI7H34KU9dh1nRsLCwFui759r1rxePcHF4wg44Nu7duzSLgcXFb/2eD
      vD28mcRGA1Yl2nVdr5YTIcTbLd4/PwwdAQRBQDqdbjuhTKVSqFQqSKfTLaMEpc3FCvtVALb8
      rR96fp6LTz0FVY3hR+/9BBOXn4KsKMiNDPXskekWSinsrTKu5IewUipCzWdQWV/HzFYRZ5++
      jPsffgbLcXDrJ+8jk0ojd+ncrjY6KaV/Qhp2H0HmVrsRxj8S8cezShJsktzNZnss6svaZudi
      C+PZ/IFFikOlu5s9tERRRDqd9vaKZSfw7xi+F9hyxqBe57Bh7ttcbm87uxNCIEoSzk5dQmV1
      A2k1jgqlyI6NoG4YsHRz37vG88/ELFcxKscxPT+L1OQYFCGFM6PNdQZrcwuobpfwvXd+E4V8
      Hq7r4v998D6qW0VcvHkdlmG2L8sYMAkG2isxL8R+c4r99isG3x4LVrGOlC957oc3w8ICaEDT
      HN/e3t79+V33SwgymUzH7UQJIZ5tzk6o6zq2trZCN5tgWkwIgaqqyOfzGBoawuDgILLZrGeb
      JZNJZDKZXYsmnhSUUnzy2aeYmZ3t6XONRgPzC/NwHAfzi4uQYgpyZ8aQuTiJzOgwKKWY++Yu
      1HTyQK+VblUwPjoGSY3tqomfSKeRGhrA3MI8BgcHIe2YlKX5ZWw8WsD8l9Ndn8s0TZim6X0n
      /l1Y/MIeNPfo5vuUZbmlHCIfze2GXly2u7p4vkfvBbZPbJjZo6oqkskkyuVy4MRaFEVvU+PD
      3su3E4Ig4Ltvv4OZ2VmvmGo7XNfF57e/xqauQcqlcOtXD/H919/C3Qf3sdjQEYvvbCBt29C2
      SgeWn6RXqqgurODd77wBs24C8VZT0Wk4SBdyqGs6dCWOf/jxP+PC5Dm8cOMGzk6cQa1Ww2xy
      Houz8xg6f7aldyeEoLJVhCML+PmXnyIZU1FXBKi6jRevP+8JZLffk3/i2qsZyKdN8G12u3KM
      h1emFgVQFGXPwl8qlVoKnzL/riiKME0T2WzW2xghqMAUIcRb3H4cXJyCIODSxe7y/pn7VyQN
      qMkEigvLcBwHU5cuo/r1l7B2Hra2voWXrl1HzTCh+pLieunhGLIaQz6XRyKRwKf3vkFipOC9
      t726ju2ZBeTGhpGNJ0AkEeNnJvDSiy96x6hqs06p9atfwV7aQD6dgUwEgAjYMqrYnp3H6HNP
      Iz82glq5iq17DzCYL6BYLCKVSgWaOiw41c38L2wC7fccMfdrWIkT9hk2CQ56lmHX1JINyjw5
      vcDCy/54QKFQaCmHwdtqJ7FuDgBUNQ3T09O4eeMGYrGmK7Rer+PezENIooiL5y9AkiT8/ItP
      oIz2vhaYNyHW5hagrWzgz37vh6CU4p8//iU0TcPYlYtYejCD2sIq/t1f/FsvunprehqXL17c
      lRzoOA5qtRoymcyu85UrFXw7N4NK3UBGVrG0sABDFjCUzuKFK1cBPBb4tbU1LFeKGMnkMTY8
      ErrdlT9o5ocvmuWPP4TFGdgxLMU6aMIeFBkmxLconpkezK7vRJDwA83eP5/Pn1hB3w+UUnw5
      fQu1XG8jLZ87b2g11OdX8fZrb0BVVTiOg89ufYUtt47q1jbiNsUPfuu3D/T5a5qGv//gPQxf
      ugA5FoO9vIHrF5sxho3NTTyobiIzNIDlb+7jN1/+TqB5wptAQV4f/70Cj6PC7Uwn3tMT5rgJ
      8iBRSiEQQrwSgaZpol6vd7Ubiuu6qNVqu3p+4HGCUzc22mlkw9CAHs0d5u92XRdkW8OrL7zk
      Pe9arYY7j2ZQXV7H02Nn8Tu//f0D73ySySS+/9pbSBgNVLeKkMcHcW9utjnxX1lGYWwU6/OL
      oKKAb2cehk6Cgd079fA//sp8jHYT2bB4Bg9TIv+EnRSLRcpWTvFDTTuYe4p3K/EamsvlEIvF
      vLLWLFszosmvPvoQZiEJIhDUFtcQGxmAIAiIxVXM3rqDwtgIcsODWLo/g5FzZyEprZPw4uIK
      kpKCV65eR1xVUSqVkEwmAzeEO2gopVhaWcaDrTVsbW6itLYBNZ+FbVsYPTeJtYePMHH1MoZt
      AWMjo7tSFTrhXwjP7P5Ows/PAdodx8uh67oQEomEV6ulW587c3kGXQTz8LAZe5BteZpxHAeG
      aaJeqmDx46/x0tQ1jLky5IqB0uoGLgyPAY4LrJcQg7BL+AkhKJwZQ0MRYe3EWjKZTFdlHA8C
      QgjOjE/gytA4koUczt98Fk7dgqhbUJNxGJUqRFHEkqVhZWPd+1w74ec3r2NWA+ux/aUW+evw
      7znMv+eHN7f4LAVimiZlE7ZuoJRC07SWPCB24bzt34uL7DRBKcXCwkIzil6t4vy5ZlRW13X8
      wy9+hu+9+joURcHM0gI2xAYkTqjZ89yaX8KvXZjC4OAg/tff/ggv33wB58+ff+L38mhhHt9u
      rQCiCGN1AxXTQEKQQNIJpAfyqFc0XB+d9BIkGUGy4c/k5M0g9lrQTjLsMwBCRwDe5OFHE0EQ
      ulcA9kFd16FpWuBFsBqbEXuDF4wPPv0I7mCmRQFMrQarXoe4WcW7b7+D937+M8xtb6Kyuo4/
      /r0/wMTExBO/Zk3T8OOf/hRrm+sYHhuDKAi4f/cuxFgMN959E9JmFVcvXm6ZD/Ibb/uDZ7sE
      lBsZ/LvE+OmkAMwL1BJ17nSD7MINw0ClUmkRfv4YdqJ2vtqI9vCdiU4dyDuV1Njr2soGRhHD
      G7/+Gu7dv49fffghJMPCX/zJnx6J8ANNz2FhYADZcxNYLW6i5tq49OLzsOp1fPPLj7FQ3IBZ
      N3dFqP34e37gsQfIPyLsBd604umoAI7joFwuB7o7/dRqNRSLRVQqlUgJ9oFlWXB2vhn2HDcf
      PMJrz97AM1NPY3p6Gj/68T/i8ss3IBYygTkuT5KXXriJlBpHLBGHoRsgtoPhc2eguECykMP9
      hTkArRPRTmkTQGu2Jxs1evVuBcUE+Pe6aq3bxDa2Fvc4rtTqFyiluDP7EJbVTAk2azrMRyv4
      7ouvolAo4MPpr7BCTYxfvICR82chUIp6Y+8Ljw6CVDKFa2cuwKw290qorW9BlCWcPzsJvaqh
      JjaDavzE1S/MYUoQtItMr4TFDjoqALO7emmc7aV1ErFtG1/funWo55h+cA/VuIjhc2cAAKWV
      dbz24svePgQN04JeqUJUZHzyf3+KV5++jmtPXz3Ua+qG0eFhNMw6Rs6fhek0MJEbxPj4OFzL
      RmFiFDNLCwCwy/YPGgn8Pnugu7yfXmDthSoAm3WXy+UDO2m/I8synrt+/dDa39zcxGJ1G6Is
      oa4bKM4t4urIhNehCIKAi2cmUZpbQqIB/MWf/BtcuHDh0K6nFxRFwTuvvwk1Hsf4xDhsTcfX
      8zOwagbmbt1BqdHcfKSTi5J/DQheg+wnbPTohtCWWYJbr0OO4zjQdf1EzwEWF1QenEAAAA/Y
      SURBVBe7ipZ3S71ex+fTt/Dp0gzkVAJbSyuwljZwbWwSV6eebjl2IJ/HhTOT+K233sHY6NiB
      XcN+kWUZzz5zDeXZRbgE2KjXsL25BcttYGtxBSAEX96ZhmEYoenKfC/vHyXaCXi7yXEnxQhV
      AJaaHEa76FynyXK/MzIycmApzeVKBR/c+QpmPoHM0AC255eQqFp489deRSbdGkR0XRfLKyt4
      6sKFIy39EoYgCHj1xZchUgKi15GTYsiIClKpJNbnFpGbuoCvlh9hZmGuxdxh8IrA2/yNRiP0
      fnkl4cuqd+sxClWAdvV8woSfreLqtyWMvXIQEVfmLv565h4SO7vEVIslrMzO4+aNG4jH48jn
      8y1uZ0EQMHXlCi5dunTgNU8PirMTE7h+eQqyKCKZSqFsGlAlBUQgmPvmLsSECrOQxMfTX7dU
      hWP48394YrGYl+7BFs34j/PvQBkURebPFahW3Ux++UbYBbBCVRHhOI6Dz+9MY7lShL5RhEsp
      snUDG4vLGEnn8Ic/+F0UCs28fkKaG/W5rotv797FM1ePfrLbCUIIRkdHcfP5G/h6+jYgEOTP
      TUBaXMX8whIsw8RTz1+DkE97a339qdLA7q2M6vW6l6XsD4j5P9cuEY/BPh86jrZbeBA0WWFl
      KCLCcV0XH97+ElYyBmtFR2J0EOZ6EddHJ2HkhjF1pbWECXMbAugL4WeIooipqSlsFrdQmX8E
      o2FhbXMD2WwWQ+fOYPHeAwyMjHhV/YJkKih5Ttf1FoUB2q8v8I8M/G+2SL6nqEI7u7/Tin2W
      QXqSJ8ftcF0XX339NdarZZSX15ARFORsgnpZw8bmBsbHxk5U7IRSCtuysTI7B71SRX5wANVi
      Cd/84iPYpgU5oaK6Y975o7x89NePfxPtXcltvt7fHz9g52HKF2oC9SqorABRO3uLEALLsk5s
      nMAPpRSrq6tY2FzD3IMZ6G4DZqmCZ595Bs8+fw1qPI6rV6bw8SefYGuriHfeeRuydDJMSEII
      fuPNN6HXTdy+fRvjT1/CKy++hLv370FQFTglDQOXznjH+nt1fnLrnxQDuzvcsAk0/z5fUpG1
      HWqzBGlfJ3eU4zht5wCSJB2o+/C482h+Hg/0IqS4jIqp44++/7uwGw0MFArec8zlcnjj9ddR
      1TSQdvsR9SGEELz26ndgWxbkmIprzzyDqStX8OkXn+PauYuhniD+tz8YFhQs44U+LFgW1qEH
      ZoNSSlGpVGAYRseb5Cs0d7Mz92mBUop/+fCXSCYSODs4guGhIayurSKbaZbmPq0wB0u1WvU2
      subz//levF2H65/ssnbbecf8itR2f4BuJrTZbLZli5vTDqUU1WoVP3v/fYwMD+PmlasYGHi8
      +H3y7OSpmwPxgsnkhBXD5b05nbw2YW2zY7uJGPOCz+YCgVLOex/CEAQhSnrjWF5Zxsd3bkNb
      3cQPf//3vaJOfk7b87JtG8ViEYIgIJVKeW5d3s3O2/uslidTkDD8pg/7WxTF0DlsUH5R2xEg
      yBUV0crSyjLUWAyVqoZHD2fwyvXno0VBHKx+P/s361z99j8TSlmWIQhCyx7CLC+N0uCSOv71
      KMxVGlZChSdUAcIKDPnfP80sLC3i4zu3INUdpJJJ/PkP/whDg4NHfVnHCkEQvP16GYQ0S2PW
      63UQQrx0eyboLK2eUurVlmKEuUeZYrGizMrOYqKgCTLvcm1r6LPKvDyqqkJV1Sdm/ui6jjsP
      72NieBSjIyOHfr5OmKaJUqmEQqGAz7+5jbdfehWF/OHuANnPEEI8YTRN05MbJkOWZcEwjF3r
      f4HHsSOeUG/OjiwqiuJVfmYpOWHJdx3doEEKkEwmn2i6QywWg9twUCqXjlQBKKWYX1iAplUh
      y81tor7/1nej1I8uEEURyWTS6515U4j98JXgmCIEBVd5F2jQyMDaZSYQO5d/OaR3fLtF8ay3
      408+ODh4JIlYq6urWNtYx/PXnzu0c+i6jo3iFs6dOQsA2NjcRGYnuW97exuu62IwMnH2BPMG
      MbOGn4halgVN01piREEBraB8njB3qSAIMAzDS5zjg2AtnqB2CuA4DjY3N70LOM4lD11Ksbqy
      glwu5xX47VTZudFoYGNzEyPDw5iensad+/cASjE0OIiBfAFj42Mo5A9+t/nTCqV01+7w/OvV
      anXX8fwPXzoFCPYEAa3FtSzL8kYZvmCDV6q/FwXIZrMHvvP6QTE7O9u0LwUCSZIxPDSEO3e/
      9RaUbGxsIJfL4cfv/QsmJ85g5tEsNotFjA8N4/XXXwfQNLcURWmbfx5xONi2DU3TWrZH4k0X
      v0fHrwxBiW9sZGCTbLYBH1OmrhRgY2MDQDPiy3bYPu7Mz8+jqml4emrK673L5TIymQyWl5dB
      AdQ0DWNjY1HlumMCW0nIL5vkvTh8iRRgd1rOrqrPIblE/LxCFMX2XiAW7GIb1fWD8APA5OQk
      tra2PF+y67qoalVks9kjq58T0R5BELx6skBrghyz2f3JbkB4GjSvAAzLsqCqauv7YblAjL3W
      Y4mI6AVKKer1Our1essGi0HRW/9k2d8OfzxfZAtoOnYSiYRXu7btmmDLstouKYuIOChM00S5
      XEaj0UAi0dw9h8/1D5rs8v/mfwf1/uzfsVisJckzULJt24ZpmlF2Z8QTIxaLQVVVWJaFcrm8
      q8RmWH5P0BqAoLUBvFLE43HPJRuoACxxKer5I54UTOZY7w88NmfS6bT3d1BAi4c3lcKixryy
      BEo485FGRDxJRFFEKpUC27CFTYTZzqH+vCAePijmVxB+yaT/WMHfyGlasRVx/BBFEfF4HKlU
      ynNh67oOx3GQSCR2WSZBdn7Y30EmkeT/QBT1jDhqWO6QLMveNlu1Wg2yLCMej2NlZQXr29ug
      AEApWH9PCMHOiwATfkoBSiGKAtydNeuEEIClTh/JHUZEdIDFBZgSGIbhlTJZWVvDcqMBdfJc
      V21py0u4cvEcNucWMHx21Nt0REYX+wNERBwV/OKZu/fvezuYuq6L6sZG94u1CB6PCD6iESDi
      2GMYBu67FLN37wGWhXwqheLiIgrXn4PYQxnOIJd+NAJEHHsGBgYwKEuQx8chnz+PVccB8VWI
      YwSuFtspN5MfHUZxdb3lvUgBIo49oihiIpXyvDjr9++DCgKckALOfPpEc8K7szJNVWGZJlzn
      sUs0UoCIvuDc6Cgqy8sghCCWSmH02WcR2wmQdYQbKEbOT2LpwQzoTlwgmgNE9AW5XA6xnY1X
      Jm7c6OmzlNMAUZIwfP4s5u7cxej5c9EIENEfyLIMvVoFbROoDctb878qKwpGLpzD9tp6NAJE
      9A8TQ4PYXJqHI4hIT5wF8aXr0J2gV71WQ91bXklhlMqoGwZi3GrGhmUjkUlHChDRP+SGhyBn
      UyhvbMAsl0EBGMUtSPEEXNuCAAo1HkMik8bA5NjjekDjw1h5tIjJqYuPl1K6LhqWFSlARP/A
      TJns0BDoyipkVcXotSnYZh2yGl5yX5QkQJJAXeq5fSRFRq1ciRQgon8wd2qFEkKQGxv1Xm8n
      /ADgNBpQBAJRepznpiaTUJPJaBIc0R9QSqE37M4HBqBtbmFgLLioWqQAEX2B67poBJRA6QZb
      qyKWCC7nEylARF9g2zaIuDdxJUoMZk0PfC9SgIi+QNM0kD3uLScIBLG4Gvzefi4qIuJJMb+y
      DDnEjOkE3Vk0E2WDRvQtG4bedGfulZBF8pECRPQFknCwS3W9fcUOtNWIiENCPeBixSy1OgqE
      RfQFk0PD+Kv/9rdwvXgwYf95uZ4p2cG1m5d2/qJgsWPHsrDyaAEEZOfY5v8NrRYpQER/MDI0
      BNsWsKqFHzOUcDD21Pmu2yyurEYmUER/QAE4bvsA2F6qeEYKENEXVCoVaKbb+cAeiRQgoi/4
      7NY9GM7Bi2ukABF9wQvPTmEs16EEyh72dI8UIKIvGBos4M/fvQnQ1q2QWuD+7KqsP40UIKJP
      IIQgl0l5jsxOdJUxSiIFiOgjzowNI9FmX3LTojC0WvcNRiNARD+RyWTwH37vVUgk2Ayq2DH8
      7d98iFqlTbCAgyJSgIg+ghCCN1+5iTevDiIlu4i5NYhua3W4zZqA//03H6G4utFFg5ECRPQZ
      hBD8yfffwvXhna1Uibhrwls2BPyfH32B1fmV9o1FJlBEPzIyPITzFy6CAHBJM0vUrwSGI+Pv
      /uE25u/Pt20rUoCIvuTXX3oOmVS8uQPMDn4lsFwJ//iTu7j71b3ANqjrRgoQ0Z+cGR/Ff/zD
      34CA1vQIvxI0IOG9X8xh+rNvdrVBaaQAEX2MoiiQxM4BL5dI+PmHS7j18bT3Wq1cQb1mRAoQ
      0b9MXbqAv/zecy1mEBAcBaZEwgefrOCrj5pKsLm2CZIrROsBIvoXQgjefePXsLC2jX/6fLFj
      PjQlIn756SpclyKfjyGezUYjQER/I0kS/vQHb2I4+XiZY7s0CEoE/Ovna3hwZz6aBEecDDLp
      NM4MZXa9HpYQR4mAuXUHRrUKYpomje2x4FBExHFhc3ML84tL2Niu4r+/dxsVqyn8/tGAELLz
      GsW1p+LRCBBxMojFFNS0Ks6NDeC//Kc/wL9/92moMB9vlLcDUwiF1nH55lQ0AkScLCilIIRg
      bm4ealzFf/3r9/DVfBmU8r0/MJR28fbvvxaNABEni3K5AgBQ4yoGBwbwn//yd5CL7Y4WNwNo
      UV2giBNGLpcFACQSCbiui1Qqhatnsrg9s4ahXArphIJsMoZyvZkyHZlAESce27ZRLBZBKYUo
      NrNHNzY3MbuxHilAxMnHdV1omgZdb+4RIIoiJEmC67qRCRRx8hEEAYqieApAKUV6Z5f5aBIc
      cSpQFAWK8risiuM4kCQpUoCI0wEhBIlEAkDTJLIsC5TSSAEiTgeEkJZRoLGz5WqkABGnBkII
      4vE4CCGwLAumaUaT4IjTAyEEqqpCEARUq1WUy+VoBIg4XTBTKJvNQhTFSAEiTh+EEEiShEwm
      EylAxOmFEBLNASJOJ4ZhoF6vRyNAxOlEVdVoDhBxehEEAel0OlKAiNNLtFF2xKknUoCIU02k
      ABGnmkgBIk41kQJEnGoiBYg41UQKEHGqiRQg4lQTKcAxwHVdLC4udre5c8SBEinAEWOaJmZm
      ZzGz/FgB2HK9iMMnqgt0zKjX6/irv/8RfvDWd5HL5SCK4lFf0okmUoBjiG3baDQa+B//869x
      dnISU1emMDE2dtSXdSKJFOAYU61W8WBmBslMGlcuPHXUl3MiiRSgD1hcXsbtuYd4eeoaBgqF
      o76cE0U0Ce4D1ra3kJgcw8eP7sEwjKO+nBNFpAB9wGAmh8ryGs6lC4jH40d9OSeKyATqAyil
      sCwL0fd08EQjQB9ACImE/5CIFCDiVBMpQMSpJlKAiFNNpAARp5pIASJONZECRJxqIgWIONVE
      ChBxqvn/C56b4zkn6IMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Population by State 2010' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Population by county 2000' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Population by county 2010' width='192'>
      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
    </thumbnail>
    <thumbnail height='24' name='Sheet 11' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADUUlEQVRYhe2WTUhyWRzGf6PmIgxTSELEgkKKog+yFiFhRUESGdWqaBEELWoVtWgTQZsW
      ve2DIAiiVYhi2aLIoIWQtoiyD7KkIEr6hq4acp1FEIgDzTBT94XxB3dx/8+5//uch3M4549k
      Mpnkf4xMagNSkwlAagNSkwlAagNSkwlAagNSkwlAagNSkwlAagNSkwlAagNS86MBJBIJpqam
      sNlsRCKRNH1hYYHGxkYODg5S6pFIBJvNhtlsTnkGBwcRBAFRFFlaWqKpqYm6ujr6+/u5uLgA
      QBRFNjc3aWtrw2w209XVhc/n++yt+N4ppxIIBBAEgZKSkjQtHA5zcnJCbW1tmqbT6VhfX0+p
      bWxs8Pj4SHZ2Nru7uxweHrK6uoparcbr9TI7O8vMzAx3d3c4HA7m5+cxGAwEg0Hm5ubQ6/UY
      jcafWwGvr684nU4GBgZQKpUp2vv7O8vLy/T19ZGTk/Nlr2g0SiAQoKWlBYCzszNaW1vRaDTI
      ZDKsViuFhYXEYjGur6+pqqr6mKxMRnl5ORaLhefnZ+AHt4Db7aaurg6j0Zim+Xw+1Go1lZWV
      f6vX3t4eWq2WvLw8ACwWCx6Ph/v7e0RRxOv1olAo0Gq1VFRUcHR0RCgUQhRFDg8PCYfDFBUV
      AT8QQCKR4NevX5jNZjo7O9P0xcVFAEZGRpDJvrYTCATw+/0MDQ191gRBIDc3F7lcDoBCoeDh
      4YF4PE4sFkOlUpGVlQWAXC5HEAReXl4+xv7rGX7B6ekpbreblZWVlPrm5iYTExM4HA5ubm5S
      NKfTid/vT+uVSCTY2tqio6MjJSyPx4Pdbkej0QDQ0NDAzs4OoVAIv9+P1Wr9XHmlpaWYTCaC
      wSB6vf77AygrK2N7e/vz/e3tjenpaUZHR9HpdHR3d6eMn56exm63/2Wv8/NzlEolJpMppV5Q
      UMDa2hqFhYWoVCqCwSCXl5fk5uZSXFyMy+WivLyc/Px8rq6u2N/fp6amBvjhU+CfEI1GGR8f
      p7e3l/r6ekRRxOVy0dzcnLZVenp6mJ+fp729nVgshtFoZGxsDKPRiMFg4Pb2lv7+fp6ensjL
      y2N4eJjq6uqPj5O/KcfHx8nJyclkPB7/1v/8tjfBg4MD+vr60o7M/5o/AaS1J6YpcN00AAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
      dUTXFx+HPwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
