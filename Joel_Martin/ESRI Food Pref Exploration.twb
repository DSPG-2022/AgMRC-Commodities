<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='State' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <aliases>
          <alias key='1' value='State' />
          <alias key='2' value='County' />
        </aliases>
        <members>
          <member alias='State' value='1' />
          <member alias='County' value='2' />
        </members>
      </column>
    </datasource>
    <datasource caption='esri_food_prefs' inline='true' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='esri_food_prefs' name='textscan.14iq3n01445tmx113ac6h0os973b'>
            <connection class='textscan' directory='C:/Users/joelm/Documents/GitHub/AgMRC-Commodities/Joel_Martin/Data' filename='esri_food_prefs.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_county_2000.csv' table='[US_Population_by_county_2000#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='GEOID' ordinal='0' />
            <column datatype='string' name='NAME' ordinal='1' />
            <column datatype='string' name='variable' ordinal='2' />
            <column datatype='integer' name='value' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='esri_food_prefs.csv' table='[esri_food_prefs#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='FIPS' ordinal='0' />
              <column datatype='string' name='stateFIPS' ordinal='1' />
              <column datatype='string' name='countyFIPS' ordinal='2' />
              <column datatype='integer' name='tractFIPS' ordinal='3' />
              <column datatype='real' name='longitude' ordinal='4' />
              <column datatype='real' name='latitude' ordinal='5' />
              <column datatype='real' name='avgFoodExpenditure_2000' ordinal='6' />
              <column datatype='real' name='avgFoodHomeExpenditure_2000' ordinal='7' />
              <column datatype='real' name='avgMeatHomeExpenditure_2000' ordinal='8' />
              <column datatype='real' name='avgFruitsVegetablesHomeExpenditure_2000' ordinal='9' />
              <column datatype='real' name='avgFoodAwayExpenditure_2000' ordinal='10' />
              <column datatype='real' name='avgFoodExpenditure_2010' ordinal='11' />
              <column datatype='real' name='avgFoodHomeExpenditure_2010' ordinal='12' />
              <column datatype='real' name='avgMeatHomeExpenditure_2010' ordinal='13' />
              <column datatype='real' name='avgFruitsVegetablesHomeExpenditure_2010' ordinal='14' />
              <column datatype='real' name='avgFoodAwayExpenditure_2010' ordinal='15' />
              <column datatype='real' name='avgBakeryCerealHomeExpenditure_2000' ordinal='16' />
              <column datatype='real' name='avgFlourHomeExpenditure_2000' ordinal='17' />
              <column datatype='real' name='avgRiceHomeExpenditure_2000' ordinal='18' />
              <column datatype='real' name='avgPastaCornMealHomeExpenditure_2000' ordinal='19' />
              <column datatype='real' name='avgBreadHomeExpenditure_2000' ordinal='20' />
              <column datatype='real' name='avgBeefHomeExpenditure_2000' ordinal='21' />
              <column datatype='real' name='avgPorkHomeExpenditure_2000' ordinal='22' />
              <column datatype='real' name='avgPoultryHomeExpenditure_2000' ordinal='23' />
              <column datatype='real' name='avgSeafoodHomeExpenditure_2000' ordinal='24' />
              <column datatype='real' name='avgEggsHomeExpenditure_2000' ordinal='25' />
              <column datatype='real' name='avgDairyHomeExpenditure_2000' ordinal='26' />
              <column datatype='real' name='avgLunchAwayHomeExpenditure_2000' ordinal='27' />
              <column datatype='real' name='avgDinnerAwayHomeExpenditure_2000' ordinal='28' />
              <column datatype='real' name='avgBreakfastAwayHomeExpenditure_2000' ordinal='29' />
              <column datatype='real' name='avgAlcoholicBeverageExpenditure_2000' ordinal='30' />
              <column datatype='real' name='avgBakeryCerealHomeExpenditure_2010' ordinal='31' />
              <column datatype='real' name='avgFlourHomeExpenditure_2010' ordinal='32' />
              <column datatype='real' name='avgRiceHomeExpenditure_2010' ordinal='33' />
              <column datatype='real' name='avgPastaCornMealHomeExpenditure_2010' ordinal='34' />
              <column datatype='real' name='avgBreadHomeExpenditure_2010' ordinal='35' />
              <column datatype='real' name='avgBeefHomeExpenditure_2010' ordinal='36' />
              <column datatype='real' name='avgPorkHomeExpenditure_2010' ordinal='37' />
              <column datatype='real' name='avgPoultryHomeExpenditure_2010' ordinal='38' />
              <column datatype='real' name='avgSeafoodHomeExpenditure_2010' ordinal='39' />
              <column datatype='real' name='avgEggsHomeExpenditure_2010' ordinal='40' />
              <column datatype='real' name='avgDairyHomeExpenditure_2010' ordinal='41' />
              <column datatype='real' name='avgLunchAwayHomeExpenditure_2010' ordinal='42' />
              <column datatype='real' name='avgDinnerAwayHomeExpenditure_2010' ordinal='43' />
              <column datatype='real' name='avgBreakfastAwayHomeExpenditure_2010' ordinal='44' />
              <column datatype='real' name='avgAlcoholicBeverageExpenditure_2010' ordinal='45' />
            </columns>
          </relation>
          <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_county_2000.csv' table='[US_Population_by_county_2000#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='GEOID' ordinal='0' />
              <column datatype='string' name='NAME' ordinal='1' />
              <column datatype='string' name='variable' ordinal='2' />
              <column datatype='integer' name='value' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_county_2010.csv' table='[US_Population_by_county_2010#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='GEOID' ordinal='0' />
              <column datatype='string' name='NAME' ordinal='1' />
              <column datatype='string' name='variable' ordinal='2' />
              <column datatype='integer' name='value' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_state_2000.csv' table='[US_Population_by_state_2000#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='GEOID' ordinal='0' />
              <column datatype='string' name='NAME' ordinal='1' />
              <column datatype='string' name='variable' ordinal='2' />
              <column datatype='integer' name='value' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_state_2010.csv' table='[US_Population_by_state_2010#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='GEOID' ordinal='0' />
              <column datatype='string' name='NAME' ordinal='1' />
              <column datatype='string' name='variable' ordinal='2' />
              <column datatype='integer' name='value' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[FIPS]' value='[esri_food_prefs.csv].[FIPS]' />
          <map key='[GEOID (US_Population_by_county_2010.csv)]' value='[US_Population_by_county_2010.csv].[GEOID]' />
          <map key='[GEOID (US_Population_by_state_2000.csv)]' value='[US_Population_by_state_2000.csv].[GEOID]' />
          <map key='[GEOID (US_Population_by_state_2010.csv)]' value='[US_Population_by_state_2010.csv].[GEOID]' />
          <map key='[GEOID]' value='[US_Population_by_county_2000.csv].[GEOID]' />
          <map key='[NAME (US_Population_by_county_2010.csv)]' value='[US_Population_by_county_2010.csv].[NAME]' />
          <map key='[NAME (US_Population_by_state_2000.csv)]' value='[US_Population_by_state_2000.csv].[NAME]' />
          <map key='[NAME (US_Population_by_state_2010.csv)]' value='[US_Population_by_state_2010.csv].[NAME]' />
          <map key='[NAME]' value='[US_Population_by_county_2000.csv].[NAME]' />
          <map key='[avgAlcoholicBeverageExpenditure_2000]' value='[esri_food_prefs.csv].[avgAlcoholicBeverageExpenditure_2000]' />
          <map key='[avgAlcoholicBeverageExpenditure_2010]' value='[esri_food_prefs.csv].[avgAlcoholicBeverageExpenditure_2010]' />
          <map key='[avgBakeryCerealHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgBakeryCerealHomeExpenditure_2000]' />
          <map key='[avgBakeryCerealHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgBakeryCerealHomeExpenditure_2010]' />
          <map key='[avgBeefHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgBeefHomeExpenditure_2000]' />
          <map key='[avgBeefHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgBeefHomeExpenditure_2010]' />
          <map key='[avgBreadHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgBreadHomeExpenditure_2000]' />
          <map key='[avgBreadHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgBreadHomeExpenditure_2010]' />
          <map key='[avgBreakfastAwayHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgBreakfastAwayHomeExpenditure_2000]' />
          <map key='[avgBreakfastAwayHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgBreakfastAwayHomeExpenditure_2010]' />
          <map key='[avgDairyHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgDairyHomeExpenditure_2000]' />
          <map key='[avgDairyHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgDairyHomeExpenditure_2010]' />
          <map key='[avgDinnerAwayHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgDinnerAwayHomeExpenditure_2000]' />
          <map key='[avgDinnerAwayHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgDinnerAwayHomeExpenditure_2010]' />
          <map key='[avgEggsHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgEggsHomeExpenditure_2000]' />
          <map key='[avgEggsHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgEggsHomeExpenditure_2010]' />
          <map key='[avgFlourHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgFlourHomeExpenditure_2000]' />
          <map key='[avgFlourHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgFlourHomeExpenditure_2010]' />
          <map key='[avgFoodAwayExpenditure_2000]' value='[esri_food_prefs.csv].[avgFoodAwayExpenditure_2000]' />
          <map key='[avgFoodAwayExpenditure_2010]' value='[esri_food_prefs.csv].[avgFoodAwayExpenditure_2010]' />
          <map key='[avgFoodExpenditure_2000]' value='[esri_food_prefs.csv].[avgFoodExpenditure_2000]' />
          <map key='[avgFoodExpenditure_2010]' value='[esri_food_prefs.csv].[avgFoodExpenditure_2010]' />
          <map key='[avgFoodHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgFoodHomeExpenditure_2000]' />
          <map key='[avgFoodHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgFoodHomeExpenditure_2010]' />
          <map key='[avgFruitsVegetablesHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgFruitsVegetablesHomeExpenditure_2000]' />
          <map key='[avgFruitsVegetablesHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgFruitsVegetablesHomeExpenditure_2010]' />
          <map key='[avgLunchAwayHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgLunchAwayHomeExpenditure_2000]' />
          <map key='[avgLunchAwayHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgLunchAwayHomeExpenditure_2010]' />
          <map key='[avgMeatHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgMeatHomeExpenditure_2000]' />
          <map key='[avgMeatHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgMeatHomeExpenditure_2010]' />
          <map key='[avgPastaCornMealHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgPastaCornMealHomeExpenditure_2000]' />
          <map key='[avgPastaCornMealHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgPastaCornMealHomeExpenditure_2010]' />
          <map key='[avgPorkHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgPorkHomeExpenditure_2000]' />
          <map key='[avgPorkHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgPorkHomeExpenditure_2010]' />
          <map key='[avgPoultryHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgPoultryHomeExpenditure_2000]' />
          <map key='[avgPoultryHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgPoultryHomeExpenditure_2010]' />
          <map key='[avgRiceHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgRiceHomeExpenditure_2000]' />
          <map key='[avgRiceHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgRiceHomeExpenditure_2010]' />
          <map key='[avgSeafoodHomeExpenditure_2000]' value='[esri_food_prefs.csv].[avgSeafoodHomeExpenditure_2000]' />
          <map key='[avgSeafoodHomeExpenditure_2010]' value='[esri_food_prefs.csv].[avgSeafoodHomeExpenditure_2010]' />
          <map key='[countyFIPS]' value='[esri_food_prefs.csv].[countyFIPS]' />
          <map key='[latitude]' value='[esri_food_prefs.csv].[latitude]' />
          <map key='[longitude]' value='[esri_food_prefs.csv].[longitude]' />
          <map key='[stateFIPS]' value='[esri_food_prefs.csv].[stateFIPS]' />
          <map key='[tractFIPS]' value='[esri_food_prefs.csv].[tractFIPS]' />
          <map key='[value (US_Population_by_county_2010.csv)]' value='[US_Population_by_county_2010.csv].[value]' />
          <map key='[value (US_Population_by_state_2000.csv)]' value='[US_Population_by_state_2000.csv].[value]' />
          <map key='[value (US_Population_by_state_2010.csv)]' value='[US_Population_by_state_2010.csv].[value]' />
          <map key='[value]' value='[US_Population_by_county_2000.csv].[value]' />
          <map key='[variable (US_Population_by_county_2010.csv)]' value='[US_Population_by_county_2010.csv].[variable]' />
          <map key='[variable (US_Population_by_state_2000.csv)]' value='[US_Population_by_state_2000.csv].[variable]' />
          <map key='[variable (US_Population_by_state_2010.csv)]' value='[US_Population_by_state_2010.csv].[variable]' />
          <map key='[variable]' value='[US_Population_by_county_2000.csv].[variable]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US_Population_by_county_2000.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US_Population_by_county_2010.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US_Population_by_state_2000.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US_Population_by_state_2010.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stateFIPS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stateFIPS]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>stateFIPS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countyFIPS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countyFIPS]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>countyFIPS</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tractFIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tractFIPS]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>tractFIPS</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFoodExpenditure_2000</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFoodHomeExpenditure_2000</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgMeatHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgMeatHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgMeatHomeExpenditure_2000</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFruitsVegetablesHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFruitsVegetablesHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFruitsVegetablesHomeExpenditure_2000</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodAwayExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodAwayExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFoodAwayExpenditure_2000</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFoodExpenditure_2010</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFoodHomeExpenditure_2010</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgMeatHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgMeatHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgMeatHomeExpenditure_2010</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFruitsVegetablesHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFruitsVegetablesHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFruitsVegetablesHomeExpenditure_2010</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFoodAwayExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFoodAwayExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFoodAwayExpenditure_2010</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBakeryCerealHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBakeryCerealHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgBakeryCerealHomeExpenditure_2000</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFlourHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFlourHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFlourHomeExpenditure_2000</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgRiceHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgRiceHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgRiceHomeExpenditure_2000</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPastaCornMealHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPastaCornMealHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgPastaCornMealHomeExpenditure_2000</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBreadHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBreadHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgBreadHomeExpenditure_2000</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBeefHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBeefHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgBeefHomeExpenditure_2000</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPorkHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPorkHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgPorkHomeExpenditure_2000</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPoultryHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPoultryHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgPoultryHomeExpenditure_2000</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgSeafoodHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgSeafoodHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgSeafoodHomeExpenditure_2000</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgEggsHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgEggsHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgEggsHomeExpenditure_2000</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgDairyHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgDairyHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgDairyHomeExpenditure_2000</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgLunchAwayHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgLunchAwayHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgLunchAwayHomeExpenditure_2000</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgDinnerAwayHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgDinnerAwayHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgDinnerAwayHomeExpenditure_2000</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBreakfastAwayHomeExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBreakfastAwayHomeExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgBreakfastAwayHomeExpenditure_2000</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgAlcoholicBeverageExpenditure_2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgAlcoholicBeverageExpenditure_2000]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgAlcoholicBeverageExpenditure_2000</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBakeryCerealHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBakeryCerealHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgBakeryCerealHomeExpenditure_2010</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgFlourHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgFlourHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgFlourHomeExpenditure_2010</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgRiceHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgRiceHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgRiceHomeExpenditure_2010</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPastaCornMealHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPastaCornMealHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgPastaCornMealHomeExpenditure_2010</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBreadHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBreadHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgBreadHomeExpenditure_2010</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBeefHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBeefHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgBeefHomeExpenditure_2010</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPorkHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPorkHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgPorkHomeExpenditure_2010</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgPoultryHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgPoultryHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgPoultryHomeExpenditure_2010</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgSeafoodHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgSeafoodHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgSeafoodHomeExpenditure_2010</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgEggsHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgEggsHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgEggsHomeExpenditure_2010</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgDairyHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgDairyHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgDairyHomeExpenditure_2010</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgLunchAwayHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgLunchAwayHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgLunchAwayHomeExpenditure_2010</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgDinnerAwayHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgDinnerAwayHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgDinnerAwayHomeExpenditure_2010</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgBreakfastAwayHomeExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgBreakfastAwayHomeExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgBreakfastAwayHomeExpenditure_2010</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgAlcoholicBeverageExpenditure_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgAlcoholicBeverageExpenditure_2010]</local-name>
            <parent-name>[esri_food_prefs.csv]</parent-name>
            <remote-alias>avgAlcoholicBeverageExpenditure_2010</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEOID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GEOID]</local-name>
            <parent-name>[US_Population_by_county_2000.csv]</parent-name>
            <remote-alias>GEOID</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[US_Population_by_county_2000.csv_050750D02C90467D93235CCDB1AD1281]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME]</local-name>
            <parent-name>[US_Population_by_county_2000.csv]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[US_Population_by_county_2000.csv_050750D02C90467D93235CCDB1AD1281]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[US_Population_by_county_2000.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[US_Population_by_county_2000.csv_050750D02C90467D93235CCDB1AD1281]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[US_Population_by_county_2000.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[US_Population_by_county_2000.csv_050750D02C90467D93235CCDB1AD1281]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEOID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GEOID (US_Population_by_county_2010.csv)]</local-name>
            <parent-name>[US_Population_by_county_2010.csv]</parent-name>
            <remote-alias>GEOID</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[US_Population_by_county_2010.csv_06A10CA8C9F1465B96994EA45F37F7C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME (US_Population_by_county_2010.csv)]</local-name>
            <parent-name>[US_Population_by_county_2010.csv]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[US_Population_by_county_2010.csv_06A10CA8C9F1465B96994EA45F37F7C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable (US_Population_by_county_2010.csv)]</local-name>
            <parent-name>[US_Population_by_county_2010.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[US_Population_by_county_2010.csv_06A10CA8C9F1465B96994EA45F37F7C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value (US_Population_by_county_2010.csv)]</local-name>
            <parent-name>[US_Population_by_county_2010.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[US_Population_by_county_2010.csv_06A10CA8C9F1465B96994EA45F37F7C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEOID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GEOID (US_Population_by_state_2000.csv)]</local-name>
            <parent-name>[US_Population_by_state_2000.csv]</parent-name>
            <remote-alias>GEOID</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[US_Population_by_state_2000.csv_72C4D7473F0E4636BC485B9FFAD2AA41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME (US_Population_by_state_2000.csv)]</local-name>
            <parent-name>[US_Population_by_state_2000.csv]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[US_Population_by_state_2000.csv_72C4D7473F0E4636BC485B9FFAD2AA41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable (US_Population_by_state_2000.csv)]</local-name>
            <parent-name>[US_Population_by_state_2000.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[US_Population_by_state_2000.csv_72C4D7473F0E4636BC485B9FFAD2AA41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value (US_Population_by_state_2000.csv)]</local-name>
            <parent-name>[US_Population_by_state_2000.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[US_Population_by_state_2000.csv_72C4D7473F0E4636BC485B9FFAD2AA41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEOID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GEOID (US_Population_by_state_2010.csv)]</local-name>
            <parent-name>[US_Population_by_state_2010.csv]</parent-name>
            <remote-alias>GEOID</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[US_Population_by_state_2010.csv_5E79AD481AC84178A9AEC4F1E312D180]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME (US_Population_by_state_2010.csv)]</local-name>
            <parent-name>[US_Population_by_state_2010.csv]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[US_Population_by_state_2010.csv_5E79AD481AC84178A9AEC4F1E312D180]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable (US_Population_by_state_2010.csv)]</local-name>
            <parent-name>[US_Population_by_state_2010.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[US_Population_by_state_2010.csv_5E79AD481AC84178A9AEC4F1E312D180]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value (US_Population_by_state_2010.csv)]</local-name>
            <parent-name>[US_Population_by_state_2010.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[US_Population_by_state_2010.csv_5E79AD481AC84178A9AEC4F1E312D180]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]&quot;' value='2000' />
          <alias key='&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]&quot;' value='2010' />
        </aliases>
      </column>
      <column caption='Map State or County Level' datatype='integer' name='[Calculation_1192890997300523009]' role='dimension' semantic-role='[State].[Name]' type='ordinal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column caption='CountyLevel' datatype='string' name='[Calculation_1192890997300772866]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when 1 then Null&#13;&#10;when 2 then [countyFIPS]&#13;&#10;END' />
      </column>
      <column caption='Fips' datatype='string' default-role='measure' default-type='quantitative' name='[FIPS]' role='dimension' type='nominal' />
      <column caption='GEOID (US Population by county 2010.csv)' datatype='string' name='[GEOID (US_Population_by_county_2010.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='GEOID (US Population by state 2000.csv)' datatype='string' name='[GEOID (US_Population_by_state_2000.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='GEOID (US Population by state 2010.csv)' datatype='string' name='[GEOID (US_Population_by_state_2010.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Geoid' datatype='string' name='[GEOID]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='NAME (US Population by county 2010.csv)' datatype='string' name='[NAME (US_Population_by_county_2010.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='NAME (US Population by state 2000.csv)' datatype='string' name='[NAME (US_Population_by_state_2000.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='NAME (US Population by state 2010.csv)' datatype='string' name='[NAME (US_Population_by_state_2010.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='US_Population_by_county_2000.csv' datatype='table' name='[__tableau_internal_object_id__].[US_Population_by_county_2000.csv_050750D02C90467D93235CCDB1AD1281]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='US_Population_by_county_2010.csv' datatype='table' name='[__tableau_internal_object_id__].[US_Population_by_county_2010.csv_06A10CA8C9F1465B96994EA45F37F7C7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='US_Population_by_state_2000.csv' datatype='table' name='[__tableau_internal_object_id__].[US_Population_by_state_2000.csv_72C4D7473F0E4636BC485B9FFAD2AA41]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='US_Population_by_state_2010.csv' datatype='table' name='[__tableau_internal_object_id__].[US_Population_by_state_2010.csv_5E79AD481AC84178A9AEC4F1E312D180]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='esri_food_prefs.csv' datatype='table' name='[__tableau_internal_object_id__].[esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31]' role='measure' type='quantitative' />
      <column caption='avgAlcoholicBeverageExpenditure 2000' datatype='real' name='[avgAlcoholicBeverageExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgAlcoholicBeverageExpenditure 2010' datatype='real' name='[avgAlcoholicBeverageExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgBakeryCerealHomeExpenditure 2000' datatype='real' name='[avgBakeryCerealHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgBakeryCerealHomeExpenditure 2010' datatype='real' name='[avgBakeryCerealHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgBeefHomeExpenditure 2000' datatype='real' name='[avgBeefHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgBeefHomeExpenditure 2010' datatype='real' name='[avgBeefHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgBreadHomeExpenditure 2000' datatype='real' name='[avgBreadHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgBreadHomeExpenditure 2010' datatype='real' name='[avgBreadHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgBreakfastAwayHomeExpenditure 2000' datatype='real' name='[avgBreakfastAwayHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgBreakfastAwayHomeExpenditure 2010' datatype='real' name='[avgBreakfastAwayHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgDairyHomeExpenditure 2000' datatype='real' name='[avgDairyHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgDairyHomeExpenditure 2010' datatype='real' name='[avgDairyHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgDinnerAwayHomeExpenditure 2000' datatype='real' name='[avgDinnerAwayHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgDinnerAwayHomeExpenditure 2010' datatype='real' name='[avgDinnerAwayHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgEggsHomeExpenditure 2000' datatype='real' name='[avgEggsHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgEggsHomeExpenditure 2010' datatype='real' name='[avgEggsHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgFlourHomeExpenditure 2000' datatype='real' name='[avgFlourHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgFlourHomeExpenditure 2010' datatype='real' name='[avgFlourHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgFoodAwayExpenditure 2000' datatype='real' name='[avgFoodAwayExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgFoodAwayExpenditure 2010' datatype='real' name='[avgFoodAwayExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgFoodExpenditure 2000' datatype='real' name='[avgFoodExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgFoodExpenditure 2010' datatype='real' name='[avgFoodExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgFoodHomeExpenditure 2000' datatype='real' name='[avgFoodHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgFoodHomeExpenditure 2010' datatype='real' name='[avgFoodHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgFruitsVegetablesHomeExpenditure 2000' datatype='real' name='[avgFruitsVegetablesHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgFruitsVegetablesHomeExpenditure 2010' datatype='real' name='[avgFruitsVegetablesHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgLunchAwayHomeExpenditure 2000' datatype='real' name='[avgLunchAwayHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgLunchAwayHomeExpenditure 2010' datatype='real' name='[avgLunchAwayHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgMeatHomeExpenditure 2000' datatype='real' name='[avgMeatHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgMeatHomeExpenditure 2010' datatype='real' name='[avgMeatHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgPastaCornMealHomeExpenditure 2000' datatype='real' name='[avgPastaCornMealHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgPastaCornMealHomeExpenditure 2010' datatype='real' name='[avgPastaCornMealHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgPorkHomeExpenditure 2000' datatype='real' name='[avgPorkHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgPorkHomeExpenditure 2010' datatype='real' name='[avgPorkHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgPoultryHomeExpenditure 2000' datatype='real' name='[avgPoultryHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgPoultryHomeExpenditure 2010' datatype='real' name='[avgPoultryHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgRiceHomeExpenditure 2000' datatype='real' name='[avgRiceHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgRiceHomeExpenditure 2010' datatype='real' name='[avgRiceHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='avgSeafoodHomeExpenditure 2000' datatype='real' name='[avgSeafoodHomeExpenditure_2000]' role='measure' type='quantitative' />
      <column caption='avgSeafoodHomeExpenditure 2010' datatype='real' name='[avgSeafoodHomeExpenditure_2010]' role='measure' type='quantitative' />
      <column caption='County FIPS' datatype='string' name='[countyFIPS]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <semantic-values semantic-role='[County].[Name]'>
          <semantic-value key='&quot;51515&quot;' value='&quot;Bedford&quot;' />
          <semantic-value key='&quot;51560&quot;' value='&quot;Oakland&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;46113&quot;' value='39.645545200000001' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;46113&quot;' value='-86.3049611' />
        </semantic-values>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='State FIPS' datatype='string' name='[stateFIPS]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;01&quot;' value='&quot;Alabama&quot;' />
          <semantic-value key='&quot;04&quot;' value='&quot;Arizona&quot;' />
          <semantic-value key='&quot;05&quot;' value='&quot;Arkansas&quot;' />
          <semantic-value key='&quot;06&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;08&quot;' value='&quot;Colorado&quot;' />
          <semantic-value key='&quot;09&quot;' value='&quot;Connecticut&quot;' />
          <semantic-value key='&quot;10&quot;' value='&quot;Delaware&quot;' />
          <semantic-value key='&quot;11&quot;' value='&quot;District of Columbia&quot;' />
          <semantic-value key='&quot;12&quot;' value='&quot;Florida&quot;' />
          <semantic-value key='&quot;13&quot;' value='&quot;Georgia&quot;' />
          <semantic-value key='&quot;16&quot;' value='&quot;Idaho&quot;' />
          <semantic-value key='&quot;17&quot;' value='&quot;Illinois&quot;' />
          <semantic-value key='&quot;18&quot;' value='&quot;Indiana&quot;' />
          <semantic-value key='&quot;19&quot;' value='&quot;Iowa&quot;' />
          <semantic-value key='&quot;20&quot;' value='&quot;Kansas&quot;' />
          <semantic-value key='&quot;21&quot;' value='&quot;Kentucky&quot;' />
          <semantic-value key='&quot;22&quot;' value='&quot;Louisiana&quot;' />
          <semantic-value key='&quot;23&quot;' value='&quot;Maine&quot;' />
          <semantic-value key='&quot;24&quot;' value='&quot;Maryland&quot;' />
          <semantic-value key='&quot;25&quot;' value='&quot;Massachusetts&quot;' />
          <semantic-value key='&quot;26&quot;' value='&quot;Michigan&quot;' />
          <semantic-value key='&quot;27&quot;' value='&quot;Minnesota&quot;' />
          <semantic-value key='&quot;28&quot;' value='&quot;Mississippi&quot;' />
          <semantic-value key='&quot;29&quot;' value='&quot;Missouri&quot;' />
          <semantic-value key='&quot;30&quot;' value='&quot;Montana&quot;' />
          <semantic-value key='&quot;31&quot;' value='&quot;Nebraska&quot;' />
          <semantic-value key='&quot;32&quot;' value='&quot;Nevada&quot;' />
          <semantic-value key='&quot;33&quot;' value='&quot;New Hampshire&quot;' />
          <semantic-value key='&quot;34&quot;' value='&quot;New Jersey&quot;' />
          <semantic-value key='&quot;35&quot;' value='&quot;New Mexico&quot;' />
          <semantic-value key='&quot;36&quot;' value='&quot;New York&quot;' />
          <semantic-value key='&quot;37&quot;' value='&quot;North Carolina&quot;' />
          <semantic-value key='&quot;38&quot;' value='&quot;North Dakota&quot;' />
          <semantic-value key='&quot;39&quot;' value='&quot;Ohio&quot;' />
          <semantic-value key='&quot;40&quot;' value='&quot;Oklahoma&quot;' />
          <semantic-value key='&quot;41&quot;' value='&quot;Oregon&quot;' />
          <semantic-value key='&quot;42&quot;' value='&quot;Pennsylvania&quot;' />
          <semantic-value key='&quot;44&quot;' value='&quot;Rhode Island&quot;' />
          <semantic-value key='&quot;45&quot;' value='&quot;South Carolina&quot;' />
          <semantic-value key='&quot;46&quot;' value='&quot;South Dakota&quot;' />
          <semantic-value key='&quot;47&quot;' value='&quot;Tennessee&quot;' />
          <semantic-value key='&quot;48&quot;' value='&quot;Texas&quot;' />
          <semantic-value key='&quot;49&quot;' value='&quot;Utah&quot;' />
          <semantic-value key='&quot;50&quot;' value='&quot;Vermont&quot;' />
          <semantic-value key='&quot;51&quot;' value='&quot;Virginia&quot;' />
          <semantic-value key='&quot;53&quot;' value='&quot;Washington&quot;' />
          <semantic-value key='&quot;54&quot;' value='&quot;West Virginia&quot;' />
          <semantic-value key='&quot;55&quot;' value='&quot;Wisconsin&quot;' />
          <semantic-value key='&quot;56&quot;' value='&quot;Wyoming&quot;' />
        </semantic-values>
      </column>
      <column caption='Tract FIPS' datatype='integer' name='[tractFIPS]' role='measure' type='quantitative' />
      <column caption='value (US Population by state 2000.csv)' datatype='integer' name='[value (US_Population_by_state_2000.csv)]' role='measure' type='quantitative' />
      <column caption='value (US Population by state 2010.csv)' datatype='integer' name='[value (US_Population_by_state_2010.csv)]' role='measure' type='quantitative' />
      <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative' />
      <column caption='variable (US Population by county 2010.csv)' datatype='string' name='[variable (US_Population_by_county_2010.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='variable (US Population by state 2000.csv)' datatype='string' name='[variable (US_Population_by_state_2000.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='variable (US Population by state 2010.csv)' datatype='string' name='[variable (US_Population_by_state_2010.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
      <column-instance column='[stateFIPS]' derivation='Attribute' name='[attr:stateFIPS:nk]' pivot='key' type='nominal' />
      <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgAlcoholicBeverageExpenditure_2000]' derivation='Sum' name='[sum:avgAlcoholicBeverageExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgAlcoholicBeverageExpenditure_2010]' derivation='Sum' name='[sum:avgAlcoholicBeverageExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBakeryCerealHomeExpenditure_2000]' derivation='Sum' name='[sum:avgBakeryCerealHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBakeryCerealHomeExpenditure_2010]' derivation='Sum' name='[sum:avgBakeryCerealHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBeefHomeExpenditure_2000]' derivation='Sum' name='[sum:avgBeefHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBeefHomeExpenditure_2010]' derivation='Sum' name='[sum:avgBeefHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBreadHomeExpenditure_2000]' derivation='Sum' name='[sum:avgBreadHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBreadHomeExpenditure_2010]' derivation='Sum' name='[sum:avgBreadHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBreakfastAwayHomeExpenditure_2000]' derivation='Sum' name='[sum:avgBreakfastAwayHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgBreakfastAwayHomeExpenditure_2010]' derivation='Sum' name='[sum:avgBreakfastAwayHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgDairyHomeExpenditure_2000]' derivation='Sum' name='[sum:avgDairyHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgDairyHomeExpenditure_2010]' derivation='Sum' name='[sum:avgDairyHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgDinnerAwayHomeExpenditure_2000]' derivation='Sum' name='[sum:avgDinnerAwayHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgDinnerAwayHomeExpenditure_2010]' derivation='Sum' name='[sum:avgDinnerAwayHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgEggsHomeExpenditure_2000]' derivation='Sum' name='[sum:avgEggsHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgPoultryHomeExpenditure_2000]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avgPoultryHomeExpenditure_2010]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tractFIPS]' derivation='Sum' name='[sum:tractFIPS:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='State FIPS, County FIPS'>
          <field>[stateFIPS]</field>
          <field>[countyFIPS]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.969415' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0305851' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgAlcoholicBeverageExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[attr:stateFIPS:nk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:latitude:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBeefHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBakeryCerealHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[avg:longitude:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgDairyHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgDinnerAwayHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:countyFIPS:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBreakfastAwayHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:tractFIPS:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBreadHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBreadHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgDairyHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgDinnerAwayHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgEggsHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBakeryCerealHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgAlcoholicBeverageExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBreakfastAwayHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgBeefHomeExpenditure_2000:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:FIPS:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='State' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
          <aliases>
            <alias key='1' value='State' />
            <alias key='2' value='County' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='US_Population_by_county_2000.csv' id='US_Population_by_county_2000.csv_050750D02C90467D93235CCDB1AD1281'>
            <properties context=''>
              <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_county_2000.csv' table='[US_Population_by_county_2000#csv]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='GEOID' ordinal='0' />
                  <column datatype='string' name='NAME' ordinal='1' />
                  <column datatype='string' name='variable' ordinal='2' />
                  <column datatype='integer' name='value' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='US_Population_by_county_2010.csv' id='US_Population_by_county_2010.csv_06A10CA8C9F1465B96994EA45F37F7C7'>
            <properties context=''>
              <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_county_2010.csv' table='[US_Population_by_county_2010#csv]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='GEOID' ordinal='0' />
                  <column datatype='string' name='NAME' ordinal='1' />
                  <column datatype='string' name='variable' ordinal='2' />
                  <column datatype='integer' name='value' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='US_Population_by_state_2000.csv' id='US_Population_by_state_2000.csv_72C4D7473F0E4636BC485B9FFAD2AA41'>
            <properties context=''>
              <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_state_2000.csv' table='[US_Population_by_state_2000#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='GEOID' ordinal='0' />
                  <column datatype='string' name='NAME' ordinal='1' />
                  <column datatype='string' name='variable' ordinal='2' />
                  <column datatype='integer' name='value' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='US_Population_by_state_2010.csv' id='US_Population_by_state_2010.csv_5E79AD481AC84178A9AEC4F1E312D180'>
            <properties context=''>
              <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='US_Population_by_state_2010.csv' table='[US_Population_by_state_2010#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='GEOID' ordinal='0' />
                  <column datatype='string' name='NAME' ordinal='1' />
                  <column datatype='string' name='variable' ordinal='2' />
                  <column datatype='integer' name='value' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='esri_food_prefs.csv' id='esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31'>
            <properties context=''>
              <relation connection='textscan.14iq3n01445tmx113ac6h0os973b' name='esri_food_prefs.csv' table='[esri_food_prefs#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='FIPS' ordinal='0' />
                  <column datatype='string' name='stateFIPS' ordinal='1' />
                  <column datatype='string' name='countyFIPS' ordinal='2' />
                  <column datatype='integer' name='tractFIPS' ordinal='3' />
                  <column datatype='real' name='longitude' ordinal='4' />
                  <column datatype='real' name='latitude' ordinal='5' />
                  <column datatype='real' name='avgFoodExpenditure_2000' ordinal='6' />
                  <column datatype='real' name='avgFoodHomeExpenditure_2000' ordinal='7' />
                  <column datatype='real' name='avgMeatHomeExpenditure_2000' ordinal='8' />
                  <column datatype='real' name='avgFruitsVegetablesHomeExpenditure_2000' ordinal='9' />
                  <column datatype='real' name='avgFoodAwayExpenditure_2000' ordinal='10' />
                  <column datatype='real' name='avgFoodExpenditure_2010' ordinal='11' />
                  <column datatype='real' name='avgFoodHomeExpenditure_2010' ordinal='12' />
                  <column datatype='real' name='avgMeatHomeExpenditure_2010' ordinal='13' />
                  <column datatype='real' name='avgFruitsVegetablesHomeExpenditure_2010' ordinal='14' />
                  <column datatype='real' name='avgFoodAwayExpenditure_2010' ordinal='15' />
                  <column datatype='real' name='avgBakeryCerealHomeExpenditure_2000' ordinal='16' />
                  <column datatype='real' name='avgFlourHomeExpenditure_2000' ordinal='17' />
                  <column datatype='real' name='avgRiceHomeExpenditure_2000' ordinal='18' />
                  <column datatype='real' name='avgPastaCornMealHomeExpenditure_2000' ordinal='19' />
                  <column datatype='real' name='avgBreadHomeExpenditure_2000' ordinal='20' />
                  <column datatype='real' name='avgBeefHomeExpenditure_2000' ordinal='21' />
                  <column datatype='real' name='avgPorkHomeExpenditure_2000' ordinal='22' />
                  <column datatype='real' name='avgPoultryHomeExpenditure_2000' ordinal='23' />
                  <column datatype='real' name='avgSeafoodHomeExpenditure_2000' ordinal='24' />
                  <column datatype='real' name='avgEggsHomeExpenditure_2000' ordinal='25' />
                  <column datatype='real' name='avgDairyHomeExpenditure_2000' ordinal='26' />
                  <column datatype='real' name='avgLunchAwayHomeExpenditure_2000' ordinal='27' />
                  <column datatype='real' name='avgDinnerAwayHomeExpenditure_2000' ordinal='28' />
                  <column datatype='real' name='avgBreakfastAwayHomeExpenditure_2000' ordinal='29' />
                  <column datatype='real' name='avgAlcoholicBeverageExpenditure_2000' ordinal='30' />
                  <column datatype='real' name='avgBakeryCerealHomeExpenditure_2010' ordinal='31' />
                  <column datatype='real' name='avgFlourHomeExpenditure_2010' ordinal='32' />
                  <column datatype='real' name='avgRiceHomeExpenditure_2010' ordinal='33' />
                  <column datatype='real' name='avgPastaCornMealHomeExpenditure_2010' ordinal='34' />
                  <column datatype='real' name='avgBreadHomeExpenditure_2010' ordinal='35' />
                  <column datatype='real' name='avgBeefHomeExpenditure_2010' ordinal='36' />
                  <column datatype='real' name='avgPorkHomeExpenditure_2010' ordinal='37' />
                  <column datatype='real' name='avgPoultryHomeExpenditure_2010' ordinal='38' />
                  <column datatype='real' name='avgSeafoodHomeExpenditure_2010' ordinal='39' />
                  <column datatype='real' name='avgEggsHomeExpenditure_2010' ordinal='40' />
                  <column datatype='real' name='avgDairyHomeExpenditure_2010' ordinal='41' />
                  <column datatype='real' name='avgLunchAwayHomeExpenditure_2010' ordinal='42' />
                  <column datatype='real' name='avgDinnerAwayHomeExpenditure_2010' ordinal='43' />
                  <column datatype='real' name='avgBreakfastAwayHomeExpenditure_2010' ordinal='44' />
                  <column datatype='real' name='avgAlcoholicBeverageExpenditure_2010' ordinal='45' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[countyFIPS]' />
              <expression op='[GEOID]' />
            </expression>
            <first-end-point object-id='esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31' />
            <second-end-point object-id='US_Population_by_county_2000.csv_050750D02C90467D93235CCDB1AD1281' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[countyFIPS]' />
              <expression op='[GEOID (US_Population_by_county_2010.csv)]' />
            </expression>
            <first-end-point object-id='esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31' />
            <second-end-point object-id='US_Population_by_county_2010.csv_06A10CA8C9F1465B96994EA45F37F7C7' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[stateFIPS]' />
              <expression op='[GEOID (US_Population_by_state_2000.csv)]' />
            </expression>
            <first-end-point object-id='esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31' />
            <second-end-point object-id='US_Population_by_state_2000.csv_72C4D7473F0E4636BC485B9FFAD2AA41' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[stateFIPS]' />
              <expression op='[GEOID (US_Population_by_state_2010.csv)]' />
            </expression>
            <first-end-point object-id='esri_food_prefs.csv_43E0812D98CC4469989A69B7942FED31' />
            <second-end-point object-id='US_Population_by_state_2010.csv_5E79AD481AC84178A9AEC4F1E312D180' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='(Bar) Average Poultry Home Expenditure'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Poultry Home Expenditure</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
          </datasources>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='avgPoultryHomeExpenditure 2000' datatype='real' name='[avgPoultryHomeExpenditure_2000]' role='measure' type='quantitative' />
            <column caption='avgPoultryHomeExpenditure 2010' datatype='real' name='[avgPoultryHomeExpenditure_2010]' role='measure' type='quantitative' />
            <column-instance column='[avgPoultryHomeExpenditure_2000]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avgPoultryHomeExpenditure_2010]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' scope='rows' value='Total' />
            <format attr='title' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' scope='rows' value='' />
            <format attr='display' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk] + [federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk])</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='49.98' text-width='180'>
            <formatted-text>
              <run bold='true'>This is a 13% decrease from 2000.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]</field>
                      <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>11538504.060000073</value>
                    <value>&quot;[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='185' y='-35' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{1EE640A6-2B2B-4CF5-9650-62264495F1F1}' />
    </worksheet>
    <worksheet name='(County Map) Average Poultry Home Expenditure 2000'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>2000</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='State' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <aliases>
                <alias key='1' value='State' />
                <alias key='2' value='County' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='Map State or County Level' datatype='integer' name='[Calculation_1192890997300523009]' role='dimension' semantic-role='[State].[Name]' type='ordinal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='avgPoultryHomeExpenditure 2000' datatype='real' name='[avgPoultryHomeExpenditure_2000]' role='measure' type='quantitative' />
            <column caption='County FIPS' datatype='string' name='[countyFIPS]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[County].[Name]'>
                <semantic-value key='&quot;51515&quot;' value='&quot;Bedford&quot;' />
                <semantic-value key='&quot;51560&quot;' value='&quot;Oakland&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;46113&quot;' value='39.645545200000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;46113&quot;' value='-86.3049611' />
              </semantic-values>
            </column>
            <column-instance column='[Calculation_1192890997300523009]' derivation='None' name='[none:Calculation_1192890997300523009:ok]' pivot='key' type='ordinal' />
            <column-instance column='[countyFIPS]' derivation='None' name='[none:countyFIPS:nk]' pivot='key' type='nominal' />
            <column-instance column='[avgPoultryHomeExpenditure_2000]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]'>
            <groupfilter function='member' level='[none:Calculation_1192890997300523009:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' included-values='in-range'>
            <min>0.01</min>
            <max>476308.12000000011</max>
          </filter>
          <slices>
            <column>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]</column>
            <column>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]' field-type='quantitative' max='-87889818.440959752' min='-95683618.785790026' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]' field-type='quantitative' max='7795346.8144851103' min='1828448.8406381281' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' value='Total'>
              <formatted-text>
                <run fontalignment='1'>Total</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' />
              <text column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value:qk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:countyFIPS:nk]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='18' />
                <format attr='color' value='#000000' />
                <format attr='text-decoration' value='none' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{67F01512-F09F-4E80-A129-44DE31AB81A8}' />
    </worksheet>
    <worksheet name='(County Map) Average Poultry Home Expenditure 2010'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>2010</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='State' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <aliases>
                <alias key='1' value='State' />
                <alias key='2' value='County' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='Map State or County Level' datatype='integer' name='[Calculation_1192890997300523009]' role='dimension' semantic-role='[State].[Name]' type='ordinal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='avgPoultryHomeExpenditure 2010' datatype='real' name='[avgPoultryHomeExpenditure_2010]' role='measure' type='quantitative' />
            <column caption='County FIPS' datatype='string' name='[countyFIPS]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[County].[Name]'>
                <semantic-value key='&quot;51515&quot;' value='&quot;Bedford&quot;' />
                <semantic-value key='&quot;51560&quot;' value='&quot;Oakland&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;46113&quot;' value='39.645545200000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;46113&quot;' value='-86.3049611' />
              </semantic-values>
            </column>
            <column-instance column='[Calculation_1192890997300523009]' derivation='None' name='[none:Calculation_1192890997300523009:ok]' pivot='key' type='ordinal' />
            <column-instance column='[countyFIPS]' derivation='None' name='[none:countyFIPS:nk]' pivot='key' type='nominal' />
            <column-instance column='[avgPoultryHomeExpenditure_2010]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]'>
            <groupfilter function='member' level='[none:Calculation_1192890997300523009:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]' field-type='quantitative' max='-5807027.2872870108' min='-15560841.232180659' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]' field-type='quantitative' max='8074592.3255725708' min='2455230.6644435991' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' value='Total'>
              <formatted-text>
                <run fontalignment='1'>Total</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:countyFIPS:nk]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='18' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{40C01E9A-5672-43A0-BFAF-4557C57DE9A2}' />
    </worksheet>
    <worksheet name='(State Map) Average Poultry Home Expenditure 2000'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>2000</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='State' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <aliases>
                <alias key='1' value='State' />
                <alias key='2' value='County' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='Map State or County Level' datatype='integer' name='[Calculation_1192890997300523009]' role='dimension' semantic-role='[State].[Name]' type='ordinal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='NAME (US Population by state 2000.csv)' datatype='string' name='[NAME (US_Population_by_state_2000.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='avgPoultryHomeExpenditure 2000' datatype='real' name='[avgPoultryHomeExpenditure_2000]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1192890997300523009]' derivation='None' name='[none:Calculation_1192890997300523009:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME (US_Population_by_state_2000.csv)]' derivation='None' name='[none:NAME (US_Population_by_state_2000.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[stateFIPS]' derivation='None' name='[none:stateFIPS:nk]' pivot='key' type='nominal' />
            <column caption='State FIPS' datatype='string' name='[stateFIPS]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;01&quot;' value='&quot;Alabama&quot;' />
                <semantic-value key='&quot;04&quot;' value='&quot;Arizona&quot;' />
                <semantic-value key='&quot;05&quot;' value='&quot;Arkansas&quot;' />
                <semantic-value key='&quot;06&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;08&quot;' value='&quot;Colorado&quot;' />
                <semantic-value key='&quot;09&quot;' value='&quot;Connecticut&quot;' />
                <semantic-value key='&quot;10&quot;' value='&quot;Delaware&quot;' />
                <semantic-value key='&quot;11&quot;' value='&quot;District of Columbia&quot;' />
                <semantic-value key='&quot;12&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;13&quot;' value='&quot;Georgia&quot;' />
                <semantic-value key='&quot;16&quot;' value='&quot;Idaho&quot;' />
                <semantic-value key='&quot;17&quot;' value='&quot;Illinois&quot;' />
                <semantic-value key='&quot;18&quot;' value='&quot;Indiana&quot;' />
                <semantic-value key='&quot;19&quot;' value='&quot;Iowa&quot;' />
                <semantic-value key='&quot;20&quot;' value='&quot;Kansas&quot;' />
                <semantic-value key='&quot;21&quot;' value='&quot;Kentucky&quot;' />
                <semantic-value key='&quot;22&quot;' value='&quot;Louisiana&quot;' />
                <semantic-value key='&quot;23&quot;' value='&quot;Maine&quot;' />
                <semantic-value key='&quot;24&quot;' value='&quot;Maryland&quot;' />
                <semantic-value key='&quot;25&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;26&quot;' value='&quot;Michigan&quot;' />
                <semantic-value key='&quot;27&quot;' value='&quot;Minnesota&quot;' />
                <semantic-value key='&quot;28&quot;' value='&quot;Mississippi&quot;' />
                <semantic-value key='&quot;29&quot;' value='&quot;Missouri&quot;' />
                <semantic-value key='&quot;30&quot;' value='&quot;Montana&quot;' />
                <semantic-value key='&quot;31&quot;' value='&quot;Nebraska&quot;' />
                <semantic-value key='&quot;32&quot;' value='&quot;Nevada&quot;' />
                <semantic-value key='&quot;33&quot;' value='&quot;New Hampshire&quot;' />
                <semantic-value key='&quot;34&quot;' value='&quot;New Jersey&quot;' />
                <semantic-value key='&quot;35&quot;' value='&quot;New Mexico&quot;' />
                <semantic-value key='&quot;36&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;37&quot;' value='&quot;North Carolina&quot;' />
                <semantic-value key='&quot;38&quot;' value='&quot;North Dakota&quot;' />
                <semantic-value key='&quot;39&quot;' value='&quot;Ohio&quot;' />
                <semantic-value key='&quot;40&quot;' value='&quot;Oklahoma&quot;' />
                <semantic-value key='&quot;41&quot;' value='&quot;Oregon&quot;' />
                <semantic-value key='&quot;42&quot;' value='&quot;Pennsylvania&quot;' />
                <semantic-value key='&quot;44&quot;' value='&quot;Rhode Island&quot;' />
                <semantic-value key='&quot;45&quot;' value='&quot;South Carolina&quot;' />
                <semantic-value key='&quot;46&quot;' value='&quot;South Dakota&quot;' />
                <semantic-value key='&quot;47&quot;' value='&quot;Tennessee&quot;' />
                <semantic-value key='&quot;48&quot;' value='&quot;Texas&quot;' />
                <semantic-value key='&quot;49&quot;' value='&quot;Utah&quot;' />
                <semantic-value key='&quot;50&quot;' value='&quot;Vermont&quot;' />
                <semantic-value key='&quot;51&quot;' value='&quot;Virginia&quot;' />
                <semantic-value key='&quot;53&quot;' value='&quot;Washington&quot;' />
                <semantic-value key='&quot;54&quot;' value='&quot;West Virginia&quot;' />
                <semantic-value key='&quot;55&quot;' value='&quot;Wisconsin&quot;' />
                <semantic-value key='&quot;56&quot;' value='&quot;Wyoming&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[avgPoultryHomeExpenditure_2000]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2000:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]'>
            <groupfilter function='member' level='[none:Calculation_1192890997300523009:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' included-values='in-range'>
            <min>0.01</min>
            <max>476308.12000000011</max>
          </filter>
          <slices>
            <column>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]</column>
            <column>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]' field-type='quantitative' max='-86880959.954646021' min='-95365555.649734005' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]' field-type='quantitative' max='6811867.9876978192' min='2660693.5348409666' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' value='Total'>
              <formatted-text>
                <run fontalignment='1'>Total</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:nk]' />
              <text column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:NAME (US_Population_by_state_2000.csv):nk]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[SUM(<avgPoultryHomeExpenditure2000>)]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='18' />
                <format attr='color' value='#000000' />
                <format attr='text-decoration' value='none' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3BFD2B26-2903-4197-97AC-D2F9564BB4D3}' />
    </worksheet>
    <worksheet name='(State Map) Average Poultry Home Expenditure 2000 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>2000</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='County FIPS' datatype='string' name='[countyFIPS]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[County].[Name]'>
                <semantic-value key='&quot;51515&quot;' value='&quot;Bedford&quot;' />
                <semantic-value key='&quot;51560&quot;' value='&quot;Oakland&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;46113&quot;' value='39.645545200000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;46113&quot;' value='-86.3049611' />
              </semantic-values>
            </column>
            <column-instance column='[countyFIPS]' derivation='None' name='[none:countyFIPS:nk]' pivot='key' type='nominal' />
            <column-instance column='[stateFIPS]' derivation='None' name='[none:stateFIPS:nk]' pivot='key' type='nominal' />
            <column caption='State FIPS' datatype='string' name='[stateFIPS]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;01&quot;' value='&quot;Alabama&quot;' />
                <semantic-value key='&quot;04&quot;' value='&quot;Arizona&quot;' />
                <semantic-value key='&quot;05&quot;' value='&quot;Arkansas&quot;' />
                <semantic-value key='&quot;06&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;08&quot;' value='&quot;Colorado&quot;' />
                <semantic-value key='&quot;09&quot;' value='&quot;Connecticut&quot;' />
                <semantic-value key='&quot;10&quot;' value='&quot;Delaware&quot;' />
                <semantic-value key='&quot;11&quot;' value='&quot;District of Columbia&quot;' />
                <semantic-value key='&quot;12&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;13&quot;' value='&quot;Georgia&quot;' />
                <semantic-value key='&quot;16&quot;' value='&quot;Idaho&quot;' />
                <semantic-value key='&quot;17&quot;' value='&quot;Illinois&quot;' />
                <semantic-value key='&quot;18&quot;' value='&quot;Indiana&quot;' />
                <semantic-value key='&quot;19&quot;' value='&quot;Iowa&quot;' />
                <semantic-value key='&quot;20&quot;' value='&quot;Kansas&quot;' />
                <semantic-value key='&quot;21&quot;' value='&quot;Kentucky&quot;' />
                <semantic-value key='&quot;22&quot;' value='&quot;Louisiana&quot;' />
                <semantic-value key='&quot;23&quot;' value='&quot;Maine&quot;' />
                <semantic-value key='&quot;24&quot;' value='&quot;Maryland&quot;' />
                <semantic-value key='&quot;25&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;26&quot;' value='&quot;Michigan&quot;' />
                <semantic-value key='&quot;27&quot;' value='&quot;Minnesota&quot;' />
                <semantic-value key='&quot;28&quot;' value='&quot;Mississippi&quot;' />
                <semantic-value key='&quot;29&quot;' value='&quot;Missouri&quot;' />
                <semantic-value key='&quot;30&quot;' value='&quot;Montana&quot;' />
                <semantic-value key='&quot;31&quot;' value='&quot;Nebraska&quot;' />
                <semantic-value key='&quot;32&quot;' value='&quot;Nevada&quot;' />
                <semantic-value key='&quot;33&quot;' value='&quot;New Hampshire&quot;' />
                <semantic-value key='&quot;34&quot;' value='&quot;New Jersey&quot;' />
                <semantic-value key='&quot;35&quot;' value='&quot;New Mexico&quot;' />
                <semantic-value key='&quot;36&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;37&quot;' value='&quot;North Carolina&quot;' />
                <semantic-value key='&quot;38&quot;' value='&quot;North Dakota&quot;' />
                <semantic-value key='&quot;39&quot;' value='&quot;Ohio&quot;' />
                <semantic-value key='&quot;40&quot;' value='&quot;Oklahoma&quot;' />
                <semantic-value key='&quot;41&quot;' value='&quot;Oregon&quot;' />
                <semantic-value key='&quot;42&quot;' value='&quot;Pennsylvania&quot;' />
                <semantic-value key='&quot;44&quot;' value='&quot;Rhode Island&quot;' />
                <semantic-value key='&quot;45&quot;' value='&quot;South Carolina&quot;' />
                <semantic-value key='&quot;46&quot;' value='&quot;South Dakota&quot;' />
                <semantic-value key='&quot;47&quot;' value='&quot;Tennessee&quot;' />
                <semantic-value key='&quot;48&quot;' value='&quot;Texas&quot;' />
                <semantic-value key='&quot;49&quot;' value='&quot;Utah&quot;' />
                <semantic-value key='&quot;50&quot;' value='&quot;Vermont&quot;' />
                <semantic-value key='&quot;51&quot;' value='&quot;Virginia&quot;' />
                <semantic-value key='&quot;53&quot;' value='&quot;Washington&quot;' />
                <semantic-value key='&quot;54&quot;' value='&quot;West Virginia&quot;' />
                <semantic-value key='&quot;55&quot;' value='&quot;Wisconsin&quot;' />
                <semantic-value key='&quot;56&quot;' value='&quot;Wyoming&quot;' />
              </semantic-values>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='18' />
                <format attr='color' value='#000000' />
                <format attr='text-decoration' value='none' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:nk]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='18' />
                <format attr='color' value='#000000' />
                <format attr='text-decoration' value='none' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:countyFIPS:nk]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='18' />
                <format attr='color' value='#000000' />
                <format attr='text-decoration' value='none' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)] + [federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)])</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DC0E1AD8-02F5-4E3E-80B3-03631F9A6E63}' />
    </worksheet>
    <worksheet name='(State Map) Average Poultry Home Expenditure 2010'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>2010</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='State' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <aliases>
                <alias key='1' value='State' />
                <alias key='2' value='County' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='Map State or County Level' datatype='integer' name='[Calculation_1192890997300523009]' role='dimension' semantic-role='[State].[Name]' type='ordinal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='avgPoultryHomeExpenditure 2010' datatype='real' name='[avgPoultryHomeExpenditure_2010]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1192890997300523009]' derivation='None' name='[none:Calculation_1192890997300523009:ok]' pivot='key' type='ordinal' />
            <column-instance column='[stateFIPS]' derivation='None' name='[none:stateFIPS:nk]' pivot='key' type='nominal' />
            <column caption='State FIPS' datatype='string' name='[stateFIPS]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;01&quot;' value='&quot;Alabama&quot;' />
                <semantic-value key='&quot;04&quot;' value='&quot;Arizona&quot;' />
                <semantic-value key='&quot;05&quot;' value='&quot;Arkansas&quot;' />
                <semantic-value key='&quot;06&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;08&quot;' value='&quot;Colorado&quot;' />
                <semantic-value key='&quot;09&quot;' value='&quot;Connecticut&quot;' />
                <semantic-value key='&quot;10&quot;' value='&quot;Delaware&quot;' />
                <semantic-value key='&quot;11&quot;' value='&quot;District of Columbia&quot;' />
                <semantic-value key='&quot;12&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;13&quot;' value='&quot;Georgia&quot;' />
                <semantic-value key='&quot;16&quot;' value='&quot;Idaho&quot;' />
                <semantic-value key='&quot;17&quot;' value='&quot;Illinois&quot;' />
                <semantic-value key='&quot;18&quot;' value='&quot;Indiana&quot;' />
                <semantic-value key='&quot;19&quot;' value='&quot;Iowa&quot;' />
                <semantic-value key='&quot;20&quot;' value='&quot;Kansas&quot;' />
                <semantic-value key='&quot;21&quot;' value='&quot;Kentucky&quot;' />
                <semantic-value key='&quot;22&quot;' value='&quot;Louisiana&quot;' />
                <semantic-value key='&quot;23&quot;' value='&quot;Maine&quot;' />
                <semantic-value key='&quot;24&quot;' value='&quot;Maryland&quot;' />
                <semantic-value key='&quot;25&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;26&quot;' value='&quot;Michigan&quot;' />
                <semantic-value key='&quot;27&quot;' value='&quot;Minnesota&quot;' />
                <semantic-value key='&quot;28&quot;' value='&quot;Mississippi&quot;' />
                <semantic-value key='&quot;29&quot;' value='&quot;Missouri&quot;' />
                <semantic-value key='&quot;30&quot;' value='&quot;Montana&quot;' />
                <semantic-value key='&quot;31&quot;' value='&quot;Nebraska&quot;' />
                <semantic-value key='&quot;32&quot;' value='&quot;Nevada&quot;' />
                <semantic-value key='&quot;33&quot;' value='&quot;New Hampshire&quot;' />
                <semantic-value key='&quot;34&quot;' value='&quot;New Jersey&quot;' />
                <semantic-value key='&quot;35&quot;' value='&quot;New Mexico&quot;' />
                <semantic-value key='&quot;36&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;37&quot;' value='&quot;North Carolina&quot;' />
                <semantic-value key='&quot;38&quot;' value='&quot;North Dakota&quot;' />
                <semantic-value key='&quot;39&quot;' value='&quot;Ohio&quot;' />
                <semantic-value key='&quot;40&quot;' value='&quot;Oklahoma&quot;' />
                <semantic-value key='&quot;41&quot;' value='&quot;Oregon&quot;' />
                <semantic-value key='&quot;42&quot;' value='&quot;Pennsylvania&quot;' />
                <semantic-value key='&quot;44&quot;' value='&quot;Rhode Island&quot;' />
                <semantic-value key='&quot;45&quot;' value='&quot;South Carolina&quot;' />
                <semantic-value key='&quot;46&quot;' value='&quot;South Dakota&quot;' />
                <semantic-value key='&quot;47&quot;' value='&quot;Tennessee&quot;' />
                <semantic-value key='&quot;48&quot;' value='&quot;Texas&quot;' />
                <semantic-value key='&quot;49&quot;' value='&quot;Utah&quot;' />
                <semantic-value key='&quot;50&quot;' value='&quot;Vermont&quot;' />
                <semantic-value key='&quot;51&quot;' value='&quot;Virginia&quot;' />
                <semantic-value key='&quot;53&quot;' value='&quot;Washington&quot;' />
                <semantic-value key='&quot;54&quot;' value='&quot;West Virginia&quot;' />
                <semantic-value key='&quot;55&quot;' value='&quot;Wisconsin&quot;' />
                <semantic-value key='&quot;56&quot;' value='&quot;Wyoming&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[avgPoultryHomeExpenditure_2010]' derivation='Sum' name='[sum:avgPoultryHomeExpenditure_2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value (US_Population_by_state_2010.csv)]' derivation='Sum' name='[sum:value (US_Population_by_state_2010.csv):qk]' pivot='key' type='quantitative' />
            <column caption='value (US Population by state 2010.csv)' datatype='integer' name='[value (US_Population_by_state_2010.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]'>
            <groupfilter function='member' level='[none:Calculation_1192890997300523009:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]' field-type='quantitative' max='-6836887.3015074646' min='-15277172.003803585' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]' field-type='quantitative' max='6764775.8405518243' min='2635280.9901025221' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' value='Total'>
              <formatted-text>
                <run fontalignment='1'>Total</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' />
              <text column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_state_2010.csv):qk]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:nk]' />
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='18' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{87F8D125-17FA-464E-8059-2D850364B898}' />
    </worksheet>
    <worksheet name='Population by State 2000'>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='NAME (US Population by state 2000.csv)' datatype='string' name='[NAME (US_Population_by_state_2000.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[NAME (US_Population_by_state_2000.csv)]' derivation='None' name='[none:NAME (US_Population_by_state_2000.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[value (US_Population_by_state_2000.csv)]' derivation='Sum' name='[sum:value (US_Population_by_state_2000.csv):qk]' pivot='key' type='quantitative' />
            <column caption='value (US Population by state 2000.csv)' datatype='integer' name='[value (US_Population_by_state_2000.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:NAME (US_Population_by_state_2000.csv):nk]' />
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_state_2000.csv):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9E2BEA10-4903-4775-A4D8-D745BEADDA19}' />
    </worksheet>
    <worksheet name='Population by State 2010'>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='NAME (US Population by state 2010.csv)' datatype='string' name='[NAME (US_Population_by_state_2010.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[NAME (US_Population_by_state_2010.csv)]' derivation='None' name='[none:NAME (US_Population_by_state_2010.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[value (US_Population_by_state_2010.csv)]' derivation='Sum' name='[sum:value (US_Population_by_state_2010.csv):qk]' pivot='key' type='quantitative' />
            <column caption='value (US Population by state 2010.csv)' datatype='integer' name='[value (US_Population_by_state_2010.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:NAME (US_Population_by_state_2010.csv):nk]' />
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_state_2010.csv):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FD533162-FB19-4788-ADC5-930BA714E96B}' />
    </worksheet>
    <worksheet name='Population by county 2000'>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='GEOID (US Population by county 2010.csv)' datatype='string' name='[GEOID (US_Population_by_county_2010.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[GEOID (US_Population_by_county_2010.csv)]' derivation='None' name='[none:GEOID (US_Population_by_county_2010.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[value (US_Population_by_county_2010.csv)]' derivation='Sum' name='[sum:value (US_Population_by_county_2010.csv):qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[value (US_Population_by_county_2010.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:GEOID (US_Population_by_county_2010.csv):nk]' />
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_county_2010.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{02525A6E-5567-453C-9E04-C88CC9DDD360}' />
    </worksheet>
    <worksheet name='Population by county 2010'>
      <table>
        <view>
          <datasources>
            <datasource caption='esri_food_prefs' name='federated.18jpylb0nfe6cr1amdut11q8o1qy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18jpylb0nfe6cr1amdut11q8o1qy'>
            <column caption='GEOID (US Population by county 2010.csv)' datatype='string' name='[GEOID (US_Population_by_county_2010.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[GEOID (US_Population_by_county_2010.csv)]' derivation='None' name='[none:GEOID (US_Population_by_county_2010.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[value (US_Population_by_county_2010.csv)]' derivation='Sum' name='[sum:value (US_Population_by_county_2010.csv):qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[value (US_Population_by_county_2010.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <geometry column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Geometry (generated)]' />
              <lod column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:GEOID (US_Population_by_county_2010.csv):nk]' />
              <color column='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_county_2010.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Latitude (generated)]</rows>
        <cols>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CE37815A-29AB-4491-B79F-B8E22B67887B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>National Average Poultry Home Expenditure</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='State' caption='MapStateCountySwitcher' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
          <aliases>
            <alias key='1' value='State' />
            <alias key='2' value='County' />
          </aliases>
          <members>
            <member alias='State' value='1' />
            <member alias='County' value='2' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='37' param='vert' type-v2='layout-flow' w='99050' x='475' y='893'>
            <zone h='4576' id='38' type-v2='title' w='99050' x='475' y='893'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93638' id='35' type-v2='layout-basic' w='99050' x='475' y='5469'>
              <zone h='46821' id='26' param='vert' type-v2='layout-flow' w='90972' x='475' y='52286'>
                <zone h='46821' id='24' type-v2='layout-basic' w='90972' x='475' y='52286'>
                  <zone h='46821' id='19' param='horz' type-v2='layout-flow' w='90972' x='475' y='52286'>
                    <zone h='46821' id='13' type-v2='layout-basic' w='90972' x='475' y='52286'>
                      <zone h='46821' id='7' param='horz' type-v2='layout-flow' w='45483' x='475' y='52286'>
                        <zone h='46821' id='3' param='vert' type-v2='layout-flow' w='45483' x='475' y='52286'>
                          <zone h='112' id='10' name='(County Map) Average Poultry Home Expenditure 2000' show-title='false' w='45483' x='475' y='52286'>
                            <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='46709' id='5' name='(State Map) Average Poultry Home Expenditure 2000' show-title='false' w='45483' x='475' y='52398'>
                            <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                      <zone h='46821' id='11' param='vert' type-v2='layout-flow' w='45489' x='45958' y='52286'>
                        <zone h='112' id='17' name='(County Map) Average Poultry Home Expenditure 2010' show-title='false' w='45489' x='45958' y='52286'>
                          <layout-cache has-max-size-h='true' maxheight='1' minheight='1' type-h='scalable' type-w='fixed' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='46709' id='12' name='(State Map) Average Poultry Home Expenditure 2010' show-title='false' w='45489' x='45958' y='52398'>
                          <layout-cache minheight='201' minwidth='202' type-h='scalable' type-w='scalable' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='46821' id='28' type-v2='text' w='8078' x='91447' y='52286'>
                <formatted-text>
                  <run>These graphs explore the data at the state and county level for both 2000 and 2010.
The state with the largest average poultry expenditure in 2000 was Massachusetts whereas in 2010 it is California.
The state with the lowest average poultry expenditure was Wyoming in both 2000 and 2010.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3406' id='29' type-v2='text' w='45513' x='475' y='48880'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>2000</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3406' id='30' type-v2='text' w='53537' x='45988' y='48880'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>2010</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35750' id='31' name='(Bar) Average Poultry Home Expenditure' show-title='false' w='85472' x='475' y='5469'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3406' id='33' type-v2='text' w='99050' x='475' y='45474'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000' fontsize='12'>State and County Exploration</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4255' id='34' type-v2='empty' w='99050' x='475' y='41219'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35750' id='39' type-v2='text' w='13578' x='85947' y='5469'>
                <formatted-text>
                  <run>This graph shows the average poultry home expenditure for the United States by 2000 and 2010.
From this graph we can see that the U.S. saw a decrease in the average poultry home expenditure.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='3460' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='23932' x='34933' y='46540'>
          <formatted-text>
            <run fontalignment='1'>Level</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true'>National Average Poultry Home Expenditure</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1950' minheight='1950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='49' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98214' id='48' param='vert' type-v2='layout-flow' w='99050' x='475' y='893'>
                <zone h='4576' id='38' type-v2='title' w='99050' x='475' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='278' h='35750' id='31' is-fixed='true' name='(Bar) Average Poultry Home Expenditure' show-title='false' w='85472' x='475' y='5469'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='35750' id='39' type-v2='text' w='13578' x='85947' y='5469'>
                  <formatted-text>
                    <run>This graph shows the average poultry home expenditure for the United States by 2000 and 2010.
From this graph we can see that the U.S. saw a decrease in the average poultry home expenditure.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3406' id='33' type-v2='text' w='99050' x='475' y='45474'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='12'>State and County Exploration</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='3460' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='23932' x='34933' y='46540'>
                  <formatted-text>
                    <run fontalignment='1'>Level</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3406' id='29' type-v2='text' w='45513' x='475' y='48880'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>2000</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3406' id='30' type-v2='text' w='53537' x='45988' y='48880'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>2010</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='112' id='10' is-fixed='true' name='(County Map) Average Poultry Home Expenditure 2000' show-title='false' w='45483' x='475' y='52286'>
                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='112' id='17' is-fixed='true' name='(County Map) Average Poultry Home Expenditure 2010' show-title='false' w='45489' x='45958' y='52286'>
                  <layout-cache has-max-size-h='true' maxheight='1' minheight='1' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='46821' id='28' type-v2='text' w='8078' x='91447' y='52286'>
                  <formatted-text>
                    <run>These graphs explore the data at the state and county level for both 2000 and 2010.
The state with the largest average poultry expenditure in 2000 was Massachusetts whereas in 2010 it is California.
The state with the lowest average poultry expenditure was Wyoming in both 2000 and 2010.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46709' id='5' is-fixed='true' name='(State Map) Average Poultry Home Expenditure 2000' show-title='false' w='45483' x='475' y='52398'>
                  <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46709' id='12' is-fixed='true' name='(State Map) Average Poultry Home Expenditure 2010' show-title='false' w='45489' x='45958' y='52398'>
                  <layout-cache minheight='201' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{89EB4396-0315-4C52-9EEB-74A9A15BDEBA}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='(Bar) Average Poultry Home Expenditure'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95160733-32F0-4FBE-925B-C00F8E7AC148}' />
    </window>
    <window class='worksheet' name='(State Map) Average Poultry Home Expenditure 2000 (2)'>
      <cards>
        <edge name='left'>
          <strip size='222'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:countyFIPS:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A8275EDC-7E9A-4EA6-894E-EEE2D950E962}' />
    </window>
    <window class='worksheet' name='(State Map) Average Poultry Home Expenditure 2000'>
      <cards>
        <edge name='left'>
          <strip size='222'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:NAME (US_Population_by_state_2000.csv):nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{656926F4-B0D4-43E9-8A5E-1F8B10A03E3C}' />
    </window>
    <window class='worksheet' name='(State Map) Average Poultry Home Expenditure 2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:stateFIPS:nk]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{92DBE758-A21C-42B3-9047-F824048515CB}' />
    </window>
    <window class='worksheet' name='(County Map) Average Poultry Home Expenditure 2000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2000:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{12B61712-AA97-45E4-9356-64EFB0904849}' />
    </window>
    <window class='worksheet' name='(County Map) Average Poultry Home Expenditure 2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[none:Calculation_1192890997300523009:ok]</field>
            <field>[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:avgPoultryHomeExpenditure_2010:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3A806237-755E-473C-A207-0B2BC23AD302}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='(Bar) Average Poultry Home Expenditure'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(County Map) Average Poultry Home Expenditure 2000'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(County Map) Average Poultry Home Expenditure 2010'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(State Map) Average Poultry Home Expenditure 2000'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(State Map) Average Poultry Home Expenditure 2010'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{56C5D85B-FF29-4BC0-9A3F-2C3F1E7E837A}' />
    </window>
    <window class='worksheet' name='Population by county 2000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_county_2010.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B8028DF8-177B-40E4-B9F5-082D9A83D1D6}' />
    </window>
    <window class='worksheet' name='Population by county 2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_county_2010.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BA48D3E3-54FF-4BA2-A6FB-FD5C0F505211}' />
    </window>
    <window class='worksheet' name='Population by State 2000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_state_2000.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{574B6EF4-1A4F-44FD-B2AB-3F5918C14DB0}' />
    </window>
    <window class='worksheet' name='Population by State 2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18jpylb0nfe6cr1amdut11q8o1qy].[sum:value (US_Population_by_state_2010.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D7F09E8D-D46D-4ABF-9226-93F37C6E2EC5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='(Bar) Average Poultry Home Expenditure' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(County Map) Average Poultry Home Expenditure 2000' width='192'>
      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
      5Ljj88nFKg+2unx8voLjBeiqzFF7yGDo4QcBaigjpCsJCdePlF5ViUyymqPw4qCDaXvcWCvx
      bK9HIfumEv3R+TI//7rOTNFgrpTB9QI+PFfhuGvzV/cOMFSFrzZayBLUChphCA8222jKuPKa
      ZCzgDQYBGLoBsixhuz6yJHHQtrmwUGC5luXuRhPL8dFVmY2DPpZ7wryFjMrVlUh0UhUJzw9R
      FbDdiOkymsztCxW+fNni6kjE2m2YBGGIaXtnDPC+UCiVsI8CLs/IwD4Apr2Lv3WHf3+3zvLy
      dazea9ZqJ+c82R9ybr6ILEtcWy7w1UaL447NUjVLJa9y51WbmaJOb2hSKUQzrCyFPNlqsl23
      CUMoZFX2mhbn5/NYto/t+nz9usN//ZMV6l2bo070/4P1ErMlgz+8OcPDrR6XlvJ4fsjno1nZ
      cQP+5IN5JEBJrES/f2OWr19H4ornB+w1LRxvfLXJGSdk9/fPG+iaTLvv8uB1m6yu8PrY5LMr
      NWzX59F2h43DAT3Lp5RX+fBchWrX5tXhgAsL+TFmyuoK9faAxVoOwij+yrKjIrnrsxl+86yB
      F4RcXy1yfr7Ak53OmRXofSEMQ372f/+f1LwtJCmaqSUp0hFsL+Trg4BKJmAtL6xFIbstn3/x
      2TryyLT4ZKdHtWgwX9J5uN3Ddn2WalkOWhZZXaHRtZFCj9+/VuHBtslH56s83OqQz+oMHZ8L
      CwV2GiY5Q+W4M+Tpbo//7g/WAXi41ebmWiRC6KrCrfXxPQLuvmpx+0J14n19+aJJPqOycdjn
      9oUqy7Xs2LlPd3tcWymyXTdpD1wg5MNzldF1OxQyKufmTyw6dzda3L54cq2O6fCrJ00MTSZv
      KLGY5wUhlu0zGHoYqoTrh6iKTCGj0hvpPZtHA/7s0yVURebhVvtsBXhfkCSJ2z/5p/D0z6mO
      zIF3X7UIgpDdtsNMXqfTOOJitY0iRyJFDw3PW0GWoNl3KWUVajmZRtdCkwNsQuYKCosjD/Sj
      7Q43R8u+wOpMlrYVcGW5yPP9HtdXor3QlqoZmj2Hjulg2T6vDgfYrk/H9JgvKzzc6nBuPo8f
      wIPXLQqGwp2NBiDzgwRx/uppg5ValuWZLAuVDFvHEZEHYchCJcP2sUkIPN7pMls0+PBcjvub
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='(County Map) Average Poultry Home Expenditure 2010' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='(State Map) Average Poultry Home Expenditure 2000' width='192'>
      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
      a/gqdwQ6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='(State Map) Average Poultry Home Expenditure 2000 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Population by State 2000' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Population by State 2010' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Population by county 2000' width='192'>
      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
      C81/B+ks1SuUi4bPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Population by county 2010' width='192'>
      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
      C81/B+ks1SuUi4bPAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
